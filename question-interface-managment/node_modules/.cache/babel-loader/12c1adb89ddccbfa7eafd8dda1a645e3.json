{"ast":null,"code":"var _jsxFileName = \"/Users/palp/now/QMI/question-interface-managment/src/components/previews/LikertPreview.js\";\nimport React, { useContext } from \"react\";\nimport { Grid, Typography, Radio, Checkbox } from \"@material-ui/core\";\nimport { SettingsContext } from \"../../contexts/SettingsContext\";\n\nconst LikertPreview = ({\n  question\n}) => {\n  const {\n    settings\n  } = useContext(SettingsContext);\n\n  const renderBox = () => React.createElement(Grid, {\n    item: true,\n    xs: \"auto\",\n    style: {\n      textAlign: \"center\",\n      background: settings.showGridAreas ? \"grey\" : \"transparent\",\n      opacity: settings.showGridAreas ? \"0.8\" : \"1.0\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(Radio, {\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }));\n\n  const renderText = option => React.createElement(Grid, {\n    item: true,\n    xs: \"auto\",\n    style: {\n      wordWrap: \"break-word\",\n      textAlign: \"left\",\n      background: settings.showGridAreas ? \"mediumpurple\" : \"transparent\",\n      opacity: settings.showGridAreas ? \"0.8\" : \"1.0\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"body1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, option));\n\n  const renderOption = option => React.createElement(Grid, {\n    item: true,\n    xs: \"auto\",\n    style: {\n      background: settings.showGridAreas ? \"yellow\" : \"transparent\",\n      opacity: settings.showGridAreas ? \"0.8\" : \"1.0\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    justify: \"flex-start\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, renderBox(), renderText(option)));\n\n  return React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"space-evenly\",\n    style: {\n      background: settings.showGridAreas ? \"pink\" : \"transparent\",\n      opacity: settings.showGridAreas ? \"0.8\" : \"1.0\"\n    },\n    spacing: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, question.options.map(option => renderOption(option)));\n};\n\nexport default LikertPreview;","map":{"version":3,"sources":["/Users/palp/now/QMI/question-interface-managment/src/components/previews/LikertPreview.js"],"names":["React","useContext","Grid","Typography","Radio","Checkbox","SettingsContext","LikertPreview","question","settings","renderBox","textAlign","background","showGridAreas","opacity","renderText","option","wordWrap","renderOption","options","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,KAA3B,EAAkCC,QAAlC,QAAkD,mBAAlD;AACA,SAASC,eAAT,QAAgC,gCAAhC;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACtC,QAAM;AAAEC,IAAAA;AAAF,MAAeR,UAAU,CAACK,eAAD,CAA/B;;AACA,QAAMI,SAAS,GAAG,MAChB,oBAAC,IAAD;AACA,IAAA,IAAI,MADJ;AAEA,IAAA,EAAE,EAAE,MAFJ;AAGA,IAAA,KAAK,EAAE;AACLC,MAAAA,SAAS,EAAE,QADN;AAELC,MAAAA,UAAU,EAAEH,QAAQ,CAACI,aAAT,GAAyB,MAAzB,GAAkC,aAFzC;AAGLC,MAAAA,OAAO,EAAEL,QAAQ,CAACI,aAAT,GAAyB,KAAzB,GAAiC;AAHrC,KAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASA,oBAAC,KAAD;AAAO,IAAA,QAAQ,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATA,CADF;;AAaA,QAAME,UAAU,GAAIC,MAAD,IACjB,oBAAC,IAAD;AACA,IAAA,IAAI,MADJ;AAEA,IAAA,EAAE,EAAE,MAFJ;AAGA,IAAA,KAAK,EAAE;AACLC,MAAAA,QAAQ,EAAE,YADL;AAELN,MAAAA,SAAS,EAAE,MAFN;AAGLC,MAAAA,UAAU,EAAEH,QAAQ,CAACI,aAAT,GACR,cADQ,GAER,aALC;AAMLC,MAAAA,OAAO,EAAEL,QAAQ,CAACI,aAAT,GAAyB,KAAzB,GAAiC;AANrC,KAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYA,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BG,MAA7B,CAZA,CADF;;AAgBA,QAAME,YAAY,GAAIF,MAAD,IACnB,oBAAC,IAAD;AACE,IAAA,IAAI,MADN;AAEE,IAAA,EAAE,EAAE,MAFN;AAIE,IAAA,KAAK,EAAE;AACLJ,MAAAA,UAAU,EAAEH,QAAQ,CAACI,aAAT,GAAyB,QAAzB,GAAoC,aAD3C;AAELC,MAAAA,OAAO,EAAEL,QAAQ,CAACI,aAAT,GAAyB,KAAzB,GAAiC;AAFrC,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE,oBAAC,IAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,SAAS,EAAC,QAFZ;AAGE,IAAA,OAAO,EAAC,YAHV;AAIE,IAAA,UAAU,EAAC,QAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGH,SAAS,EANZ,EAOGK,UAAU,CAACC,MAAD,CAPb,CATF,CADF;;AAqBA,SACE,oBAAC,IAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,SAAS,EAAC,KAFZ;AAGE,IAAA,OAAO,EAAC,cAHV;AAIE,IAAA,KAAK,EAAE;AACLJ,MAAAA,UAAU,EAAEH,QAAQ,CAACI,aAAT,GAAyB,MAAzB,GAAkC,aADzC;AAELC,MAAAA,OAAO,EAAEL,QAAQ,CAACI,aAAT,GAAyB,KAAzB,GAAiC;AAFrC,KAJT;AAQE,IAAA,OAAO,EAAE,CARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUGL,QAAQ,CAACW,OAAT,CAAiBC,GAAjB,CAAqBJ,MAAM,IAAKE,YAAY,CAACF,MAAD,CAA5C,CAVH,CADF;AAcD,CAlED;;AAoEA,eAAeT,aAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport { Grid, Typography, Radio, Checkbox } from \"@material-ui/core\";\nimport { SettingsContext } from \"../../contexts/SettingsContext\";\n\nconst LikertPreview = ({ question }) => {\n  const { settings } = useContext(SettingsContext);\n  const renderBox = () =>\n    <Grid\n    item\n    xs={\"auto\"}\n    style={{\n      textAlign: \"center\",\n      background: settings.showGridAreas ? \"grey\" : \"transparent\",\n      opacity: settings.showGridAreas ? \"0.8\" : \"1.0\"\n    }}\n  >\n    <Radio disabled />\n  </Grid>;\n\n  const renderText = (option) =>\n    <Grid\n    item\n    xs={\"auto\"}\n    style={{\n      wordWrap: \"break-word\",\n      textAlign: \"left\",\n      background: settings.showGridAreas\n        ? \"mediumpurple\"\n        : \"transparent\",\n      opacity: settings.showGridAreas ? \"0.8\" : \"1.0\"\n    }}\n  >\n    <Typography variant=\"body1\">{option}</Typography>\n  </Grid>;\n\n  const renderOption = (option) =>\n    <Grid\n      item\n      xs={\"auto\"}\n\n      style={{\n        background: settings.showGridAreas ? \"yellow\" : \"transparent\",\n        opacity: settings.showGridAreas ? \"0.8\" : \"1.0\"\n      }}\n    >\n      <Grid\n        container\n        direction=\"column\"\n        justify=\"flex-start\"\n        alignItems=\"center\"\n      >\n        {renderBox()}\n        {renderText(option)}\n      </Grid>\n    </Grid>\n\n  return (\n    <Grid\n      container\n      direction=\"row\"\n      justify=\"space-evenly\"\n      style={{\n        background: settings.showGridAreas ? \"pink\" : \"transparent\",\n        opacity: settings.showGridAreas ? \"0.8\" : \"1.0\"\n      }}\n      spacing={1}\n    >\n      {question.options.map(option => (renderOption(option)))}\n    </Grid>\n  );\n};\n\nexport default LikertPreview;\n"]},"metadata":{},"sourceType":"module"}