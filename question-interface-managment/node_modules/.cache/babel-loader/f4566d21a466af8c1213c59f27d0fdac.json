{"ast":null,"code":"var _jsxFileName = \"/Users/palp/now/web/10mar/src/App.js\";\nimport React, { useState } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport ButtonAppBar from './components/ButtonAppBar';\nimport LoginForm from './components/LoginForm';\nimport UserHome from './components/UserHome';\nimport StickyHeadTable from './components/StickyHeadTable';\nimport { Container } from '@material-ui/core';\nimport UserQuestionnaires from './components/UserQuestionnaires';\nimport EditQuestionnaire from './components/EditQuestionnaire';\nimport CustomizedDialogs from './components/CustomizedDialogs';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nfunction App() {\n  const [questionnaires, setQuestionnaires] = useState([{\n    id: Math.floor(Math.random() * 100),\n    title: \"person test\",\n    questions: [{\n      id: \":v1\",\n      type: \":likert\",\n      title: \"How are you?\",\n      options: [\"very good\", \"good\", \"ok\", \"bad\", \"very bad\"]\n    }, {\n      id: \":v2\",\n      type: \":checkbox\",\n      title: \"Who are you?\",\n      options: [\"me\", \"you\"]\n    }, {\n      id: \":v3\",\n      type: \":radio\",\n      title: \"What are you?\",\n      options: [\"dog\", \"cat\", \"human\", \"chimp\"]\n    }],\n    scores: []\n  }, {\n    id: Math.floor(Math.random() * 100),\n    title: \"person test\",\n    questions: [{\n      id: \":v1\",\n      type: \":likert\",\n      title: \"How are you?\",\n      options: [\"very good\", \"good\", \"ok\", \"bad\", \"very bad\"]\n    }, {\n      id: \":v2\",\n      type: \":checkbox\",\n      title: \"Who are you?\",\n      options: [\"me\", \"you\"]\n    }, {\n      id: \":v3\",\n      type: \":radio\",\n      title: \"What are you?\",\n      options: [\"dog\", \"cat\", \"human\", \"chimp\"]\n    }],\n    scores: []\n  }]);\n\n  addQuestionnaire = questionnaire => {\n    // this.setState({\n    //   questionnaires: [...this.state.questionnaires, questionnaire]\n    // });\n    setQuestionnaires([questionnaires, questionnaire]);\n  };\n\n  getQuestionnaire = id => {\n    // for (let i=0; i<this.state.questionnaires.length; i++) {\n    //   if (this.state.questionnaires[i].id === id) {\n    //     const x = this.state.questionnaires[i];\n    //     return x;\n    //   }\n    // }\n    // return null;\n    for (let i = 0; i < questionnaires.length; i++) {\n      if (questionnaires[i].id === id) {\n        const x = questionnaires[i];\n        return x;\n      }\n    }\n\n    return null;\n  };\n\n  return (// <div className=\"App\">\n    //   <EditQuestionnaire/>\n    //   <CustomizedDialogs/>\n    // </div>\n    React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/login\",\n      component: LoginForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(PrivateRoute, {\n      exact: true,\n      path: \"/\",\n      component: UserHome,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(PrivateRoute, {\n      exact: true,\n      path: \"/questionnaires\",\n      component: UserQuestionnaires,\n      questionnaires: this.state.questionnaires,\n      addQuestionnaire: this.addQuestionnaire,\n      getQuestionnaire: this.getQuestionnaire,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })))\n  );\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/palp/now/web/10mar/src/App.js"],"names":["React","useState","ButtonAppBar","LoginForm","UserHome","StickyHeadTable","Container","UserQuestionnaires","EditQuestionnaire","CustomizedDialogs","BrowserRouter","Router","Switch","Route","Link","App","questionnaires","setQuestionnaires","id","Math","floor","random","title","questions","type","options","scores","addQuestionnaire","questionnaire","getQuestionnaire","i","length","x","state"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport ButtonAppBar from './components/ButtonAppBar';\nimport LoginForm from './components/LoginForm';\nimport UserHome from './components/UserHome';\nimport StickyHeadTable from './components/StickyHeadTable';\nimport { Container } from '@material-ui/core';\nimport UserQuestionnaires from './components/UserQuestionnaires';\nimport EditQuestionnaire from './components/EditQuestionnaire';\nimport CustomizedDialogs from './components/CustomizedDialogs';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nfunction App() {\n  const [questionnaires, setQuestionnaires] = useState([\n    {\n      id: Math.floor(Math.random()*100),\n      title: \"person test\",\n      questions: [\n        {id: \":v1\", type: \":likert\", title: \"How are you?\", options: [\"very good\", \"good\", \"ok\", \"bad\", \"very bad\"]},\n        {id: \":v2\", type: \":checkbox\", title: \"Who are you?\", options: [\"me\", \"you\"]},\n        {id: \":v3\", type: \":radio\", title: \"What are you?\", options: [\"dog\", \"cat\", \"human\", \"chimp\"]},\n      ],\n      scores: []\n    },\n    {\n      id: Math.floor(Math.random()*100),\n      title: \"person test\",\n      questions: [\n        {id: \":v1\", type: \":likert\", title: \"How are you?\", options: [\"very good\", \"good\", \"ok\", \"bad\", \"very bad\"]},\n        {id: \":v2\", type: \":checkbox\", title: \"Who are you?\", options: [\"me\", \"you\"]},\n        {id: \":v3\", type: \":radio\", title: \"What are you?\", options: [\"dog\", \"cat\", \"human\", \"chimp\"]},\n      ],\n      scores: []\n    }\n  ])\n\n  addQuestionnaire = (questionnaire) => {\n    // this.setState({\n    //   questionnaires: [...this.state.questionnaires, questionnaire]\n    // });\n    setQuestionnaires([questionnaires ,questionnaire])\n  }\n  getQuestionnaire = (id) => {\n    // for (let i=0; i<this.state.questionnaires.length; i++) {\n    //   if (this.state.questionnaires[i].id === id) {\n    //     const x = this.state.questionnaires[i];\n    //     return x;\n    //   }\n    // }\n    // return null;\n    for (let i=0; i<questionnaires.length; i++) {\n      if (questionnaires[i].id === id) {\n        const x = questionnaires[i];\n        return x;\n      }\n    }\n    return null;\n  }\n  return (\n    // <div className=\"App\">\n    //   <EditQuestionnaire/>\n    //   <CustomizedDialogs/>\n    // </div>\n\n    <Router>\n    <Switch>\n      <Route path='/login' component={LoginForm}/>\n      <PrivateRoute exact path='/' component={UserHome}/>\n      <PrivateRoute \n        exact path='/questionnaires'\n        component={UserQuestionnaires}\n        questionnaires={this.state.questionnaires}\n        addQuestionnaire={this.addQuestionnaire}\n        getQuestionnaire={this.getQuestionnaire}\n      />\n    </Switch>\n  </Router>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}