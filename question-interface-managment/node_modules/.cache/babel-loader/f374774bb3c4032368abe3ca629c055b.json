{"ast":null,"code":"var _jsxFileName = \"/Users/palp/now/QMI/question-interface-managment/src/utils/index.js\";\nimport React from \"react\";\nimport RadioButtonCheckedIcon from \"@material-ui/icons/RadioButtonChecked\";\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\nimport TuneIcon from \"@material-ui/icons/Tune\";\nimport LinearScaleIcon from \"@material-ui/icons/LinearScale\";\nimport Looks5TwoToneIcon from \"@material-ui/icons/Looks5TwoTone\";\nimport TextFieldsIcon from \"@material-ui/icons/TextFields\";\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\nimport ScheduleIcon from \"@material-ui/icons/Schedule\";\nimport TextFormatIcon from \"@material-ui/icons/TextFormat\";\nimport GestureIcon from \"@material-ui/icons/Gesture\";\nimport SelectIcon from \"@material-ui/icons/ViewList\";\nimport { startOfDay } from \"date-fns/esm\";\nexport const initial0 = {\n  id: \"v1\",\n  type: \"radio\",\n  title: \"untitled\",\n  // options: [\"option 1\", \"option 2\", \"option 3\", \"option 4\"],\n  options: []\n};\nexport const initial1 = {\n  section_start: \"De hoofddoelen\",\n  hidden: false,\n  id: \"v1\",\n  type: \"radio\",\n  required: true,\n  title: \"untitled\",\n  tooltip: \"some tooltip\",\n  options: [\"option 1\", \"option 2\", \"option 3\"],\n  show_otherwise: true,\n  otherwise_label: \"Nee, omdat:\",\n  otherwise_tooltip: \"some tooltip\",\n  section_end: true\n};\nexport const initial2 = {\n  section_start: \"Capitals\",\n  hidden: false,\n  id: \"v1\",\n  type: \"radio\",\n  required: true,\n  title: \"What is the capital city of the Netherlands?\",\n  tooltip: \"Hint: It is not Berlin\",\n  options: [\"Den Haag\", \"Amsterdam\", \"Berlin\", \"Groningen\"],\n  show_otherwise: true,\n  otherwise_label: \"Nee, omdat:\",\n  otherwise_tooltip: \"some tooltip\",\n  section_end: true\n};\nexport const QUESTION_TYPES = [{\n  type: \"checkbox\",\n  disabled: false\n}, {\n  type: \"radio\",\n  disabled: false\n}, {\n  type: \"likert\",\n  disabled: true\n}, {\n  type: \"range\",\n  disabled: true\n}, {\n  type: \"raw\",\n  disabled: true\n}, {\n  type: \"textarea\",\n  disabled: true\n}, {\n  type: \"textfield\",\n  disabled: true\n}, {\n  type: \"number\",\n  disabled: true\n}, {\n  type: \"expandable\",\n  disabled: true\n}, {\n  type: \"time\",\n  disabled: true\n}, {\n  type: \"date\",\n  disabled: true\n}, {\n  type: \"unsubscribe\",\n  disabled: true\n}, {\n  type: \"dropdown\",\n  disabled: true\n}, {\n  type: \"drawing\",\n  disabled: true\n}];\nexport const TYPE_ICONS = {\n  checkbox: React.createElement(CheckBoxIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }),\n  radio: React.createElement(RadioButtonCheckedIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }),\n  likert: React.createElement(LinearScaleIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }),\n  range: React.createElement(TuneIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }),\n  // raw: ,\n  textarea: React.createElement(TextFieldsIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }),\n  textfield: React.createElement(TextFormatIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }),\n  number: React.createElement(Looks5TwoToneIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }),\n  // expandable: ,\n  time: React.createElement(ScheduleIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }),\n  date: React.createElement(DateRangeIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }),\n  // unsubscribe: ,\n  dropdown: React.createElement(SelectIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }),\n  drawing: React.createElement(GestureIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  })\n}; // converts \"section_start\" to \"Section_start\"\n// converts \"tooltip\" to \"Tooltip\"\n\nexport function capitalize(text) {\n  return text.charAt(0).toUpperCase() + text.slice(1);\n} // converts \"section_start\" to \"Section start\"\n// converts \"tooltip\" to \"Tooltip\"\n\nexport function capitalize2(text) {\n  return capitalize(text).replace(\"_\", \" \");\n} // chooses divider color for EditorButtonGroup depending on theme\n\nexport const DIVIDER_COLOR = theme => theme.palette.type === \"dark\" ? \"rgb(110, 110, 110)\" : \"rgb(196, 196, 196)\";\nexport const CLEAN_QUESTION = {\n  type: undefined,\n  required: undefined,\n  hidden: undefined,\n  section_start: undefined,\n  title: undefined,\n  tooltip: undefined,\n  options: [],\n  show_otherwise: undefined,\n  otherwise_label: undefined,\n  otherwise_tooltip: undefined,\n  section_end: undefined\n};\nexport const CLEAN_SUPER_QUESTION = {\n  // date properties\n  default_date: undefined,\n  min_date: undefined,\n  max_date: undefined,\n  // boolean properties\n  hidden: undefined,\n  show_otherwise: undefined,\n  required: undefined,\n  today: undefined,\n  section_end: undefined,\n  // numeric properties\n  min: undefined,\n  max: undefined,\n  step: undefined,\n  max_length: undefined,\n  default_expansions: undefined,\n  max_expansions: undefined,\n  hours_from: undefined,\n  hours_to: undefined,\n  hours_step: undefined,\n  width: undefined,\n  height: undefined,\n  radius: undefined,\n  density: undefined,\n  // text properties\n  title: undefined,\n  tooltip: undefined,\n  otherwise_label: undefined,\n  otherwise_tooltip: undefined,\n  raw: undefined,\n  placeholder: undefined,\n  default_value: undefined,\n  hint: undefined,\n  remove_button_label: undefined,\n  add_button_label: undefined,\n  hours_label: undefined,\n  minutes_label: undefined,\n  button_text: undefined,\n  label: undefined,\n  section_start: undefined,\n  image: undefined,\n  links_to_expandable: undefined,\n  pattern: undefined,\n  color: undefined,\n  // text array properties\n  options: undefined,\n  labels: undefined\n}; // Question Preprocessing before edit\n// handles defaults and undefineds\n// converts an option from string to object\n// after done, preprocessed question is given to state.question\n\nconst preprocessCheckbox = question => {\n  // const preprocessedOptions = () => {\n  //   return question.options;\n  // };\n  // prettier-ignore \n  return {\n    type: question.type,\n    required: question.required !== undefined ? question.required : false,\n    hidden: question.hidden !== undefined ? question.hidden : false,\n    section_start: question.section_start !== undefined ? question.section_start : undefined,\n    title: question.title !== undefined ? question.title : \"untitled checkbox\",\n    tooltip: question.tooltip !== undefined ? question.tooltip : undefined,\n    options: question.options !== undefined ? question.options : [],\n    show_otherwise: question.show_otherwise !== undefined ? question.show_otherwise : true,\n    // default (for all types) of show_otherwise: true?\n    otherwise_label: question.otherwise_label !== undefined ? question.otherwise_label : \"Anders, namelijk:\",\n    otherwise_tooltip: question.otherwise_tooltip !== undefined ? question.otherwise_tooltip : undefined,\n    section_end: question.section_end !== undefined ? question.section_end : false\n  };\n};\n\nconst preprocessMap = {\n  checkbox: preprocessCheckbox,\n  radio: preprocessCheckbox\n};\nexport const preprocessQuestion = question => {\n  return preprocessMap[question.type](question);\n};","map":{"version":3,"sources":["/Users/palp/now/QMI/question-interface-managment/src/utils/index.js"],"names":["React","RadioButtonCheckedIcon","CheckBoxIcon","TuneIcon","LinearScaleIcon","Looks5TwoToneIcon","TextFieldsIcon","DateRangeIcon","ScheduleIcon","TextFormatIcon","GestureIcon","SelectIcon","startOfDay","initial0","id","type","title","options","initial1","section_start","hidden","required","tooltip","show_otherwise","otherwise_label","otherwise_tooltip","section_end","initial2","QUESTION_TYPES","disabled","TYPE_ICONS","checkbox","radio","likert","range","textarea","textfield","number","time","date","dropdown","drawing","capitalize","text","charAt","toUpperCase","slice","capitalize2","replace","DIVIDER_COLOR","theme","palette","CLEAN_QUESTION","undefined","CLEAN_SUPER_QUESTION","default_date","min_date","max_date","today","min","max","step","max_length","default_expansions","max_expansions","hours_from","hours_to","hours_step","width","height","radius","density","raw","placeholder","default_value","hint","remove_button_label","add_button_label","hours_label","minutes_label","button_text","label","image","links_to_expandable","pattern","color","labels","preprocessCheckbox","question","preprocessMap","preprocessQuestion"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport RadioButtonCheckedIcon from \"@material-ui/icons/RadioButtonChecked\";\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\nimport TuneIcon from \"@material-ui/icons/Tune\";\nimport LinearScaleIcon from \"@material-ui/icons/LinearScale\";\nimport Looks5TwoToneIcon from \"@material-ui/icons/Looks5TwoTone\";\nimport TextFieldsIcon from \"@material-ui/icons/TextFields\";\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\nimport ScheduleIcon from \"@material-ui/icons/Schedule\";\nimport TextFormatIcon from \"@material-ui/icons/TextFormat\";\nimport GestureIcon from \"@material-ui/icons/Gesture\";\nimport SelectIcon from \"@material-ui/icons/ViewList\";\nimport { startOfDay } from \"date-fns/esm\";\n\nexport const initial0 = {\n  id: \"v1\",\n  type: \"radio\",\n  title: \"untitled\",\n  // options: [\"option 1\", \"option 2\", \"option 3\", \"option 4\"],\n  options: [],\n};\n\nexport const initial1 = {\n  section_start: \"De hoofddoelen\",\n  hidden: false,\n  id: \"v1\",\n  type: \"radio\",\n  required: true,\n  title: \"untitled\",\n  tooltip: \"some tooltip\",\n  options: [\"option 1\", \"option 2\", \"option 3\"],\n  show_otherwise: true,\n  otherwise_label: \"Nee, omdat:\",\n  otherwise_tooltip: \"some tooltip\",\n  section_end: true,\n};\n\nexport const initial2 = {\n  section_start: \"Capitals\",\n  hidden: false,\n  id: \"v1\",\n  type: \"radio\",\n  required: true,\n  title: \"What is the capital city of the Netherlands?\",\n  tooltip: \"Hint: It is not Berlin\",\n  options: [\"Den Haag\", \"Amsterdam\", \"Berlin\", \"Groningen\"],\n  show_otherwise: true,\n  otherwise_label: \"Nee, omdat:\",\n  otherwise_tooltip: \"some tooltip\",\n  section_end: true,\n};\n\nexport const QUESTION_TYPES = [\n  { type: \"checkbox\", disabled: false },\n  { type: \"radio\", disabled: false },\n  { type: \"likert\", disabled: true },\n  { type: \"range\", disabled: true },\n  { type: \"raw\", disabled: true },\n  { type: \"textarea\", disabled: true },\n  { type: \"textfield\", disabled: true },\n  { type: \"number\", disabled: true },\n  { type: \"expandable\", disabled: true },\n  { type: \"time\", disabled: true },\n  { type: \"date\", disabled: true },\n  { type: \"unsubscribe\", disabled: true },\n  { type: \"dropdown\", disabled: true },\n  { type: \"drawing\", disabled: true },\n];\n\nexport const TYPE_ICONS = {\n  checkbox: <CheckBoxIcon />,\n  radio: <RadioButtonCheckedIcon />,\n  likert: <LinearScaleIcon />,\n  range: <TuneIcon />,\n  // raw: ,\n  textarea: <TextFieldsIcon />,\n  textfield: <TextFormatIcon />,\n  number: <Looks5TwoToneIcon />,\n  // expandable: ,\n  time: <ScheduleIcon />,\n  date: <DateRangeIcon />,\n  // unsubscribe: ,\n  dropdown: <SelectIcon />,\n  drawing: <GestureIcon />,\n};\n\n// converts \"section_start\" to \"Section_start\"\n// converts \"tooltip\" to \"Tooltip\"\nexport function capitalize(text) {\n  return text.charAt(0).toUpperCase() + text.slice(1);\n}\n\n// converts \"section_start\" to \"Section start\"\n// converts \"tooltip\" to \"Tooltip\"\nexport function capitalize2(text) {\n  return capitalize(text).replace(\"_\", \" \");\n}\n\n// chooses divider color for EditorButtonGroup depending on theme\nexport const DIVIDER_COLOR = (theme) =>\n  theme.palette.type === \"dark\" ? \"rgb(110, 110, 110)\" : \"rgb(196, 196, 196)\";\n\nexport const CLEAN_QUESTION = {\n  type: undefined,\n  required: undefined,\n  hidden: undefined,\n  section_start: undefined,\n  title: undefined,\n  tooltip: undefined,\n  options: [],\n  show_otherwise: undefined,\n  otherwise_label: undefined,\n  otherwise_tooltip: undefined,\n  section_end: undefined,\n}\nexport const CLEAN_SUPER_QUESTION = {\n  // date properties\n  default_date: undefined,\n  min_date: undefined,\n  max_date: undefined,\n  // boolean properties\n  hidden: undefined,\n  show_otherwise: undefined,\n  required: undefined,\n  today: undefined,\n  section_end: undefined,\n  // numeric properties\n  min: undefined,\n  max: undefined,\n  step: undefined,\n  max_length: undefined,\n  default_expansions: undefined,\n  max_expansions: undefined,\n  hours_from: undefined,\n  hours_to: undefined,\n  hours_step: undefined,\n  width: undefined,\n  height: undefined,\n  radius: undefined,\n  density: undefined,\n  // text properties\n  title: undefined,\n  tooltip: undefined,\n  otherwise_label: undefined,\n  otherwise_tooltip: undefined,\n  raw: undefined,\n  placeholder: undefined,\n  default_value: undefined,\n  hint: undefined,\n  remove_button_label: undefined,\n  add_button_label: undefined,\n  hours_label: undefined,\n  minutes_label: undefined,\n  button_text: undefined,\n  label: undefined,\n  section_start: undefined,\n  image: undefined,\n  links_to_expandable: undefined,\n  pattern: undefined,\n  color: undefined,\n  // text array properties\n  options: undefined,\n  labels: undefined,\n}\n\n// Question Preprocessing before edit\n// handles defaults and undefineds\n// converts an option from string to object\n// after done, preprocessed question is given to state.question\nconst preprocessCheckbox = (question) => {\n  // const preprocessedOptions = () => {\n  //   return question.options;\n  // };\n  // prettier-ignore \n  return {\n    type: question.type,\n    required: question.required !== undefined ? question.required : false,\n    hidden: question.hidden !== undefined ? question.hidden : false,\n    section_start: question.section_start !== undefined ? question.section_start : undefined,\n    title: question.title !== undefined ? question.title : \"untitled checkbox\",\n    tooltip: question.tooltip !== undefined ? question.tooltip : undefined,\n    options: question.options !== undefined ? question.options : [],\n    show_otherwise: question.show_otherwise !== undefined ? question.show_otherwise : true, // default (for all types) of show_otherwise: true?\n    otherwise_label: question.otherwise_label !== undefined ? question.otherwise_label : \"Anders, namelijk:\",\n    otherwise_tooltip: question.otherwise_tooltip !== undefined ? question.otherwise_tooltip : undefined,\n    section_end: question.section_end !== undefined ? question.section_end : false,\n  };\n};\n\nconst preprocessMap = {\n  checkbox: preprocessCheckbox,\n  radio: preprocessCheckbox,\n};\n\nexport const preprocessQuestion = (question) => { return preprocessMap[question.type](question); }\n"]},"metadata":{},"sourceType":"module"}