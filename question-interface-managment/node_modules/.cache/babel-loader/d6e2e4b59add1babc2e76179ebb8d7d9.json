{"ast":null,"code":"var _jsxFileName = \"/Users/palp/now/QMI/question-interface-managment/src/components/Question.js\";\nimport React, { useContext, useState } from \"react\";\nimport { Divider, ExpansionPanel, ExpansionPanelDetails, ExpansionPanelSummary, Grid, Typography } from \"@material-ui/core\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { QuestionnaireContext } from \"../contexts/QuestionnaireContext\";\nimport { SettingsContext } from \"../contexts/SettingsContext\";\nimport RemoveQuestionButton from \"./buttons/RemoveQuestionButton\";\nimport EditQuestionButton from \"./buttons/EditQuestionButton\";\nimport RadioCheckboxPreview from \"./previews/RadioCheckboxPreview\";\nimport LikertPreview from \"./previews/LikertPreview\";\nimport RangePreview from \"./previews/RangePreview\";\nimport DropdownPreview from \"./previews/DropdownPreview\";\nimport NumberPreview from \"./previews/NumberPreview\";\nimport DatePickerPreview from \"./previews/DatePickerPreview\";\nimport TimePickerPreview from \"./previews/TimePickerPreview\";\nimport TextArea from \"./previews/TextArea\";\nimport TextFieldPreview from \"./previews/TextFieldPreview\";\nimport DrawingPreview from \"./previews/DrawingPreview\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport \"./index.css\";\nimport DragHandleIcon from \"@material-ui/icons/DragHandle\";\nimport RawPreview from \"./previews/RawPreview\";\n\nconst Question = ({\n  index,\n  question,\n  ...props\n}) => {\n  const [open, setOpen] = useState(false);\n  return React.createElement(Draggable, {\n    key: question.id,\n    draggableId: question.id,\n    index: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, (provided, snapshot) => React.createElement(\"div\", Object.assign({\n    ref: provided.innerRef\n  }, provided.draggableProps, {\n    style: provided.draggableProps.style,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(ExpansionPanel, Object.assign({\n    expanded: open\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(Summary, {\n    onClick: () => setOpen(!open),\n    question: question,\n    provided: provided,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(Details, {\n    question: question,\n    index: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }))));\n};\n\nconst style = {\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\"\n};\nexport default Question;\n\nconst Summary = ({\n  question,\n  provided,\n  ...props\n}) => {\n  const {\n    settings\n  } = useContext(SettingsContext);\n  const {\n    questions\n  } = useContext(QuestionnaireContext);\n  return React.createElement(ExpansionPanelSummary, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"center\",\n    alignItems: \"center\",\n    spacing: 1,\n    style: {\n      background: settings.showGridAreas ? \"lightgrey\" : \"transparent\",\n      opacity: settings.showGridAreas ? \"0.8\" : \"1.0\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Grid, Object.assign({\n    item: true,\n    xs: true,\n    style: {\n      textAlign: \"left\",\n      background: settings.showGridAreas ? \"lightgreen\" : \"transparent\",\n      opacity: settings.showGridAreas ? \"0.8\" : \"1.0\"\n    }\n  }, provided.dragHandleProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), React.createElement(DragHandleIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: true,\n    style: {\n      textAlign: \"left\",\n      background: settings.showGridAreas ? \"lightgreen\" : \"transparent\",\n      opacity: settings.showGridAreas ? \"0.8\" : \"1.0\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, questions.indexOf(question) + 1)), React.createElement(Grid, {\n    item: true,\n    xs: 8,\n    style: {\n      textAlign: \"left\",\n      wordWrap: \"break-word\",\n      wordBreak: \"break-word\",\n      background: settings.showGridAreas ? \"lightblue\" : \"transparent\",\n      opacity: settings.showGridAreas ? \"0.8\" : \"1.0\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, question.type === \"raw\" ? question.content : question.title)), React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    style: {\n      textAlign: \"right\",\n      background: settings.showGridAreas ? \"lightcoral\" : \"transparent\",\n      opacity: settings.showGridAreas ? \"0.8\" : \"1.0\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(ExpandMoreIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }))));\n};\n\nconst Details = ({\n  question,\n  index\n}) => {\n  const {\n    settings\n  } = useContext(SettingsContext);\n  return React.createElement(ExpansionPanelDetails, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    justify: \"center\",\n    alignItems: \"stretch\",\n    spacing: 1,\n    style: {\n      background: settings.showGridAreas ? \"lightgrey\" : \"transparent\",\n      opacity: settings.showGridAreas ? \"0.8\" : \"1.0\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: true,\n    style: {\n      textAlign: \"center\",\n      background: settings.showGridAreas ? \"lightgreen\" : \"transparent\",\n      opacity: settings.showGridAreas ? \"0.8\" : \"1.0\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"caption\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, question.type.toUpperCase())), React.createElement(Grid, {\n    item: true,\n    xs: true,\n    style: {\n      textAlign: \"center\",\n      background: settings.showGridAreas ? \"lightblue\" : \"transparent\",\n      opacity: settings.showGridAreas ? \"0.8\" : \"1.0\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, (() => {\n    switch (question.type) {\n      case \"radio\":\n        return React.createElement(RadioCheckboxPreview, {\n          question: question,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178\n          },\n          __self: this\n        });\n\n      case \"checkbox\":\n        return React.createElement(RadioCheckboxPreview, {\n          question: question,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180\n          },\n          __self: this\n        });\n\n      case \"likert\":\n        return React.createElement(LikertPreview, {\n          question: question,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          },\n          __self: this\n        });\n\n      case \"range\":\n        return React.createElement(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          },\n          __self: this\n        }, React.createElement(RangePreview, {\n          question: question,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192\n          },\n          __self: this\n        }));\n\n      case \"dropdown\":\n        return React.createElement(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197\n          },\n          __self: this\n        }, React.createElement(DropdownPreview, {\n          question: question,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204\n          },\n          __self: this\n        }));\n\n      case \"textarea\":\n        return React.createElement(\"div\", {\n          style: style,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209\n          },\n          __self: this\n        }, React.createElement(TextArea, {\n          question: question,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210\n          },\n          __self: this\n        }));\n\n      case \"number\":\n        return React.createElement(NumberPreview, {\n          question: question,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214\n          },\n          __self: this\n        });\n\n      case \"date\":\n        return React.createElement(DatePickerPreview, {\n          question: question,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216\n          },\n          __self: this\n        });\n\n      case \"time\":\n        return React.createElement(TimePickerPreview, {\n          question: question,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218\n          },\n          __self: this\n        });\n\n      case \"textfield\":\n        return React.createElement(TextFieldPreview, {\n          question: question,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220\n          },\n          __self: this\n        });\n\n      case \"drawing\":\n        return React.createElement(\"div\", {\n          style: style,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223\n          },\n          __self: this\n        }, React.createElement(DrawingPreview, {\n          question: question,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224\n          },\n          __self: this\n        }));\n\n      case \"raw\":\n        return React.createElement(RawPreview, {\n          question: question,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 228\n          },\n          __self: this\n        });\n\n      default:\n        return React.createElement(RadioCheckboxPreview, {\n          question: question,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230\n          },\n          __self: this\n        });\n    }\n  })()), React.createElement(Grid, {\n    item: true,\n    xs: true,\n    style: {\n      textAlign: \"center\",\n      background: settings.showGridAreas ? \"lightcoral\" : \"transparent\",\n      opacity: settings.showGridAreas ? \"0.8\" : \"1.0\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }, React.createElement(RemoveQuestionButton, {\n    question: question,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }), React.createElement(EditQuestionButton, {\n    question: question,\n    index: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }))));\n};","map":{"version":3,"sources":["/Users/palp/now/QMI/question-interface-managment/src/components/Question.js"],"names":["React","useContext","useState","Divider","ExpansionPanel","ExpansionPanelDetails","ExpansionPanelSummary","Grid","Typography","ExpandMoreIcon","QuestionnaireContext","SettingsContext","RemoveQuestionButton","EditQuestionButton","RadioCheckboxPreview","LikertPreview","RangePreview","DropdownPreview","NumberPreview","DatePickerPreview","TimePickerPreview","TextArea","TextFieldPreview","DrawingPreview","Draggable","DragHandleIcon","RawPreview","Question","index","question","props","open","setOpen","id","provided","snapshot","innerRef","draggableProps","style","display","justifyContent","alignItems","Summary","settings","questions","background","showGridAreas","opacity","textAlign","dragHandleProps","indexOf","wordWrap","wordBreak","type","content","title","Details","toUpperCase"],"mappings":"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","sourcesContent":["import React, {useContext, useState} from \"react\";\nimport {\n    Divider,\n    ExpansionPanel,\n    ExpansionPanelDetails,\n    ExpansionPanelSummary,\n    Grid,\n    Typography\n} from \"@material-ui/core\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport {QuestionnaireContext} from \"../contexts/QuestionnaireContext\";\nimport {SettingsContext} from \"../contexts/SettingsContext\";\nimport RemoveQuestionButton from \"./buttons/RemoveQuestionButton\";\nimport EditQuestionButton from \"./buttons/EditQuestionButton\";\nimport RadioCheckboxPreview from \"./previews/RadioCheckboxPreview\";\nimport LikertPreview from \"./previews/LikertPreview\";\nimport RangePreview from \"./previews/RangePreview\";\nimport DropdownPreview from \"./previews/DropdownPreview\";\nimport NumberPreview from \"./previews/NumberPreview\";\nimport DatePickerPreview from \"./previews/DatePickerPreview\";\nimport TimePickerPreview from \"./previews/TimePickerPreview\";\nimport TextArea from \"./previews/TextArea\";\nimport TextFieldPreview from \"./previews/TextFieldPreview\";\nimport DrawingPreview from \"./previews/DrawingPreview\";\nimport {Draggable} from \"react-beautiful-dnd\";\nimport \"./index.css\";\nimport DragHandleIcon from \"@material-ui/icons/DragHandle\";\nimport RawPreview from \"./previews/RawPreview\";\n\nconst Question = ({ index, question, ...props }) => {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <Draggable key={question.id} draggableId={question.id} index={index}>\n      {(provided, snapshot) => (\n        <div\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          style={provided.draggableProps.style}\n        >\n          <ExpansionPanel expanded={open} {...props}>\n            <Summary\n              onClick={() => setOpen(!open)}\n              question={question}\n              provided={provided}\n            />\n            {/* <Summary onClick={() => setOpen(!open)} question={question} onMouseDown={() => setOpen(!open)}/> */}\n            <Divider />\n            <Details question={question} index={index}/>\n          </ExpansionPanel>\n        </div>\n      )}\n    </Draggable>\n  );\n};\n\nconst style = {\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\"\n};\n\nexport default Question;\n\nconst Summary = ({ question, provided, ...props }) => {\n  const { settings } = useContext(SettingsContext);\n  const { questions } = useContext(QuestionnaireContext);\n\n  return (\n    <ExpansionPanelSummary {...props}>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n        spacing={1}\n        style={{\n          background: settings.showGridAreas ? \"lightgrey\" : \"transparent\",\n          opacity: settings.showGridAreas ? \"0.8\" : \"1.0\"\n        }}\n      >\n        <Grid\n          item\n          xs\n          style={{\n            textAlign: \"left\",\n            background: settings.showGridAreas ? \"lightgreen\" : \"transparent\",\n            opacity: settings.showGridAreas ? \"0.8\" : \"1.0\"\n          }}\n          {...provided.dragHandleProps}\n        >\n          <DragHandleIcon />\n        </Grid>\n        <Grid\n          item\n          xs\n          style={{\n            textAlign: \"left\",\n            background: settings.showGridAreas ? \"lightgreen\" : \"transparent\",\n            opacity: settings.showGridAreas ? \"0.8\" : \"1.0\"\n          }}\n        >\n          <Typography variant=\"h5\">\n            {questions.indexOf(question) + 1}\n          </Typography>\n        </Grid>\n        <Grid\n          item\n          xs={8}\n          style={{\n            textAlign: \"left\",\n            wordWrap: \"break-word\",\n            wordBreak: \"break-word\",\n            background: settings.showGridAreas ? \"lightblue\" : \"transparent\",\n            opacity: settings.showGridAreas ? \"0.8\" : \"1.0\"\n          }}\n        >\n          <Typography variant=\"h5\">{question.type === \"raw\" ? question.content : question.title}</Typography>\n        </Grid>\n        <Grid\n          item\n          xs={2}\n          style={{\n            textAlign: \"right\",\n            background: settings.showGridAreas ? \"lightcoral\" : \"transparent\",\n            opacity: settings.showGridAreas ? \"0.8\" : \"1.0\"\n          }}\n        >\n          <ExpandMoreIcon />\n        </Grid>\n      </Grid>\n    </ExpansionPanelSummary>\n  );\n};\n\nconst Details = ({ question, index }) => {\n  const { settings } = useContext(SettingsContext);\n\n  return (\n    <ExpansionPanelDetails>\n      <Grid\n        container\n        direction=\"column\"\n        justify=\"center\"\n        alignItems=\"stretch\"\n        spacing={1}\n        style={{\n          background: settings.showGridAreas ? \"lightgrey\" : \"transparent\",\n          opacity: settings.showGridAreas ? \"0.8\" : \"1.0\"\n        }}\n      >\n        <Grid\n          item\n          xs\n          style={{\n            textAlign: \"center\",\n            background: settings.showGridAreas ? \"lightgreen\" : \"transparent\",\n            opacity: settings.showGridAreas ? \"0.8\" : \"1.0\"\n          }}\n        >\n          <Typography variant=\"caption\">\n            {/* {`${question.type} options preview`.toUpperCase()} */}\n            {question.type.toUpperCase()}\n          </Typography>\n        </Grid>\n        <Grid\n          item\n          xs\n          style={{\n            textAlign: \"center\",\n            background: settings.showGridAreas ? \"lightblue\" : \"transparent\",\n            opacity: settings.showGridAreas ? \"0.8\" : \"1.0\"\n          }}\n        >\n          {(() => {\n            switch (question.type) {\n              case \"radio\":\n                return <RadioCheckboxPreview question={question} />;\n              case \"checkbox\":\n                return <RadioCheckboxPreview question={question} />;\n              case \"likert\":\n                return <LikertPreview question={question} />;\n              case \"range\":\n                return (\n                  <div\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"center\",\n                      alignItems: \"center\"\n                    }}\n                  >\n                    <RangePreview question={question} />\n                  </div>\n                );\n              case \"dropdown\":\n                return (\n                  <div\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"center\",\n                      alignItems: \"center\"\n                    }}\n                  >\n                    <DropdownPreview question={question} />\n                  </div>\n                );\n              case \"textarea\":\n                return (\n                  <div style={style}>\n                    <TextArea question={question} />\n                  </div>\n                );\n              case \"number\":\n                return <NumberPreview question={question} />;\n              case \"date\":\n                return <DatePickerPreview question={question} />;\n              case \"time\":\n                return <TimePickerPreview question={question} />;\n              case \"textfield\":\n                return <TextFieldPreview question={question} />;\n              case \"drawing\":\n                return (\n                  <div style={style}>\n                    <DrawingPreview question={question} />\n                  </div>\n                );\n              case \"raw\":\n                return <RawPreview question={question} />;\n              default:\n                return <RadioCheckboxPreview question={question} />;\n            }\n          })()}\n        </Grid>\n        <Grid\n          item\n          xs\n          style={{\n            textAlign: \"center\",\n            background: settings.showGridAreas ? \"lightcoral\" : \"transparent\",\n            opacity: settings.showGridAreas ? \"0.8\" : \"1.0\"\n          }}\n        >\n          <RemoveQuestionButton question={question} />\n          <EditQuestionButton question={question} index={index} />\n        </Grid>\n      </Grid>\n    </ExpansionPanelDetails>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}