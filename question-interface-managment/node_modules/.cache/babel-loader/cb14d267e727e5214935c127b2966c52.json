{"ast":null,"code":"var _jsxFileName = \"/Users/palp/now/QMI/question-interface-managment/src/components/properties/TextArrayTemplate.js\";\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectProperty, setTextArrayField, setProperty } from \"../../features/questionProperties/questionSlice\";\nimport { TextField, InputAdornment, IconButton, Button, Box, Menu, MenuItem, makeStyles } from \"@material-ui/core\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nconst useStyles = makeStyles(theme => ({\n  boxy: {\n    borderRadius: 0\n  }\n}));\nexport const TextArrayProperty = ({\n  name,\n  propertyName\n}) => {\n  const classes = useStyles();\n  const property = useSelector(selectProperty(propertyName));\n  const dispatch = useDispatch();\n\n  const handleAddOptionClick = () => {\n    dispatch(setProperty({\n      property: propertyName,\n      value: [...property, \"\"]\n    }));\n  };\n\n  function renderElements() {\n    return property.map((_, index) => React.createElement(EachOptioni, {\n      index: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, name), React.createElement(Button, {\n    onClick: handleAddOptionClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"add \", name), React.createElement(Box, {\n    fullWidth: true,\n    height: \"200px\",\n    overflow: \"scroll\",\n    style: {\n      margin: \"0\",\n      overflowX: \"hidden\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, renderElements()));\n};\n\nfunction EachOptioni({\n  index\n}) {\n  const option = useSelector(state => state.question.options[index]);\n  const dispatch = useDispatch();\n\n  const handleChange = (index, event) => {\n    dispatch(setTextArrayField({\n      property: propertyName,\n      index: index,\n      value: event.target.value\n    }));\n  };\n\n  const handleRemoveOptionClick = index => {\n    dispatch(setProperty({\n      property: propertyName,\n      value: property.filter((_, i) => index !== i)\n    }));\n  }; // MENU STUFF\n\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleMenuClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n  }; // ----------\n\n\n  const getInputProps = index => ({\n    endAdornment: React.createElement(InputAdornment, {\n      position: \"end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      size: \"small\",\n      onClick: handleMenuClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(MoreHorizIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })), React.createElement(Menu, {\n      id: \"simple-menu\",\n      keepMounted: true,\n      anchorEl: anchorEl,\n      open: Boolean(anchorEl),\n      onClose: handleMenuClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      button: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      variant: \"filled\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Option tooltip\"), React.createElement(FilledInput, {\n      required: true,\n      className: classes.boxy,\n      autoFocus: true,\n      autoComplete: \"off\",\n      type: \"text\",\n      id: `option-${index + 1}-tooltip`,\n      placeholder: \"Enter option tooltip text here..\",\n      value: option,\n      onChange: handleChange,\n      endAdornment: React.createElement(React.Fragment, null, React.createElement(MoreSettingsButton, {\n        index: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }))), React.createElement(MenuItem, {\n      onClick: handleMenuClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"My account\"), React.createElement(MenuItem, {\n      onClick: handleMenuClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Logout\")), React.createElement(IconButton, {\n      size: \"small\",\n      onClick: () => handleRemoveOptionClick(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(DeleteIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    })))\n  });\n\n  return React.createElement(TextField, {\n    required: true,\n    key: index,\n    fullWidth: true,\n    type: \"text\",\n    style: {\n      margin: \"0.2em 0\"\n    },\n    placeholder: name,\n    value: option || \"\",\n    onChange: e => handleChange(index, e),\n    InputProps: getInputProps(index),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  });\n}","map":{"version":3,"sources":["/Users/palp/now/QMI/question-interface-managment/src/components/properties/TextArrayTemplate.js"],"names":["React","useSelector","useDispatch","selectProperty","setTextArrayField","setProperty","TextField","InputAdornment","IconButton","Button","Box","Menu","MenuItem","makeStyles","MoreHorizIcon","DeleteIcon","useStyles","theme","boxy","borderRadius","TextArrayProperty","name","propertyName","classes","property","dispatch","handleAddOptionClick","value","renderElements","map","_","index","margin","overflowX","EachOptioni","option","state","question","options","handleChange","event","target","handleRemoveOptionClick","filter","i","anchorEl","setAnchorEl","useState","handleMenuClick","currentTarget","handleMenuClose","getInputProps","endAdornment","Boolean","e"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACEC,cADF,EAEEC,iBAFF,EAGEC,WAHF,QAIO,iDAJP;AAKA,SACEC,SADF,EAEEC,cAFF,EAGEC,UAHF,EAIEC,MAJF,EAKEC,GALF,EAMEC,IANF,EAOEC,QAPF,EAQEC,UARF,QASO,mBATP;AAUA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AAEA,MAAMC,SAAS,GAAGH,UAAU,CAACI,KAAK,KAAK;AACrCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,YAAY,EAAE;AADV;AAD+B,CAAL,CAAN,CAA5B;AAMA,OAAO,MAAMC,iBAAiB,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAA4B;AAC3D,QAAMC,OAAO,GAAGP,SAAS,EAAzB;AACA,QAAMQ,QAAQ,GAAGvB,WAAW,CAACE,cAAc,CAACmB,YAAD,CAAf,CAA5B;AACA,QAAMG,QAAQ,GAAGvB,WAAW,EAA5B;;AAEA,QAAMwB,oBAAoB,GAAG,MAAM;AACjCD,IAAAA,QAAQ,CACNpB,WAAW,CAAC;AACVmB,MAAAA,QAAQ,EAAEF,YADA;AAEVK,MAAAA,KAAK,EAAE,CAAC,GAAGH,QAAJ,EAAc,EAAd;AAFG,KAAD,CADL,CAAR;AAMD,GAPD;;AASA,WAASI,cAAT,GAA0B;AACxB,WAAOJ,QAAQ,CAACK,GAAT,CAAa,CAACC,CAAD,EAAIC,KAAJ,KAClB,oBAAC,WAAD;AAAa,MAAA,KAAK,EAAEA,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADK,CAAP;AAGD;;AAED,SACE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKV,IAAL,CADF,EAEE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEK,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA4CL,IAA5C,CAFF,EAGE,oBAAC,GAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,MAAM,EAAC,OAFT;AAGE,IAAA,QAAQ,EAAC,QAHX;AAIE,IAAA,KAAK,EAAE;AAAEW,MAAAA,MAAM,EAAE,GAAV;AAAeC,MAAAA,SAAS,EAAE;AAA1B,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGL,cAAc,EANjB,CAHF,CADF;AAcD,CAlCM;;AAoCP,SAASM,WAAT,CAAqB;AAAEH,EAAAA;AAAF,CAArB,EAAgC;AAC9B,QAAMI,MAAM,GAAGlC,WAAW,CAACmC,KAAK,IAAIA,KAAK,CAACC,QAAN,CAAeC,OAAf,CAAuBP,KAAvB,CAAV,CAA1B;AACA,QAAMN,QAAQ,GAAGvB,WAAW,EAA5B;;AAEA,QAAMqC,YAAY,GAAG,CAACR,KAAD,EAAQS,KAAR,KAAkB;AACrCf,IAAAA,QAAQ,CACNrB,iBAAiB,CAAC;AAChBoB,MAAAA,QAAQ,EAAEF,YADM;AAEhBS,MAAAA,KAAK,EAAEA,KAFS;AAGhBJ,MAAAA,KAAK,EAAEa,KAAK,CAACC,MAAN,CAAad;AAHJ,KAAD,CADX,CAAR;AAOD,GARD;;AAWA,QAAMe,uBAAuB,GAAIX,KAAD,IAAW;AACzCN,IAAAA,QAAQ,CACNpB,WAAW,CAAC;AACVmB,MAAAA,QAAQ,EAAEF,YADA;AAEVK,MAAAA,KAAK,EAAEH,QAAQ,CAACmB,MAAT,CAAgB,CAACb,CAAD,EAAIc,CAAJ,KAAUb,KAAK,KAAKa,CAApC;AAFG,KAAD,CADL,CAAR;AAMD,GAPD,CAf8B,CAwB9B;;;AAEA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0B9C,KAAK,CAAC+C,QAAN,CAAe,IAAf,CAAhC;;AAEA,QAAMC,eAAe,GAAIR,KAAD,IAAW;AACjCM,IAAAA,WAAW,CAACN,KAAK,CAACS,aAAP,CAAX;AACD,GAFD;;AAIA,QAAMC,eAAe,GAAG,MAAM;AAC5BJ,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAFD,CAhC8B,CAoC9B;;;AAGA,QAAMK,aAAa,GAAIpB,KAAD,KAAY;AAChCqB,IAAAA,YAAY,EACV,oBAAC,cAAD;AAAgB,MAAA,QAAQ,EAAC,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,IAAI,EAAC,OAAjB;AAAyB,MAAA,OAAO,EAAEJ,eAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAIE,oBAAC,IAAD;AACE,MAAA,EAAE,EAAC,aADL;AAEE,MAAA,WAAW,MAFb;AAGE,MAAA,QAAQ,EAAEH,QAHZ;AAIE,MAAA,IAAI,EAAEQ,OAAO,CAACR,QAAD,CAJf;AAKE,MAAA,OAAO,EAAEK,eALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQE,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAE,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAa,MAAA,SAAS,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE,oBAAC,WAAD;AACE,MAAA,QAAQ,MADV;AAEE,MAAA,SAAS,EAAE3B,OAAO,CAACL,IAFrB;AAGE,MAAA,SAAS,MAHX;AAIE,MAAA,YAAY,EAAC,KAJf;AAKE,MAAA,IAAI,EAAC,MALP;AAME,MAAA,EAAE,EAAG,UAASa,KAAK,GAAG,CAAE,UAN1B;AAOE,MAAA,WAAW,EAAC,kCAPd;AAQE,MAAA,KAAK,EAAEI,MART;AASE,MAAA,QAAQ,EAAEI,YATZ;AAUE,MAAA,YAAY,EACV,0CACE,oBAAC,kBAAD;AAAoB,QAAA,KAAK,EAAER,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CARF,EA8BE,oBAAC,QAAD;AAAU,MAAA,OAAO,EAAEmB,eAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA9BF,EA+BE,oBAAC,QAAD;AAAU,MAAA,OAAO,EAAEA,eAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA/BF,CAJF,EAqCE,oBAAC,UAAD;AAAY,MAAA,IAAI,EAAC,OAAjB;AAAyB,MAAA,OAAO,EAAE,MAAMR,uBAAuB,CAACX,KAAD,CAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CArCF;AAF8B,GAAZ,CAAtB;;AA+CA,SACE,oBAAC,SAAD;AACI,IAAA,QAAQ,MADZ;AAEI,IAAA,GAAG,EAAEA,KAFT;AAGI,IAAA,SAAS,MAHb;AAII,IAAA,IAAI,EAAC,MAJT;AAKI,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KALX;AAMI,IAAA,WAAW,EAAEX,IANjB;AAOI,IAAA,KAAK,EAAEc,MAAM,IAAI,EAPrB;AAQI,IAAA,QAAQ,EAAGmB,CAAD,IAAOf,YAAY,CAACR,KAAD,EAAQuB,CAAR,CARjC;AASI,IAAA,UAAU,EAAEH,aAAa,CAACpB,KAAD,CAT7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAaD","sourcesContent":["import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  selectProperty,\n  setTextArrayField,\n  setProperty,\n} from \"../../features/questionProperties/questionSlice\";\nimport {\n  TextField,\n  InputAdornment,\n  IconButton,\n  Button,\n  Box,\n  Menu,\n  MenuItem,\n  makeStyles,\n} from \"@material-ui/core\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nconst useStyles = makeStyles(theme => ({\n  boxy: {\n    borderRadius: 0,\n  }\n}));\n\nexport const TextArrayProperty = ({ name, propertyName }) => {\n  const classes = useStyles();\n  const property = useSelector(selectProperty(propertyName));\n  const dispatch = useDispatch();\n  \n  const handleAddOptionClick = () => {\n    dispatch(\n      setProperty({\n        property: propertyName,\n        value: [...property, \"\"],\n      })\n    );\n  };\n\n  function renderElements() {\n    return property.map((_, index) => (\n      <EachOptioni index={index} />\n    ));\n  }\n\n  return (\n    <>\n      <h4>{name}</h4>\n      <Button onClick={handleAddOptionClick}>add {name}</Button>\n      <Box\n        fullWidth\n        height=\"200px\"\n        overflow=\"scroll\"\n        style={{ margin: \"0\", overflowX: \"hidden\" }}\n      >\n        {renderElements()}\n      </Box>\n    </>\n  );\n};\n\nfunction EachOptioni({ index }) {\n  const option = useSelector(state => state.question.options[index])\n  const dispatch = useDispatch();\n\n  const handleChange = (index, event) => {\n    dispatch(\n      setTextArrayField({\n        property: propertyName,\n        index: index,\n        value: event.target.value,\n      })\n    );\n  };\n\n\n  const handleRemoveOptionClick = (index) => {\n    dispatch(\n      setProperty({\n        property: propertyName,\n        value: property.filter((_, i) => index !== i),\n      })\n    );\n  };\n\n  // MENU STUFF\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleMenuClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n  };\n\n  // ----------\n\n  \n  const getInputProps = (index) => ({\n    endAdornment: (\n      <InputAdornment position=\"end\">\n        <IconButton size=\"small\" onClick={handleMenuClick}>\n          <MoreHorizIcon />\n        </IconButton>\n        <Menu\n          id=\"simple-menu\"\n          keepMounted\n          anchorEl={anchorEl}\n          open={Boolean(anchorEl)}\n          onClose={handleMenuClose}\n        >\n          {/* switch case without break for options */}\n          <MenuItem button={false}>\n            <FormControl fullWidth>\n              <InputLabel variant=\"filled\">Option tooltip</InputLabel>\n              <FilledInput\n                required\n                className={classes.boxy}\n                autoFocus\n                autoComplete=\"off\"\n                type=\"text\"\n                id={`option-${index + 1}-tooltip`}\n                placeholder=\"Enter option tooltip text here..\"\n                value={option}\n                onChange={handleChange}\n                endAdornment={\n                  <>\n                    <MoreSettingsButton index={index} />\n                    {/* <RemoveOptionButton index={index} /> */}\n                  </>\n                }\n              />\n            </FormControl>\n          </MenuItem>\n          <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n          <MenuItem onClick={handleMenuClose}>Logout</MenuItem>\n        </Menu>\n        <IconButton size=\"small\" onClick={() => handleRemoveOptionClick(index)}>\n          <DeleteIcon />\n        </IconButton>\n      </InputAdornment>\n    ),\n  });\n\n  \n  return (\n    <TextField\n        required\n        key={index}\n        fullWidth\n        type=\"text\"\n        style={{ margin: \"0.2em 0\" }}\n        placeholder={name}\n        value={option || \"\"}\n        onChange={(e) => handleChange(index, e)}\n        InputProps={getInputProps(index)}\n      />\n  );\n}"]},"metadata":{},"sourceType":"module"}