{"ast":null,"code":"var _jsxFileName = \"/Users/palp/now/QMI/question-interface-managment/src/components/properties/BooleanTemplate.js\";\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectProperty, setProperty } from \"../../features/questionProperties/questionSlice\";\nimport { Switch, FormControlLabel } from \"@material-ui/core\";\nexport const BooleanProperty = ({\n  name,\n  propertyName,\n  ...props\n}) => {\n  const property = useSelector(selectProperty(propertyName));\n  const dispatch = useDispatch();\n\n  const handleChange = () => {\n    dispatch(setProperty({\n      property: propertyName,\n      value: !property\n    }));\n  };\n\n  const switchComponent = React.createElement(Switch, {\n    checked: property || false,\n    color: \"primary\",\n    onChange: handleChange,\n    name: propertyName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  });\n  return React.createElement(FormControlLabel, Object.assign({\n    control: switchComponent,\n    label: name,\n    style: {\n      userSelect: \"none\"\n    }\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["/Users/palp/now/QMI/question-interface-managment/src/components/properties/BooleanTemplate.js"],"names":["React","useSelector","useDispatch","selectProperty","setProperty","Switch","FormControlLabel","BooleanProperty","name","propertyName","props","property","dispatch","handleChange","value","switchComponent","userSelect"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,cAAT,EAAyBC,WAAzB,QAA4C,iDAA5C;AACA,SAASC,MAAT,EAAiBC,gBAAjB,QAAyC,mBAAzC;AAEA,OAAO,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,YAAR;AAAsB,KAAGC;AAAzB,CAAD,KAAsC;AAEnE,QAAMC,QAAQ,GAAGV,WAAW,CAACE,cAAc,CAACM,YAAD,CAAf,CAA5B;AACA,QAAMG,QAAQ,GAAGV,WAAW,EAA5B;;AAEA,QAAMW,YAAY,GAAG,MAAM;AACzBD,IAAAA,QAAQ,CAACR,WAAW,CAAC;AAACO,MAAAA,QAAQ,EAAEF,YAAX;AAAyBK,MAAAA,KAAK,EAAE,CAACH;AAAjC,KAAD,CAAZ,CAAR;AACD,GAFD;;AAIA,QAAMI,eAAe,GACnB,oBAAC,MAAD;AACE,IAAA,OAAO,EAAEJ,QAAQ,IAAI,KADvB;AAEE,IAAA,KAAK,EAAC,SAFR;AAGE,IAAA,QAAQ,EAAEE,YAHZ;AAIE,IAAA,IAAI,EAAEJ,YAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AASA,SAAO,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAEM,eAA3B;AAA4C,IAAA,KAAK,EAAEP,IAAnD;AAAyD,IAAA,KAAK,EAAE;AAAEQ,MAAAA,UAAU,EAAE;AAAd;AAAhE,KAA4FN,KAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAnBM","sourcesContent":["import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectProperty, setProperty } from \"../../features/questionProperties/questionSlice\";\nimport { Switch, FormControlLabel } from \"@material-ui/core\";\n\nexport const BooleanProperty = ({ name, propertyName, ...props }) => {\n\n  const property = useSelector(selectProperty(propertyName));\n  const dispatch = useDispatch();\n\n  const handleChange = () => {\n    dispatch(setProperty({property: propertyName, value: !property}))\n  };\n\n  const switchComponent = (\n    <Switch\n      checked={property || false}\n      color=\"primary\"\n      onChange={handleChange}\n      name={propertyName}\n    />\n  );\n\n  return <FormControlLabel control={switchComponent} label={name} style={{ userSelect: \"none\" }} {...props} />;\n};\n"]},"metadata":{},"sourceType":"module"}