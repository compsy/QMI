{"ast":null,"code":"var _jsxFileName = \"/Users/palp/now/QMI/question-interface-managment/src/components/previews/NumberPreview.js\";\nimport TextField from \"@material-ui/core/TextField\";\nimport React, { useState } from \"react\";\n\nconst NumberPreview = ({\n  question\n}) => {\n  const [inputtedNumber, setValue] = useState('');\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"number\",\n    label: question.placeholder,\n    type: \"number\",\n    min: question.min,\n    max: question.max,\n    onInput: e => {\n      e.target.value = Math.max(0, parseInt(e.target.value)).toString().slice(0, question.maxlength);\n    },\n    required: question.required,\n    value: inputtedNumber,\n    onChange: e => setValue(e.target.value),\n    error: inputtedNumber.length !== 0 && (inputtedNumber < question.min || inputtedNumber > question.max),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  })));\n};\n\nexport default NumberPreview;","map":{"version":3,"sources":["/Users/palp/now/QMI/question-interface-managment/src/components/previews/NumberPreview.js"],"names":["TextField","React","useState","NumberPreview","question","inputtedNumber","setValue","placeholder","min","max","e","target","value","Math","parseInt","toString","slice","maxlength","required","length"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,6BAAtB;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAEpC,QAAM,CAACC,cAAD,EAAiBC,QAAjB,IAA6BJ,QAAQ,CAAC,EAAD,CAA3C;AAEA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AACI,IAAA,EAAE,EAAG,QADT;AAEI,IAAA,KAAK,EAAIE,QAAQ,CAACG,WAFtB;AAGI,IAAA,IAAI,EAAG,QAHX;AAII,IAAA,GAAG,EAAIH,QAAQ,CAACI,GAJpB;AAKI,IAAA,GAAG,EAAIJ,QAAQ,CAACK,GALpB;AAMI,IAAA,OAAO,EAAKC,CAAD,IAAM;AACbA,MAAAA,CAAC,CAACC,MAAF,CAASC,KAAT,GAAiBC,IAAI,CAACJ,GAAL,CAAS,CAAT,EAAYK,QAAQ,CAACJ,CAAC,CAACC,MAAF,CAASC,KAAV,CAApB,EAAsCG,QAAtC,GAAiDC,KAAjD,CAAuD,CAAvD,EAAyDZ,QAAQ,CAACa,SAAlE,CAAjB;AACH,KARL;AASI,IAAA,QAAQ,EAAIb,QAAQ,CAACc,QATzB;AAUI,IAAA,KAAK,EAAEb,cAVX;AAWI,IAAA,QAAQ,EAAGK,CAAD,IAAOJ,QAAQ,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAX7B;AAYI,IAAA,KAAK,EAAIP,cAAc,CAACc,MAAf,KAA0B,CAA1B,KAAgCd,cAAc,GAAGD,QAAQ,CAACI,GAA1B,IAAiCH,cAAc,GAAGD,QAAQ,CAACK,GAA3F,CAZb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ;AAoBH,CAxBD;;AA2BA,eAAeN,aAAf","sourcesContent":["import TextField from \"@material-ui/core/TextField\";\nimport React, {useState} from \"react\";\n\nconst NumberPreview = ({ question }) => {\n\n    const [inputtedNumber, setValue] = useState('');\n\n    return (\n        <div >\n            <form>\n                <TextField\n                    id = \"number\"\n                    label = {question.placeholder}\n                    type = \"number\"\n                    min = {question.min}\n                    max = {question.max}\n                    onInput = {(e) =>{\n                        e.target.value = Math.max(0, parseInt(e.target.value)).toString().slice(0,question.maxlength)\n                    }}\n                    required = {question.required}\n                    value={inputtedNumber}\n                    onChange={(e) => setValue(e.target.value)}\n                    error = {inputtedNumber.length !== 0 && (inputtedNumber < question.min || inputtedNumber > question.max)}\n                />\n            </form>\n        </div>\n    );\n};\n\n\nexport default NumberPreview;\n"]},"metadata":{},"sourceType":"module"}