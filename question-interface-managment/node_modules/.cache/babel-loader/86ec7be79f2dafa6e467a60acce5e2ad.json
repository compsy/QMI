{"ast":null,"code":"var _jsxFileName = \"/Users/palp/now/QMI/question-interface-managment/src/components/properties/TextArrayTemplate.js\";\nimport React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectProperty, setTextArrayField, setProperty, removeOption } from \"../../features/questionProperties/questionSlice\";\nimport { TextField, InputAdornment, IconButton, Button, Box, Menu, MenuItem, makeStyles, FormControl, InputLabel, FilledInput, Paper, Slide, Grid, Typography, Tooltip } from \"@material-ui/core\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport AddIcon from \"@material-ui/icons/Add\";\nconst useStyles = makeStyles(theme => ({\n  boxy: {\n    borderRadius: 0\n  },\n  paper: {\n    height: \"250px\",\n    overflow: \"auto\",\n    wordWrap: \"break-word\",\n    wordBreak: \"break-word\"\n  },\n  button: {\n    marginTop: theme.spacing(2),\n    height: \"55px\"\n  },\n  noneBox: {\n    width: \"100%\",\n    height: \"100%\"\n  }\n}));\nexport const TextArrayProperty = ({\n  name,\n  propertyName\n}) => {\n  const property = useSelector(selectProperty(propertyName));\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (property === undefined) {\n      dispatch(setProperty({\n        property: propertyName,\n        value: []\n      }));\n    }\n  }, [property]);\n\n  const handleAddOptionClick = () => {\n    dispatch(setProperty({\n      property: propertyName,\n      value: [...property, \"\"]\n    }));\n  };\n\n  const classes = useStyles();\n  return React.createElement(React.Fragment, null, React.createElement(Paper, {\n    elevation: 0,\n    variant: \"outlined\",\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, property.length > 0 ? property.map((_, index) => React.createElement(EachOptioni, {\n    index: index,\n    name: name,\n    propertyName: propertyName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  })) : React.createElement(Grid, {\n    className: classes.noneBox,\n    container: true,\n    direction: \"row\",\n    justify: \"center\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"body1\",\n    style: {\n      userSelect: \"none\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, `no ${propertyName} provided`)))), React.createElement(Box, {\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(AddOptionButton, {\n    onClick: handleAddOptionClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  })));\n};\n\nfunction EachOptioni({\n  index,\n  name,\n  propertyName\n}) {\n  const type = useSelector(selectProperty(\"type\"));\n  const option = useSelector(state => state.question[propertyName][index]);\n  const dispatch = useDispatch();\n\n  const handleChange = (index, event) => {\n    dispatch(setTextArrayField({\n      property: propertyName,\n      index: index,\n      value: event.target.value\n    }));\n  };\n\n  const handleRemoveOptionClick = index => dispatch(removeOption({\n    property: propertyName,\n    index: index\n  })); // MENU STUFF\n\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleMenuClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n  }; // ----------\n\n\n  const classes = useStyles();\n  return (// <Slide in direction=\"right\">\n    React.createElement(FormControl, {\n      fullWidth: true,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      variant: \"filled\",\n      style: {\n        userSelect: \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, type === \"range\" ? `Label ${index + 1}` : `Option ${index + 1}`), React.createElement(FilledInput // required\n    , {\n      className: classes.boxy,\n      autoFocus: true,\n      autoComplete: \"off\",\n      type: \"text\",\n      id: `option-${index + 1}`,\n      placeholder: type === \"range\" ? \"Enter range label here..\" : \"Enter option title here..\",\n      value: option || \"\",\n      onChange: e => handleChange(index, e),\n      endAdornment: React.createElement(InputAdornment, {\n        position: \"end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        size: \"small\",\n        onClick: handleMenuClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(MoreHorizIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      })), React.createElement(Menu, {\n        id: \"simple-menu\",\n        keepMounted: true,\n        anchorEl: anchorEl,\n        open: Boolean(anchorEl),\n        onClose: handleMenuClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        button: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        variant: \"filled\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, \"Option tooltip\"), React.createElement(FilledInput, {\n        required: true,\n        className: classes.boxy,\n        autoFocus: true,\n        autoComplete: \"off\",\n        type: \"text\",\n        id: `option-${index + 1}-tooltip`,\n        placeholder: \"Enter option tooltip text here..\",\n        value: option || \"\",\n        onChange: e => handleChange(index, e),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }))), React.createElement(MenuItem, {\n        onClick: handleMenuClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"My account\"), React.createElement(MenuItem, {\n        onClick: handleMenuClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"Logout\")), React.createElement(IconButton, {\n        size: \"small\",\n        onClick: () => handleRemoveOptionClick(index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(DeleteIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    })) // </Slide>\n\n  );\n}\n\nconst AddOptionButton = props => {\n  const type = useSelector(selectProperty(\"type\"));\n  const classes = useStyles();\n  return React.createElement(Tooltip, {\n    title: type === \"range\" ? \"add a label\" : \"add an option\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, React.createElement(Button, Object.assign({\n    disableElevation: true,\n    variant: \"contained\",\n    fullWidth: true,\n    color: \"primary\",\n    className: classes.button\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }), React.createElement(AddIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  })));\n};","map":{"version":3,"sources":["/Users/palp/now/QMI/question-interface-managment/src/components/properties/TextArrayTemplate.js"],"names":["React","useEffect","useSelector","useDispatch","selectProperty","setTextArrayField","setProperty","removeOption","TextField","InputAdornment","IconButton","Button","Box","Menu","MenuItem","makeStyles","FormControl","InputLabel","FilledInput","Paper","Slide","Grid","Typography","Tooltip","MoreHorizIcon","DeleteIcon","AddIcon","useStyles","theme","boxy","borderRadius","paper","height","overflow","wordWrap","wordBreak","button","marginTop","spacing","noneBox","width","TextArrayProperty","name","propertyName","property","dispatch","undefined","value","handleAddOptionClick","classes","length","map","_","index","userSelect","EachOptioni","type","option","state","question","handleChange","event","target","handleRemoveOptionClick","anchorEl","setAnchorEl","useState","handleMenuClick","currentTarget","handleMenuClose","e","Boolean","AddOptionButton","props"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  selectProperty,\n  setTextArrayField,\n  setProperty,\n  removeOption,\n} from \"../../features/questionProperties/questionSlice\";\nimport {\n  TextField,\n  InputAdornment,\n  IconButton,\n  Button,\n  Box,\n  Menu,\n  MenuItem,\n  makeStyles,\n  FormControl,\n  InputLabel,\n  FilledInput,\n  Paper,\n  Slide,\n  Grid,\n  Typography,\n  Tooltip,\n} from \"@material-ui/core\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nconst useStyles = makeStyles((theme) => ({\n  boxy: {\n    borderRadius: 0,\n  },\n  paper: {\n    height: \"250px\",\n    overflow: \"auto\",\n    wordWrap: \"break-word\",\n    wordBreak: \"break-word\",\n  },\n  button: {\n    marginTop: theme.spacing(2),\n    height: \"55px\",\n  },\n  noneBox: {\n    width: \"100%\",\n    height: \"100%\",\n  },\n}));\n\nexport const TextArrayProperty = ({ name, propertyName }) => {\n  const property = useSelector(selectProperty(propertyName));\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (property === undefined) {\n      dispatch(setProperty({ property: propertyName, value: [] }));\n    }\n  }, [property]);\n\n  const handleAddOptionClick = () => {\n    dispatch(\n      setProperty({\n        property: propertyName,\n        value: [...property, \"\"],\n      })\n    );\n  };\n\n  const classes = useStyles();\n  return (\n    <>\n      <Paper elevation={0} variant=\"outlined\" className={classes.paper}>\n        {property.length > 0 ? (\n          property.map((_, index) => (\n            <EachOptioni\n              index={index}\n              name={name}\n              propertyName={propertyName}\n            />\n          ))\n        ) : (\n          <Grid\n            className={classes.noneBox}\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n          >\n            <Grid item>\n              <Typography variant=\"body1\" style={{ userSelect: \"none\" }}>{`no ${propertyName} provided`}</Typography>\n            </Grid>\n          </Grid>\n        )}\n      </Paper>\n      <Box textAlign=\"center\">\n        <AddOptionButton onClick={handleAddOptionClick} />\n      </Box>\n    </>\n  );\n};\n\nfunction EachOptioni({ index, name, propertyName }) {\n  const type = useSelector(selectProperty(\"type\"));\n  const option = useSelector((state) => state.question[propertyName][index]);\n  const dispatch = useDispatch();\n\n  const handleChange = (index, event) => {\n    dispatch(\n      setTextArrayField({\n        property: propertyName,\n        index: index,\n        value: event.target.value,\n      })\n    );\n  };\n\n  const handleRemoveOptionClick = (index) =>\n    dispatch(removeOption({ property: propertyName, index: index }));\n\n  // MENU STUFF\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleMenuClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n  };\n\n  // ----------\n\n  const classes = useStyles();\n  return (\n    // <Slide in direction=\"right\">\n    <FormControl fullWidth required>\n      <InputLabel variant=\"filled\" style={{ userSelect: \"none\" }}>\n        {type === \"range\" ? `Label ${index + 1}` : `Option ${index + 1}`}\n      </InputLabel>\n      <FilledInput\n        // required\n        className={classes.boxy}\n        autoFocus\n        autoComplete=\"off\"\n        type=\"text\"\n        id={`option-${index + 1}`}\n        placeholder={\n          type === \"range\"\n            ? \"Enter range label here..\"\n            : \"Enter option title here..\"\n        }\n        value={option || \"\"}\n        onChange={(e) => handleChange(index, e)}\n        endAdornment={\n          <InputAdornment position=\"end\">\n            <IconButton size=\"small\" onClick={handleMenuClick}>\n              <MoreHorizIcon />\n            </IconButton>\n            <Menu\n              id=\"simple-menu\"\n              keepMounted\n              anchorEl={anchorEl}\n              open={Boolean(anchorEl)}\n              onClose={handleMenuClose}\n            >\n              {/* switch case without break for options */}\n              <MenuItem button={false}>\n                <FormControl fullWidth>\n                  <InputLabel variant=\"filled\">Option tooltip</InputLabel>\n                  <FilledInput\n                    required\n                    className={classes.boxy}\n                    autoFocus\n                    autoComplete=\"off\"\n                    type=\"text\"\n                    id={`option-${index + 1}-tooltip`}\n                    placeholder=\"Enter option tooltip text here..\"\n                    value={option || \"\"}\n                    onChange={(e) => handleChange(index, e)}\n                  />\n                </FormControl>\n              </MenuItem>\n              <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n              <MenuItem onClick={handleMenuClose}>Logout</MenuItem>\n            </Menu>\n            <IconButton\n              size=\"small\"\n              onClick={() => handleRemoveOptionClick(index)}\n            >\n              <DeleteIcon />\n            </IconButton>\n          </InputAdornment>\n        }\n      />\n    </FormControl>\n    // </Slide>\n  );\n}\n\nconst AddOptionButton = (props) => {\n  const type = useSelector(selectProperty(\"type\"));\n  const classes = useStyles();\n  return (\n    <Tooltip title={type === \"range\" ? \"add a label\" : \"add an option\"}>\n      <Button\n        disableElevation\n        variant=\"contained\"\n        fullWidth\n        color=\"primary\"\n        className={classes.button}\n        {...props}\n      >\n        <AddIcon />\n      </Button>\n    </Tooltip>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}