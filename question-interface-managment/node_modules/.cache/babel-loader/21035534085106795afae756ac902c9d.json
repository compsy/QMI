{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { initial2, preprocessQuestion } from \"../../utils\";\nexport const questionSlice = createSlice({\n  name: \"question\",\n  // initialState: {\n  //   section_start: undefined,\n  //   title: undefined,\n  //   tooltip: undefined,\n  // },\n  // initialState: CLEAN_QUESTION,\n  initialState: initial2,\n  reducers: {\n    setQuestionBeforeEdit: (state, action) => {\n      return action.payload;\n    },\n    setType: (state, action) => {\n      state.type = action.payload;\n    },\n    setSectionStart: (state, action) => {\n      state.section_start = action.payload;\n    },\n    setTitle: (state, action) => {\n      state.title = action.payload;\n    },\n    setTooltip: (state, action) => {\n      state.tooltip = action.payload;\n    },\n    toggleHidden: state => {\n      state.hidden = !state.hidden;\n    },\n    toggleRequired: state => {\n      state.required = !state.required;\n    },\n    toggleSectionEnd: state => {\n      state.section_end = !state.section_end;\n    },\n    removeOption: (state, action) => {\n      state.options = state.options.filter((_, index) => index !== action.payload);\n    },\n    addOption: state => {\n      state.options = [...state.options, \"\"];\n    },\n    setOption: (state, action) => {\n      state.options[action.payload.index] = action.payload.title;\n    },\n    setFullOption: (state, action) => {\n      state.options[action.payload.index] = action.payload.object;\n    },\n    setOptions: (state, action) => {\n      state.options = action.payload;\n    },\n    setShowOtherwise: (state, action) => {\n      state.show_otherwise = action.payload;\n    },\n    setOtherwiseLabel: (state, action) => {\n      state.otherwise_label = action.payload;\n    },\n    setOtherwiseTooltip: (state, action) => {\n      state.otherwise_tooltip = action.payload;\n    }\n  }\n});\nexport const {\n  setQuestionBeforeEdit,\n  setType,\n  setSectionStart,\n  setTitle,\n  setTooltip,\n  toggleHidden,\n  toggleRequired,\n  toggleSectionEnd,\n  removeOption,\n  addOption,\n  setOption,\n  setFullOption,\n  setOptions,\n  setShowOtherwise,\n  setOtherwiseLabel,\n  setOtherwiseTooltip\n} = questionSlice.actions;\nexport const asyncSet = question => dispatch => {\n  setTimeout(() => {\n    dispatch(setQuestionBeforeEdit(preprocessQuestion(question)));\n  }, 0);\n};\nexport const selectQuestion = state => state.question;\nexport const selectType = state => state.question.type;\nexport const selectSectionStart = state => state.question.section_start;\nexport const selectTitle = state => state.question.title;\nexport const selectTooltip = state => state.question.tooltip;\nexport const selectHidden = state => state.question.hidden;\nexport const selectRequired = state => state.question.required;\nexport const selectSectionEnd = state => state.question.section_end;\nexport const selectOptions = state => state.question.options;\nexport const selectShowOtherwise = state => state.question.show_otherwise;\nexport const selectOtherwiseLabel = state => state.question.otherwise_label;\nexport const selectOtherwiseTooltip = state => state.question.otherwise_tooltip;\nexport default questionSlice.reducer;","map":{"version":3,"sources":["/Users/palp/now/QMI/question-interface-managment/src/features/questionProperties/questionSlice.js"],"names":["createSlice","initial2","preprocessQuestion","questionSlice","name","initialState","reducers","setQuestionBeforeEdit","state","action","payload","setType","type","setSectionStart","section_start","setTitle","title","setTooltip","tooltip","toggleHidden","hidden","toggleRequired","required","toggleSectionEnd","section_end","removeOption","options","filter","_","index","addOption","setOption","setFullOption","object","setOptions","setShowOtherwise","show_otherwise","setOtherwiseLabel","otherwise_label","setOtherwiseTooltip","otherwise_tooltip","actions","asyncSet","question","dispatch","setTimeout","selectQuestion","selectType","selectSectionStart","selectTitle","selectTooltip","selectHidden","selectRequired","selectSectionEnd","selectOptions","selectShowOtherwise","selectOtherwiseLabel","selectOtherwiseTooltip","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { initial2, preprocessQuestion } from \"../../utils\";\n\nexport const questionSlice = createSlice({\n  name: \"question\",\n  // initialState: {\n  //   section_start: undefined,\n  //   title: undefined,\n  //   tooltip: undefined,\n  // },\n  // initialState: CLEAN_QUESTION,\n  initialState: initial2,\n  reducers: {\n    setQuestionBeforeEdit: (state, action) => {\n      return action.payload;\n    },\n    setType: (state, action) => {\n      state.type = action.payload;\n    },\n    setSectionStart: (state, action) => {\n      state.section_start = action.payload;\n    },\n    setTitle: (state, action) => {\n      state.title = action.payload;\n    },\n    setTooltip: (state, action) => {\n      state.tooltip = action.payload;\n    },\n    toggleHidden: (state) => {\n      state.hidden = !state.hidden;\n    },\n    toggleRequired: (state) => {\n      state.required = !state.required;\n    },\n    toggleSectionEnd: (state) => {\n      state.section_end = !state.section_end;\n    },\n    removeOption: (state, action) => {\n      state.options = state.options.filter(\n        (_, index) => index !== action.payload\n      );\n    },\n    addOption: (state) => {\n      state.options = [...state.options, \"\"];\n    },\n    setOption: (state, action) => {\n      state.options[action.payload.index] = action.payload.title;\n    },\n    setFullOption: (state, action) => {\n      state.options[action.payload.index] = action.payload.object;\n    },\n    setOptions: (state, action) => {\n      state.options = action.payload;\n    },\n    setShowOtherwise: (state, action) => {\n      state.show_otherwise = action.payload;\n    },\n    setOtherwiseLabel: (state, action) => {\n      state.otherwise_label = action.payload;\n    },\n    setOtherwiseTooltip: (state, action) => {\n      state.otherwise_tooltip = action.payload;\n    },\n  },\n});\n\nexport const {\n  setQuestionBeforeEdit,\n  setType,\n  setSectionStart,\n  setTitle,\n  setTooltip,\n  toggleHidden,\n  toggleRequired,\n  toggleSectionEnd,\n  removeOption,\n  addOption,\n  setOption,\n  setFullOption,\n  setOptions,\n  setShowOtherwise,\n  setOtherwiseLabel,\n  setOtherwiseTooltip,\n} = questionSlice.actions;\n\nexport const asyncSet = (question) => (dispatch) => {\n  setTimeout(() => {\n    dispatch(setQuestionBeforeEdit(preprocessQuestion(question)));\n  }, 0);\n};\n\nexport const selectQuestion = (state) => state.question;\nexport const selectType = (state) => state.question.type;\nexport const selectSectionStart = (state) => state.question.section_start;\nexport const selectTitle = (state) => state.question.title;\nexport const selectTooltip = (state) => state.question.tooltip;\nexport const selectHidden = (state) => state.question.hidden;\nexport const selectRequired = (state) => state.question.required;\nexport const selectSectionEnd = (state) => state.question.section_end;\nexport const selectOptions = (state) => state.question.options;\nexport const selectShowOtherwise = (state) => state.question.show_otherwise;\nexport const selectOtherwiseLabel = (state) => state.question.otherwise_label;\nexport const selectOtherwiseTooltip = (state) =>\n  state.question.otherwise_tooltip;\n\nexport default questionSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}