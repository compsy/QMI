{"ast":null,"code":"var _jsxFileName = \"/Users/palp/now/QMI/question-interface-managment/src/components/properties/TextTemplate.js\";\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectProperty, setProperty } from \"../../features/questionProperties/questionSlice\";\nimport { TextField, FormControl, InputLabel, FilledInput, makeStyles, Paper } from \"@material-ui/core\";\nconst useStyles = makeStyles(theme => ({\n  boxy: {\n    borderRadius: 0\n  },\n  paper: {\n    overflow: \"auto\",\n    wordWrap: \"break-word\",\n    wordBreak: \"break-word\"\n  }\n}));\nexport const TextProperty = ({\n  name,\n  propertyName,\n  required = false,\n  ...props\n}) => {\n  const property = useSelector(selectProperty(propertyName));\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    dispatch(setProperty({\n      property: propertyName,\n      value: event.target.value\n    }));\n  };\n\n  const classes = useStyles();\n  return React.createElement(TextField, Object.assign({\n    required: required,\n    key: propertyName,\n    fullWidth: true,\n    variant: \"filled\",\n    type: \"text\",\n    id: \"outlined-basic\",\n    value: property,\n    onChange: handleChange,\n    label: name\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })) // <Paper className={classes.paper} variant=\"outlined\" >\n  //   <FormControl fullWidth required={required}>\n  //     <InputLabel variant=\"filled\">{name}</InputLabel>\n  //     <FilledInput\n  //       className={classes.boxy}\n  //       required\n  //       autoFocus\n  //       autoComplete=\"off\"\n  //       type=\"text\"\n  //       id={\"outlined-basic\"}\n  //       placeholder={name}\n  //       value={property || \"\"}\n  //       onChange={handleChange}\n  //       {...props}\n  //     />\n  //   </FormControl>\n  // </Paper>\n  ;\n};","map":{"version":3,"sources":["/Users/palp/now/QMI/question-interface-managment/src/components/properties/TextTemplate.js"],"names":["React","useSelector","useDispatch","selectProperty","setProperty","TextField","FormControl","InputLabel","FilledInput","makeStyles","Paper","useStyles","theme","boxy","borderRadius","paper","overflow","wordWrap","wordBreak","TextProperty","name","propertyName","required","props","property","dispatch","handleChange","event","value","target","classes"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACEC,cADF,EAEEC,WAFF,QAGO,iDAHP;AAIA,SACEC,SADF,EAEEC,WAFF,EAGEC,UAHF,EAIEC,WAJF,EAKEC,UALF,EAMEC,KANF,QAOO,mBAPP;AASA,MAAMC,SAAS,GAAGF,UAAU,CAAEG,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,YAAY,EAAE;AADV,GADiC;AAIvCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE,MADL;AAELC,IAAAA,QAAQ,EAAE,YAFL;AAGLC,IAAAA,SAAS,EAAE;AAHN;AAJgC,CAAZ,CAAD,CAA5B;AAWA,OAAO,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,YAAR;AAAsBC,EAAAA,QAAQ,GAAC,KAA/B;AAAsC,KAAGC;AAAzC,CAAD,KAAsD;AAChF,QAAMC,QAAQ,GAAGvB,WAAW,CAACE,cAAc,CAACkB,YAAD,CAAf,CAA5B;AACA,QAAMI,QAAQ,GAAGvB,WAAW,EAA5B;;AAEA,QAAMwB,YAAY,GAAIC,KAAD,IAAW;AAC9BF,IAAAA,QAAQ,CACNrB,WAAW,CAAC;AACVoB,MAAAA,QAAQ,EAAEH,YADA;AAEVO,MAAAA,KAAK,EAAED,KAAK,CAACE,MAAN,CAAaD;AAFV,KAAD,CADL,CAAR;AAMD,GAPD;;AASA,QAAME,OAAO,GAAGnB,SAAS,EAAzB;AAEA,SACE,oBAAC,SAAD;AACA,IAAA,QAAQ,EAAEW,QADV;AAEE,IAAA,GAAG,EAAED,YAFP;AAGE,IAAA,SAAS,MAHX;AAIE,IAAA,OAAO,EAAC,QAJV;AAKE,IAAA,IAAI,EAAC,MALP;AAME,IAAA,EAAE,EAAE,gBANN;AAOE,IAAA,KAAK,EAAEG,QAPT;AAQE,IAAA,QAAQ,EAAEE,YARZ;AASE,IAAA,KAAK,EAAEN;AATT,KAUMG,KAVN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CAaE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7BF;AA+BD,CA9CM","sourcesContent":["import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  selectProperty,\n  setProperty,\n} from \"../../features/questionProperties/questionSlice\";\nimport {\n  TextField,\n  FormControl,\n  InputLabel,\n  FilledInput,\n  makeStyles,\n  Paper,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  boxy: {\n    borderRadius: 0,\n  },\n  paper: {\n    overflow: \"auto\",\n    wordWrap: \"break-word\",\n    wordBreak: \"break-word\",\n  },\n}));\n\nexport const TextProperty = ({ name, propertyName, required=false, ...props }) => {\n  const property = useSelector(selectProperty(propertyName));\n  const dispatch = useDispatch();\n\n  const handleChange = (event) => {\n    dispatch(\n      setProperty({\n        property: propertyName,\n        value: event.target.value,\n      })\n    );\n  };\n\n  const classes = useStyles();\n\n  return (\n    <TextField\n    required={required}\n      key={propertyName}\n      fullWidth\n      variant=\"filled\"\n      type=\"text\"\n      id={\"outlined-basic\"}\n      value={property}\n      onChange={handleChange}\n      label={name}\n      {...props}\n    />\n    // <Paper className={classes.paper} variant=\"outlined\" >\n    //   <FormControl fullWidth required={required}>\n    //     <InputLabel variant=\"filled\">{name}</InputLabel>\n    //     <FilledInput\n    //       className={classes.boxy}\n    //       required\n    //       autoFocus\n    //       autoComplete=\"off\"\n    //       type=\"text\"\n    //       id={\"outlined-basic\"}\n    //       placeholder={name}\n    //       value={property || \"\"}\n    //       onChange={handleChange}\n    //       {...props}\n    //     />\n    //   </FormControl>\n    // </Paper>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}