{"ast":null,"code":"var _jsxFileName = \"/Users/palp/now/web/10mar/src/components/NewEdit.jsx\";\nimport React, { useState } from 'react';\nimport { List, arrayMove } from 'react-movable';\nimport { Card, CardContent, FormControlLabel, Typography, Checkbox } from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Container } from '@material-ui/core';\nimport ButtonAppBar from './ButtonAppBar';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport CardActions from '@material-ui/core/CardActions'; // import CardContent from '@material-ui/core/CardContent';\n\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport TextField from '@material-ui/core/TextField';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport RadioTemplate from './RadioTemplate';\nimport CheckboxTemplate from './CheckboxTemplate';\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(3)\n  },\n  caption: {\n    position: 'absolute',\n    top: 0,\n    left: 0\n  },\n  con: {\n    display: 'flex'\n  },\n  floatingAdd: {\n    postion: 'fixed',\n    right: 0,\n    bottom: 0\n  }\n}));\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2)\n  },\n  root2: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: 200\n    }\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500]\n  }\n});\n\nfunction NewEdit({\n  questions\n}) {\n  return React.createElement(React.Fragment, null, React.createElement(Container, {\n    maxWidth: \"false\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(ButtonAppBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), React.createElement(ReorderableQuestions, {\n    questions: questions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  })), React.createElement(Fab, {\n    style: {\n      position: 'fixed',\n      bottom: 50,\n      right: 50,\n      zIndex: 999\n    },\n    color: \"primary\",\n    \"aria-label\": \"add\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(AddIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  })));\n} // send questions through props and use that as \n// initial state in useState(init_param) hook\n\n\nconst ReorderableQuestions = props => {\n  const [items, setItems] = useState(props.questions);\n  return React.createElement(Container, {\n    className: \"main\",\n    maxWidth: \"md\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(List, {\n    className: \"drop-container-item\",\n    values: items,\n    onChange: ({\n      oldIndex,\n      newIndex\n    }) => setItems(arrayMove(items, oldIndex, newIndex)),\n    renderList: ({\n      children,\n      props,\n      isDragged\n    }) => React.createElement(\"ul\", Object.assign({}, props, {\n      style: {\n        padding: 0,\n        cursor: isDragged ? \"grabbing\" : undefined\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), children),\n    renderItem: ({\n      value,\n      props,\n      isDragged,\n      isSelected\n    }) => React.createElement(\"li\", Object.assign({}, props, {\n      style: { ...props.style,\n        padding: \"0 0\",\n        // padding: \"1.5em\",\n        margin: \"1em 0em\",\n        // margin: \"0.5em 0em\",\n        listStyleType: \"none\",\n        cursor: isDragged ? \"grabbing\" : \"grab\",\n        textAlign: \"center\",\n        boxShadow: isDragged ? '0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22)' : '0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), (() => {\n      switch (value.type) {\n        case 'radio':\n          return React.createElement(RadioTemplate, {\n            value: value,\n            items: items,\n            setItems: setItems,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 135\n            },\n            __self: this\n          });\n\n        case 'checkbox':\n          return React.createElement(CheckboxTemplate, {\n            value: value,\n            items: items,\n            setItems: setItems,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 137\n            },\n            __self: this\n          });\n\n        default:\n          return null;\n      }\n    })()),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: () => console.log(JSON.stringify(items)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, \"click me\"));\n};\n\nexport default NewEdit;","map":{"version":3,"sources":["/Users/palp/now/web/10mar/src/components/NewEdit.jsx"],"names":["React","useState","List","arrayMove","Card","CardContent","FormControlLabel","Typography","Checkbox","makeStyles","Container","ButtonAppBar","InputLabel","MenuItem","FormHelperText","FormControl","Select","Radio","RadioGroup","CardActions","CardMedia","Button","ArrowBackIcon","Dialog","MuiDialogTitle","MuiDialogContent","MuiDialogActions","withStyles","IconButton","CloseIcon","TextField","DialogContentText","Fab","AddIcon","RadioTemplate","CheckboxTemplate","useStyles","theme","formControl","margin","spacing","caption","position","top","left","con","display","floatingAdd","postion","right","bottom","styles","root","padding","root2","width","closeButton","color","palette","grey","NewEdit","questions","zIndex","ReorderableQuestions","props","items","setItems","oldIndex","newIndex","children","isDragged","cursor","undefined","value","isSelected","style","listStyleType","textAlign","boxShadow","type","console","log","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { List, arrayMove } from 'react-movable';\nimport { Card, CardContent, FormControlLabel, Typography, Checkbox } from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Container } from '@material-ui/core';\nimport ButtonAppBar from './ButtonAppBar';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\n\nimport CardActions from '@material-ui/core/CardActions';\n// import CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\n\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport TextField from '@material-ui/core/TextField';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport RadioTemplate from './RadioTemplate';\nimport CheckboxTemplate from './CheckboxTemplate';\n\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(3),\n  },\n  caption: {\n    position: 'absolute',\n    top: 0,\n    left: 0\n  },\n  con: {\n    display: 'flex',\n  },\n  floatingAdd: {\n    postion: 'fixed',\n    right: 0,\n    bottom: 0\n  }\n}));\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  root2: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: 200,\n    },\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\n\nfunction NewEdit({questions}) {\n\n  return (\n    <>\n      <Container maxWidth=\"false\">\n        <ButtonAppBar />\n        <ReorderableQuestions questions={questions}/>\n        \n      </Container>\n      <Fab style={{position: 'fixed', bottom: 50, right: 50, zIndex: 999}} color=\"primary\" aria-label=\"add\">\n        <AddIcon />\n      </Fab>\n    </>\n  );\n\n}\n\n// send questions through props and use that as \n// initial state in useState(init_param) hook\nconst ReorderableQuestions = (props) => {\n \n  const [items, setItems] = useState(props.questions);\n\n  return (\n    <Container className=\"main\" maxWidth=\"md\">\n      <List\n        className=\"drop-container-item\"\n        values={items}\n        onChange={({ oldIndex, newIndex }) =>\n          setItems(arrayMove(items, oldIndex, newIndex))\n        }\n        renderList={({ children, props, isDragged }) => (\n          <ul\n            {...props}\n            style={{ padding: 0, cursor: isDragged ? \"grabbing\" : undefined }}\n          >\n            {children}\n          </ul>\n        )}\n        renderItem={({ value, props, isDragged, isSelected }) => (\n          <li\n            {...props}\n            style={{\n              ...props.style,\n              padding: \"0 0\",\n              // padding: \"1.5em\",\n              margin: \"1em 0em\",\n              // margin: \"0.5em 0em\",\n              listStyleType: \"none\",\n              cursor: isDragged ? \"grabbing\" : \"grab\",\n              textAlign: \"center\",\n              boxShadow: isDragged ? '0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22)' : '0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24)'\n            }}\n          >\n            {(() => {\n              switch(value.type) {\n                case 'radio':\n                  return <RadioTemplate value={value} items={items} setItems={setItems}/>\n                case 'checkbox':\n                  return <CheckboxTemplate value={value} items={items} setItems={setItems}/>\n                default:\n                  return null;\n              }\n            })()}\n          </li>\n        )}\n      />\n      <button onClick={() => console.log(JSON.stringify(items))}>click me</button>\n    </Container>\n    \n  );\n};\n\nexport default NewEdit;"]},"metadata":{},"sourceType":"module"}