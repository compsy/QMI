{"ast":null,"code":"var _jsxFileName = \"/Users/palp/now/QMI/question-interface-managment/src/components/properties/TypeProperty.js\";\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FormControl, InputLabel, Select, MenuItem, Paper } from \"@material-ui/core\";\nimport { QUESTION_TYPES, capitalize } from \"../../utils\";\nimport { setProperty } from \"../../features/questionProperties/questionSlice\";\nexport default function TypeProperty() {\n  const type = useSelector(state => state.question.type);\n  const dispatch = useDispatch();\n  return (// <div className=\"type-property\">\n    React.createElement(Paper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      variant: \"filled\",\n      onClick: e => e.stopPropagation(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      id: \"type-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"Type\"), React.createElement(Select, {\n      labelId: \"type-label\",\n      id: \"type\",\n      name: \"type\",\n      value: type || \"\",\n      onChange: e => dispatch(setProperty({\n        property: \"type\",\n        value: e.target.value\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, QUESTION_TYPES.map(obj => React.createElement(MenuItem, {\n      key: obj.type,\n      value: obj.type,\n      disabled: obj.disabled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, capitalize(obj.type)))))) // {/* </div> */}\n\n  );\n}","map":{"version":3,"sources":["/Users/palp/now/QMI/question-interface-managment/src/components/properties/TypeProperty.js"],"names":["React","useSelector","useDispatch","FormControl","InputLabel","Select","MenuItem","Paper","QUESTION_TYPES","capitalize","setProperty","TypeProperty","type","state","question","dispatch","e","stopPropagation","property","value","target","map","obj","disabled"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,EAAsBC,UAAtB,EAAkCC,MAAlC,EAA0CC,QAA1C,EAAoDC,KAApD,QAAiE,mBAAjE;AACA,SAASC,cAAT,EAAyBC,UAAzB,QAA2C,aAA3C;AACA,SAASC,WAAT,QAA4B,iDAA5B;AAEA,eAAe,SAASC,YAAT,GAAwB;AACrC,QAAMC,IAAI,GAAGX,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACC,QAAN,CAAeF,IAAzB,CAAxB;AACA,QAAMG,QAAQ,GAAGb,WAAW,EAA5B;AAEA,SACE;AACE,wBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA,oBAAC,WAAD;AAAa,MAAA,OAAO,EAAC,QAArB;AAA8B,MAAA,OAAO,EAAGc,CAAD,IAAOA,CAAC,CAACC,eAAF,EAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,EAAE,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAC,YADV;AAEE,MAAA,EAAE,EAAC,MAFL;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,KAAK,EAAEL,IAAI,IAAI,EAJjB;AAKE,MAAA,QAAQ,EAAGI,CAAD,IAAOD,QAAQ,CAACL,WAAW,CAAC;AAACQ,QAAAA,QAAQ,EAAE,MAAX;AAAmBC,QAAAA,KAAK,EAAEH,CAAC,CAACI,MAAF,CAASD;AAAnC,OAAD,CAAZ,CAL3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOGX,cAAc,CAACa,GAAf,CAAoBC,GAAD,IAClB,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,GAAG,CAACV,IAAnB;AAAyB,MAAA,KAAK,EAAEU,GAAG,CAACV,IAApC;AAA0C,MAAA,QAAQ,EAAEU,GAAG,CAACC,QAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGd,UAAU,CAACa,GAAG,CAACV,IAAL,CADb,CADD,CAPH,CAFF,CAFA,CAFJ,CAqBE;;AArBF;AAuBD","sourcesContent":["\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FormControl, InputLabel, Select, MenuItem, Paper } from \"@material-ui/core\";\nimport { QUESTION_TYPES, capitalize } from \"../../utils\";\nimport { setProperty } from \"../../features/questionProperties/questionSlice\";\n\nexport default function TypeProperty() {\n  const type = useSelector(state => state.question.type);\n  const dispatch = useDispatch();\n\n  return (\n    // <div className=\"type-property\">\n      <Paper>\n\n      <FormControl variant=\"filled\" onClick={(e) => e.stopPropagation()}>\n        <InputLabel id=\"type-label\">Type</InputLabel>\n        <Select\n          labelId=\"type-label\"\n          id=\"type\"\n          name=\"type\"\n          value={type || \"\"}\n          onChange={(e) => dispatch(setProperty({property: \"type\", value: e.target.value}))}\n          >\n          {QUESTION_TYPES.map((obj) => (\n            <MenuItem key={obj.type} value={obj.type} disabled={obj.disabled}>\n              {capitalize(obj.type)}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n          </Paper>\n    // {/* </div> */}\n  );\n}\n"]},"metadata":{},"sourceType":"module"}