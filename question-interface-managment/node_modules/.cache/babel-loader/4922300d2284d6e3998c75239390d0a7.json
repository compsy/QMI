{"ast":null,"code":"var _jsxFileName = \"/Users/palp/now/QMI/question-interface-managment/src/components/buttons/ToggleExpansionPanelsButton.js\";\nimport React, { useContext } from \"react\";\nimport { SettingsContext } from \"../../contexts/SettingsContext\";\nimport { Button } from \"@material-ui/core\";\n\nconst ToggleExpansionPanelsButton = () => {\n  const {\n    settings,\n    dispatch\n  } = useContext(SettingsContext);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"outlined\",\n    onClick: () => dispatch({\n      type: \"TOGGLE_EXPANSION_PANELS\"\n    }),\n    style: {\n      margin: \"0.5em auto\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, settings.expanded ? \"close all\" : \"expand all\"));\n};\n\nexport default ToggleExpansionPanelsButton;","map":{"version":3,"sources":["/Users/palp/now/QMI/question-interface-managment/src/components/buttons/ToggleExpansionPanelsButton.js"],"names":["React","useContext","SettingsContext","Button","ToggleExpansionPanelsButton","settings","dispatch","type","margin","expanded"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,MAAT,QAAuB,mBAAvB;;AAEA,MAAMC,2BAA2B,GAAG,MAAM;AACxC,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAyBL,UAAU,CAACC,eAAD,CAAzC;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,UADV;AAEE,IAAA,OAAO,EAAE,MAAMI,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAD,CAFzB;AAGE,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGH,QAAQ,CAACI,QAAT,GAAoB,WAApB,GAAkC,YALrC,CADF,CADF;AAWD,CAbD;;AAeA,eAAeL,2BAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport { SettingsContext } from \"../../contexts/SettingsContext\";\nimport { Button } from \"@material-ui/core\";\n\nconst ToggleExpansionPanelsButton = () => {\n  const { settings, dispatch } = useContext(SettingsContext);\n  return (\n    <div>\n      <Button\n        variant=\"outlined\"\n        onClick={() => dispatch({ type: \"TOGGLE_EXPANSION_PANELS\" })}\n        style={{ margin: \"0.5em auto\" }}\n      >\n        {settings.expanded ? \"close all\" : \"expand all\"}\n      </Button>\n    </div>\n  );\n};\n\nexport default ToggleExpansionPanelsButton;\n"]},"metadata":{},"sourceType":"module"}