{"ast":null,"code":"var _jsxFileName = \"/Users/palp/now/QMI/question-interface-managment/src/components/StringifiedJSONCard.js\";\nimport React from 'react';\n\nconst StringifiedJSONCard = () => {\n  const {\n    questions\n  } = useContext(QuestionnaireContext); // formats the ids\n\n  const toPrint = questions.map((question, index) => {\n    const obj = question.type === \"range\" ? {\n      id: `v${index + 1}`,\n      type: question.type,\n      title: question.title,\n      labels: question.options\n    } : { ...question,\n      id: `v${index + 1}`\n    };\n    return obj;\n  });\n  return React.createElement(Card, {\n    variant: \"outlined\",\n    style: {\n      wordWrap: \"break-word\",\n      wordBreak: \"break-word\",\n      margin: \"0.5em auto\",\n      padding: \"2em\",\n      height: \"150px\",\n      overflow: \"scroll\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"body2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, JSON.stringify(toPrint)));\n};\n\nexport default StringifiedJSONCard;","map":{"version":3,"sources":["/Users/palp/now/QMI/question-interface-managment/src/components/StringifiedJSONCard.js"],"names":["React","StringifiedJSONCard","questions","useContext","QuestionnaireContext","toPrint","map","question","index","obj","type","id","title","labels","options","wordWrap","wordBreak","margin","padding","height","overflow","JSON","stringify"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,mBAAmB,GAAG,MAAM;AAChC,QAAM;AAAEC,IAAAA;AAAF,MAAgBC,UAAU,CAACC,oBAAD,CAAhC,CADgC,CAEhC;;AACA,QAAMC,OAAO,GAAGH,SAAS,CAACI,GAAV,CAAc,CAACC,QAAD,EAAWC,KAAX,KAAqB;AACjD,UAAMC,GAAG,GACPF,QAAQ,CAACG,IAAT,KAAkB,OAAlB,GACI;AACEC,MAAAA,EAAE,EAAG,IAAGH,KAAK,GAAG,CAAE,EADpB;AAEEE,MAAAA,IAAI,EAAEH,QAAQ,CAACG,IAFjB;AAGEE,MAAAA,KAAK,EAAEL,QAAQ,CAACK,KAHlB;AAIEC,MAAAA,MAAM,EAAEN,QAAQ,CAACO;AAJnB,KADJ,GAOI,EACE,GAAGP,QADL;AAEEI,MAAAA,EAAE,EAAG,IAAGH,KAAK,GAAG,CAAE;AAFpB,KARN;AAYA,WAAOC,GAAP;AACD,GAde,CAAhB;AAeA,SACE,oBAAC,IAAD;AACE,IAAA,OAAO,EAAC,UADV;AAEE,IAAA,KAAK,EAAE;AACLM,MAAAA,QAAQ,EAAE,YADL;AAELC,MAAAA,SAAS,EAAE,YAFN;AAGLC,MAAAA,MAAM,EAAE,YAHH;AAILC,MAAAA,OAAO,EAAE,KAJJ;AAKLC,MAAAA,MAAM,EAAE,OALH;AAMLC,MAAAA,QAAQ,EAAE;AANL,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BC,IAAI,CAACC,SAAL,CAAejB,OAAf,CAA7B,CAXF,CADF;AAeD,CAjCD;;AAmCA,eAAeJ,mBAAf","sourcesContent":["import React from 'react'\n\nconst StringifiedJSONCard = () => {\n  const { questions } = useContext(QuestionnaireContext);\n  // formats the ids\n  const toPrint = questions.map((question, index) => {\n    const obj =\n      question.type === \"range\"\n        ? {\n            id: `v${index + 1}`,\n            type: question.type,\n            title: question.title,\n            labels: question.options\n          }\n        : {\n            ...question,\n            id: `v${index + 1}`\n          };\n    return obj;\n  });\n  return (\n    <Card\n      variant=\"outlined\"\n      style={{\n        wordWrap: \"break-word\",\n        wordBreak: \"break-word\",\n        margin: \"0.5em auto\",\n        padding: \"2em\",\n        height: \"150px\",\n        overflow: \"scroll\"\n      }}\n    >\n      <Typography variant=\"body2\">{JSON.stringify(toPrint)}</Typography>\n    </Card>\n  );\n};\n\nexport default StringifiedJSONCard;"]},"metadata":{},"sourceType":"module"}