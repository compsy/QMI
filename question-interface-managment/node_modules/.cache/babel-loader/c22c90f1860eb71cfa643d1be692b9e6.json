{"ast":null,"code":"var _jsxFileName = \"/Users/palp/now/QMI/question-interface-managment/src/components/properties/NumericTemplate.js\";\nimport React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectProperty, setProperty } from \"../../features/questionProperties/questionSlice\";\nimport { TextField } from \"@material-ui/core\";\nexport const NumericProperty = ({\n  name,\n  propertyName,\n  ...props\n}) => {\n  const property = useSelector(selectProperty(propertyName));\n  const dispatch = useDispatch();\n  const [valid, setValid] = useState(false);\n  useEffect(() => {\n    if (Number.isFinite(property) || property === undefined || property === \"\") {\n      setValid(true);\n    } else {\n      setValid(false);\n    }\n  }, [property]);\n\n  const handleChange = event => {\n    dispatch(setProperty({\n      property: propertyName,\n      value: event.target.value\n    }));\n  };\n\n  return React.createElement(TextField, Object.assign({\n    key: id,\n    error: valid,\n    variant: \"outlined\",\n    margin: \"dense\",\n    type: \"number\",\n    fullWidth: true,\n    id: \"outlined-error-helper-text\",\n    value: property || \"\",\n    helperText: valid ? \"\" : \"Please use numbers only.\",\n    onChange: handleChange,\n    label: name\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["/Users/palp/now/QMI/question-interface-managment/src/components/properties/NumericTemplate.js"],"names":["React","useState","useEffect","useSelector","useDispatch","selectProperty","setProperty","TextField","NumericProperty","name","propertyName","props","property","dispatch","valid","setValid","Number","isFinite","undefined","handleChange","event","value","target","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACEC,cADF,EAEEC,WAFF,QAGO,iDAHP;AAIA,SAASC,SAAT,QAA0B,mBAA1B;AAEA,OAAO,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,YAAR;AAAsB,KAAGC;AAAzB,CAAD,KAAsC;AACnE,QAAMC,QAAQ,GAAGT,WAAW,CAACE,cAAc,CAACK,YAAD,CAAf,CAA5B;AACA,QAAMG,QAAQ,GAAGT,WAAW,EAA5B;AAEA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,KAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QACEc,MAAM,CAACC,QAAP,CAAgBL,QAAhB,KACAA,QAAQ,KAAKM,SADb,IAEAN,QAAQ,KAAK,EAHf,EAIE;AACAG,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,KAND,MAMO;AACLA,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACD;AACF,GAVQ,EAUN,CAACH,QAAD,CAVM,CAAT;;AAYA,QAAMO,YAAY,GAAIC,KAAD,IAAW;AAC9BP,IAAAA,QAAQ,CACNP,WAAW,CAAC;AAAEM,MAAAA,QAAQ,EAAEF,YAAZ;AAA0BW,MAAAA,KAAK,EAAED,KAAK,CAACE,MAAN,CAAaD;AAA9C,KAAD,CADL,CAAR;AAGD,GAJD;;AAMA,SACE,oBAAC,SAAD;AACE,IAAA,GAAG,EAAEE,EADP;AAEE,IAAA,KAAK,EAAET,KAFT;AAGE,IAAA,OAAO,EAAC,UAHV;AAIE,IAAA,MAAM,EAAC,OAJT;AAKE,IAAA,IAAI,EAAC,QALP;AAME,IAAA,SAAS,MANX;AAOE,IAAA,EAAE,EAAE,4BAPN;AAQE,IAAA,KAAK,EAAEF,QAAQ,IAAI,EARrB;AASE,IAAA,UAAU,EAAEE,KAAK,GAAG,EAAH,GAAQ,0BAT3B;AAUE,IAAA,QAAQ,EAAEK,YAVZ;AAWE,IAAA,KAAK,EAAEV;AAXT,KAYME,KAZN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAgBD,CAxCM","sourcesContent":["import React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  selectProperty,\n  setProperty,\n} from \"../../features/questionProperties/questionSlice\";\nimport { TextField } from \"@material-ui/core\";\n\nexport const NumericProperty = ({ name, propertyName, ...props }) => {\n  const property = useSelector(selectProperty(propertyName));\n  const dispatch = useDispatch();\n\n  const [valid, setValid] = useState(false);\n\n  useEffect(() => {\n    if (\n      Number.isFinite(property) ||\n      property === undefined ||\n      property === \"\"\n    ) {\n      setValid(true);\n    } else {\n      setValid(false);\n    }\n  }, [property]);\n\n  const handleChange = (event) => {\n    dispatch(\n      setProperty({ property: propertyName, value: event.target.value })\n    );\n  };\n\n  return (\n    <TextField\n      key={id}\n      error={valid}\n      variant=\"outlined\"\n      margin=\"dense\"\n      type=\"number\"\n      fullWidth\n      id={\"outlined-error-helper-text\"}\n      value={property || \"\"}\n      helperText={valid ? \"\" : \"Please use numbers only.\"}\n      onChange={handleChange}\n      label={name}\n      {...props}\n    />\n  );\n};\n"]},"metadata":{},"sourceType":"module"}