{"ast":null,"code":"var _jsxFileName = \"/Users/palp/now/QMI/question-interface-managment/src/components/buttons/AddQuestionButton2.js\";\nimport React, { useContext, useState } from \"react\";\nimport SpeedDial from \"@material-ui/lab/SpeedDial\";\nimport SpeedDialIcon from \"@material-ui/lab/SpeedDialIcon\";\nimport SpeedDialAction from \"@material-ui/lab/SpeedDialAction\";\nimport RadioButtonCheckedIcon from \"@material-ui/icons/RadioButtonChecked\";\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\nimport { QuestionnaireContext } from \"../../contexts/QuestionnaireContext\";\nimport TuneIcon from '@material-ui/icons/Tune';\nimport LinearScaleIcon from '@material-ui/icons/LinearScale';\nconst actions = [{\n  icon: React.createElement(RadioButtonCheckedIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }),\n  name: \"radio\"\n}, {\n  icon: React.createElement(CheckBoxIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }),\n  name: \"checkbox\"\n}, {\n  icon: React.createElement(TuneIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }),\n  name: \"range\"\n}, {\n  icon: React.createElement(LinearScaleIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }),\n  name: \"likert\"\n}];\n\nconst AddQuestionButton2 = () => {\n  const [open, setOpen] = useState(false);\n  const {\n    dispatch\n  } = useContext(QuestionnaireContext);\n\n  const handleClick = event => {\n    setOpen(false);\n\n    switch (event.currentTarget.id) {\n      case 'speeddial-action-0':\n        dispatch({\n          type: \"ADD_QUESTION\",\n          questionType: \"radio\"\n        });\n        break;\n\n      case 'speeddial-action-1':\n        dispatch({\n          type: \"ADD_QUESTION\",\n          questionType: \"checkbox\"\n        });\n        break;\n\n      case 'speeddial-action-2':\n        dispatch({\n          type: \"ADD_QUESTION\",\n          questionType: \"range\"\n        });\n        break;\n\n      case 'speeddial-action-3':\n        dispatch({\n          type: \"ADD_QUESTION\",\n          questionType: \"likert\"\n        });\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return React.createElement(\"div\", {\n    style: {\n      margin: \"2em 0\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(SpeedDial, {\n    ariaLabel: \"speeddial\" // className={classes.speedDial}\n    ,\n    direction: \"down\",\n    icon: React.createElement(SpeedDialIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }),\n    onClose: () => setOpen(false),\n    onOpen: () => setOpen(true),\n    open: open,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, actions.map(action => React.createElement(SpeedDialAction, {\n    key: action.name,\n    icon: action.icon,\n    tooltipTitle: action.name,\n    tooltipOpen: true,\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }))));\n};\n\nexport default AddQuestionButton2;","map":{"version":3,"sources":["/Users/palp/now/QMI/question-interface-managment/src/components/buttons/AddQuestionButton2.js"],"names":["React","useContext","useState","SpeedDial","SpeedDialIcon","SpeedDialAction","RadioButtonCheckedIcon","CheckBoxIcon","QuestionnaireContext","TuneIcon","LinearScaleIcon","actions","icon","name","AddQuestionButton2","open","setOpen","dispatch","handleClick","event","currentTarget","id","type","questionType","margin","map","action"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport SpeedDial from \"@material-ui/lab/SpeedDial\";\nimport SpeedDialIcon from \"@material-ui/lab/SpeedDialIcon\";\nimport SpeedDialAction from \"@material-ui/lab/SpeedDialAction\";\nimport RadioButtonCheckedIcon from \"@material-ui/icons/RadioButtonChecked\";\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\nimport { QuestionnaireContext } from \"../../contexts/QuestionnaireContext\";\nimport TuneIcon from '@material-ui/icons/Tune';\nimport LinearScaleIcon from '@material-ui/icons/LinearScale';\n\nconst actions = [\n  { icon: <RadioButtonCheckedIcon />, name: \"radio\" },\n  { icon: <CheckBoxIcon />, name: \"checkbox\" },\n  { icon: <TuneIcon />, name: \"range\" },\n  { icon: <LinearScaleIcon />, name: \"likert\" },\n];\n\nconst AddQuestionButton2 = () => {\n  const [open, setOpen] = useState(false);\n  const { dispatch } = useContext(QuestionnaireContext);\n\n  const handleClick = event => {\n    setOpen(false);\n    switch (event.currentTarget.id) {\n      case 'speeddial-action-0':\n        dispatch({ type: \"ADD_QUESTION\", questionType: \"radio\" })\n        break;\n      case 'speeddial-action-1':\n        dispatch({ type: \"ADD_QUESTION\", questionType: \"checkbox\" })\n        break;\n      case 'speeddial-action-2':\n        dispatch({ type: \"ADD_QUESTION\", questionType: \"range\" })\n        break;\n      case 'speeddial-action-3':\n        dispatch({ type: \"ADD_QUESTION\", questionType: \"likert\" })\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <div style={{ margin: \"2em 0\" }}>\n      <SpeedDial\n        ariaLabel=\"speeddial\"\n        // className={classes.speedDial}\n        direction=\"down\"\n        icon={<SpeedDialIcon />}\n        onClose={() => setOpen(false)}\n        onOpen={() => setOpen(true)}\n        open={open}\n      >\n        {actions.map(action => (\n          <SpeedDialAction\n            key={action.name}\n            icon={action.icon}\n            tooltipTitle={action.name}\n            tooltipOpen\n            onClick={handleClick}\n          />\n        ))}\n      </SpeedDial>\n    </div>\n  );\n};\n\nexport default AddQuestionButton2;\n"]},"metadata":{},"sourceType":"module"}