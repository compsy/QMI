{"ast":null,"code":"var _jsxFileName = \"/Users/palp/now/QMI/question-interface-managment/src/components/previews/RangePreview.js\";\nimport React from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\nimport Typography from '@material-ui/core/Typography';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: 300 + theme.spacing(3) * 2\n  },\n  margin: {\n    height: theme.spacing(3)\n  }\n}));\nconst PrettoSlider = withStyles({\n  root: {\n    color: '#52af77',\n    height: 8\n  },\n  thumb: {\n    height: 24,\n    width: 24,\n    backgroundColor: '#fff',\n    border: '2px solid currentColor',\n    marginTop: -8,\n    marginLeft: -12,\n    '&:focus, &:hover, &$active': {\n      boxShadow: 'inherit'\n    }\n  },\n  active: {},\n  valueLabel: {\n    left: 'calc(-50% + 4px)'\n  },\n  track: {\n    height: 8,\n    borderRadius: 4\n  },\n  rail: {\n    height: 8,\n    borderRadius: 4\n  }\n})(Slider);\n\nconst RangePreview = ({\n  question\n}) => {\n  const classes = useStyles();\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Pretto\"), React.createElement(PrettoSlider, {\n    valueLabelDisplay: \"auto\",\n    \"aria-label\": \"pretto slider\",\n    defaultValue: 30,\n    \"aria-labelledby\": \"discrete-slider\",\n    step: question.step,\n    marks: true,\n    min: question.min,\n    max: question.max,\n    title: question.title // tooltip = {question.tooltip}\n    ,\n    labels: question.labels,\n    section_end: question.section_end,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }));\n};\n\nexport default RangePreview;","map":{"version":3,"sources":["/Users/palp/now/QMI/question-interface-managment/src/components/previews/RangePreview.js"],"names":["React","makeStyles","withStyles","Slider","Typography","useStyles","theme","root","width","spacing","margin","height","PrettoSlider","color","thumb","backgroundColor","border","marginTop","marginLeft","boxShadow","active","valueLabel","left","track","borderRadius","rail","RangePreview","question","classes","step","min","max","title","labels","section_end"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,EAAoBC,UAApB,QAAqC,0BAArC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AAGA,MAAMC,SAAS,GAAGJ,UAAU,CAACK,KAAK,KAAK;AACnCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,KAAK,EAAE,MAAMF,KAAK,CAACG,OAAN,CAAc,CAAd,IAAmB;AAD9B,GAD6B;AAInCC,EAAAA,MAAM,EAAE;AACJC,IAAAA,MAAM,EAAEL,KAAK,CAACG,OAAN,CAAc,CAAd;AADJ;AAJ2B,CAAL,CAAN,CAA5B;AAUA,MAAMG,YAAY,GAAGV,UAAU,CAAC;AAC5BK,EAAAA,IAAI,EAAE;AACFM,IAAAA,KAAK,EAAE,SADL;AAEFF,IAAAA,MAAM,EAAE;AAFN,GADsB;AAK5BG,EAAAA,KAAK,EAAE;AACHH,IAAAA,MAAM,EAAE,EADL;AAEHH,IAAAA,KAAK,EAAE,EAFJ;AAGHO,IAAAA,eAAe,EAAE,MAHd;AAIHC,IAAAA,MAAM,EAAE,wBAJL;AAKHC,IAAAA,SAAS,EAAE,CAAC,CALT;AAMHC,IAAAA,UAAU,EAAE,CAAC,EANV;AAOH,kCAA8B;AAC1BC,MAAAA,SAAS,EAAE;AADe;AAP3B,GALqB;AAgB5BC,EAAAA,MAAM,EAAE,EAhBoB;AAiB5BC,EAAAA,UAAU,EAAE;AACRC,IAAAA,IAAI,EAAE;AADE,GAjBgB;AAoB5BC,EAAAA,KAAK,EAAE;AACHZ,IAAAA,MAAM,EAAE,CADL;AAEHa,IAAAA,YAAY,EAAE;AAFX,GApBqB;AAwB5BC,EAAAA,IAAI,EAAE;AACFd,IAAAA,MAAM,EAAE,CADN;AAEFa,IAAAA,YAAY,EAAE;AAFZ;AAxBsB,CAAD,CAAV,CA4BlBrB,MA5BkB,CAArB;;AAgCA,MAAOuB,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACpC,QAAMC,OAAO,GAAGvB,SAAS,EAAzB;AAEA,SACI;AAAK,IAAA,SAAS,EAAEuB,OAAO,CAACrB,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,YAAY,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI,oBAAC,YAAD;AAAc,IAAA,iBAAiB,EAAC,MAAhC;AAAuC,kBAAW,eAAlD;AACc,IAAA,YAAY,EAAE,EAD5B;AAEc,uBAAgB,iBAF9B;AAGc,IAAA,IAAI,EAAEoB,QAAQ,CAACE,IAH7B;AAIc,IAAA,KAAK,MAJnB;AAKc,IAAA,GAAG,EAAEF,QAAQ,CAACG,GAL5B;AAMc,IAAA,GAAG,EAAEH,QAAQ,CAACI,GAN5B;AAOc,IAAA,KAAK,EAAIJ,QAAQ,CAACK,KAPhC,CAQc;AARd;AASc,IAAA,MAAM,EAAIL,QAAQ,CAACM,MATjC;AAUc,IAAA,WAAW,EAAIN,QAAQ,CAACO,WAVtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAiBH,CApBD;;AAsBA,eAAeR,YAAf","sourcesContent":["import React from 'react';\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\nimport Typography from '@material-ui/core/Typography';\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: 300 + theme.spacing(3) * 2,\n    },\n    margin: {\n        height: theme.spacing(3),\n    },\n}));\n\n\nconst PrettoSlider = withStyles({\n    root: {\n        color: '#52af77',\n        height: 8,\n    },\n    thumb: {\n        height: 24,\n        width: 24,\n        backgroundColor: '#fff',\n        border: '2px solid currentColor',\n        marginTop: -8,\n        marginLeft: -12,\n        '&:focus, &:hover, &$active': {\n            boxShadow: 'inherit',\n        },\n    },\n    active: {},\n    valueLabel: {\n        left: 'calc(-50% + 4px)',\n    },\n    track: {\n        height: 8,\n        borderRadius: 4,\n    },\n    rail: {\n        height: 8,\n        borderRadius: 4,\n    },\n})(Slider);\n\n\n\nconst  RangePreview = ({ question }) => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Typography gutterBottom>Pretto</Typography>\n            <PrettoSlider valueLabelDisplay=\"auto\" aria-label=\"pretto slider\"\n                          defaultValue={30}\n                          aria-labelledby=\"discrete-slider\"\n                          step={question.step}\n                          marks\n                          min={question.min}\n                          max={question.max}\n                          title = {question.title}\n                          // tooltip = {question.tooltip}\n                          labels = {question.labels}\n                          section_end = {question.section_end}\n            />\n        </div>\n    );\n};\n\nexport default RangePreview\n"]},"metadata":{},"sourceType":"module"}