{"ast":null,"code":"var _jsxFileName = \"/Users/palp/now/web/10mar/src/components/NewEdit.jsx\";\nimport React, { useState } from 'react';\nimport { List, arrayMove } from 'react-movable';\nimport { Card, CardContent, FormControlLabel, Typography } from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Container } from '@material-ui/core';\nimport ButtonAppBar from './ButtonAppBar';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport CardActions from '@material-ui/core/CardActions'; // import CardContent from '@material-ui/core/CardContent';\n\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport TextField from '@material-ui/core/TextField';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport RadioQuestion from './RadioQuestion';\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(3)\n  },\n  caption: {\n    position: 'absolute',\n    top: 0,\n    left: 0\n  },\n  con: {\n    display: 'flex'\n  },\n  floatingAdd: {\n    postion: 'fixed',\n    right: 0,\n    bottom: 0\n  }\n}));\nconst fabStyle = {\n  right: 20,\n  position: 'fixed'\n};\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2)\n  },\n  root2: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: 200\n    }\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500]\n  }\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const {\n    children,\n    classes,\n    onClose,\n    ...other\n  } = props;\n  return React.createElement(MuiDialogTitle, Object.assign({\n    disableTypography: true,\n    className: classes.root\n  }, other, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    variant: \"h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, children), onClose ? React.createElement(IconButton, {\n    \"aria-label\": \"close\",\n    className: classes.closeButton,\n    onClick: onClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(CloseIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  })) : null);\n});\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2)\n  }\n}))(MuiDialogContent);\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1)\n  }\n}))(MuiDialogActions);\nconst questionTypes = [{\n  value: 'radio',\n  label: 'radio'\n}, {\n  value: 'checkbox',\n  label: 'checkbox'\n}];\n\nfunction NewEdit({\n  questions\n}) {\n  return React.createElement(React.Fragment, null, React.createElement(Container, {\n    maxWidth: \"false\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(ButtonAppBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }), React.createElement(ReorderableQuestions, {\n    questions: questions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  })), React.createElement(Fab, {\n    style: {\n      position: 'fixed',\n      bottom: 50,\n      right: 50,\n      zIndex: 999\n    },\n    color: \"primary\",\n    \"aria-label\": \"add\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(AddIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    onClick: () => console.log(JSON.stringify(questions)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, \"click me\"));\n} // send questions through props and use that as \n// initial state in useState(init_param) hook\n\n\nconst ReorderableQuestions = props => {\n  const classes = useStyles();\n  const [valuez, setValue] = React.useState('female');\n\n  const handleChange = event => {\n    setValue(event.target.value);\n  };\n\n  const [items, setItems] = useState(props.questions);\n  const [open, setOpen] = React.useState(false);\n  const [updating, setUpdating] = React.useState(null);\n\n  const handleClickOpen = (e, value) => {\n    setOpen(true);\n    console.log(e.target);\n    console.log(value);\n    setUpdating(value);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [type, setType] = React.useState('radio');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(\"title: \" + e.target.elements[\"title\"].value);\n    handleClose();\n    const question = updating;\n    question.title = title;\n    console.log(question);\n    setUpdating(null);\n    console.log(items);\n  };\n\n  const [title, setTitle] = React.useState(\"title\");\n\n  const handleSave = e => {\n    setTitle(title);\n    console.log(\"saved: \" + title);\n    console.log(\"wwwL: \" + e.target.value);\n    handleClose();\n    const question = updating;\n    question.title = title;\n    console.log(question);\n    setUpdating(null);\n    console.log(items);\n  };\n\n  const handleTitleChange = e => {\n    setTitle(e.target.value);\n  };\n\n  const dialog = React.createElement(Dialog, {\n    maxWidth: \"md\",\n    fullWidth: true,\n    onClose: handleClose,\n    \"aria-labelledby\": \"customized-dialog-title\",\n    open: open,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"customized-dialog-title\",\n    onClose: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, \"Edit question\"), React.createElement(DialogContent, {\n    dividers: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    noValidate: true,\n    autoComplete: \"off\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    className: classes.element,\n    id: \"type\",\n    select: true,\n    label: \"Type\",\n    value: type,\n    onChange: handleChange,\n    variant: \"outlined\",\n    margin: \"dense\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }, questionTypes.map(option => React.createElement(MenuItem, {\n    key: option.value,\n    value: option.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }, option.label)))), React.createElement(FormControl, {\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    className: classes.element,\n    id: \"title\",\n    label: \"Title\",\n    variant: \"outlined\",\n    margin: \"dense\",\n    autoComplete: \"off\",\n    onChange: handleTitleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  })))), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250\n    },\n    __self: this\n  }, React.createElement(Button, {\n    autoFocus: true,\n    onClick: handleClose,\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251\n    },\n    __self: this\n  }, \"Cancel\"), React.createElement(Button, {\n    autoFocus: true,\n    onClick: handleSave,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254\n    },\n    __self: this\n  }, \"Save\")));\n  return React.createElement(Container, {\n    className: \"main\",\n    maxWidth: \"md\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262\n    },\n    __self: this\n  }, React.createElement(List, {\n    className: \"drop-container-item\",\n    values: items,\n    onChange: ({\n      oldIndex,\n      newIndex\n    }) => setItems(arrayMove(items, oldIndex, newIndex)),\n    renderList: ({\n      children,\n      props,\n      isDragged\n    }) => React.createElement(\"ul\", Object.assign({}, props, {\n      style: {\n        padding: 0,\n        cursor: isDragged ? \"grabbing\" : undefined\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }), children),\n    renderItem: ({\n      value,\n      props,\n      isDragged,\n      isSelected\n    }) => React.createElement(\"li\", Object.assign({}, props, {\n      style: { ...props.style,\n        padding: \"0 0\",\n        // padding: \"1.5em\",\n        margin: \"1em 0em\",\n        // margin: \"0.5em 0em\",\n        listStyleType: \"none\",\n        cursor: isDragged ? \"grabbing\" : \"grab\",\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }), React.createElement(RadioQuestion, {\n      value: value,\n      items: items,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263\n    },\n    __self: this\n  }));\n};\n\nexport default NewEdit;","map":{"version":3,"sources":["/Users/palp/now/web/10mar/src/components/NewEdit.jsx"],"names":["React","useState","List","arrayMove","Card","CardContent","FormControlLabel","Typography","makeStyles","Container","ButtonAppBar","InputLabel","MenuItem","FormHelperText","FormControl","Select","Radio","RadioGroup","CardActions","CardMedia","Button","ArrowBackIcon","Dialog","MuiDialogTitle","MuiDialogContent","MuiDialogActions","withStyles","IconButton","CloseIcon","TextField","DialogContentText","Fab","AddIcon","RadioQuestion","useStyles","theme","formControl","margin","spacing","caption","position","top","left","con","display","floatingAdd","postion","right","bottom","fabStyle","styles","root","padding","root2","width","closeButton","color","palette","grey","DialogTitle","props","children","classes","onClose","other","DialogContent","DialogActions","questionTypes","value","label","NewEdit","questions","zIndex","console","log","JSON","stringify","ReorderableQuestions","valuez","setValue","handleChange","event","target","items","setItems","open","setOpen","updating","setUpdating","handleClickOpen","e","handleClose","type","setType","handleSubmit","preventDefault","elements","question","title","setTitle","handleSave","handleTitleChange","dialog","element","map","option","oldIndex","newIndex","isDragged","cursor","undefined","isSelected","style","listStyleType","textAlign"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { List, arrayMove } from 'react-movable';\nimport { Card, CardContent, FormControlLabel, Typography } from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Container } from '@material-ui/core';\nimport ButtonAppBar from './ButtonAppBar';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\n\nimport CardActions from '@material-ui/core/CardActions';\n// import CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\n\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport TextField from '@material-ui/core/TextField';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport RadioQuestion from './RadioQuestion';\n\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(3),\n  },\n  caption: {\n    position: 'absolute',\n    top: 0,\n    left: 0\n  },\n  con: {\n    display: 'flex',\n  },\n  floatingAdd: {\n    postion: 'fixed',\n    right: 0,\n    bottom: 0\n  }\n}));\n\nconst fabStyle = {\n  right: 20,\n  position: 'fixed'\n};\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  root2: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: 200,\n    },\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\n\n\nconst questionTypes = [\n  {\n    value: 'radio',\n    label: 'radio',\n  },\n  {\n    value: 'checkbox',\n    label: 'checkbox',\n  },\n];\n\nfunction NewEdit({questions}) {\n\n  return (\n    <>\n      <Container maxWidth=\"false\">\n        <ButtonAppBar />\n        <ReorderableQuestions questions={questions}/>\n        \n      </Container>\n      <Fab style={{position: 'fixed', bottom: 50, right: 50, zIndex: 999}} color=\"primary\" aria-label=\"add\">\n        <AddIcon />\n      </Fab>\n      <button onClick={() => console.log(JSON.stringify(questions))}>click me</button>\n    </>\n  );\n\n}\n\n// send questions through props and use that as \n// initial state in useState(init_param) hook\nconst ReorderableQuestions = (props) => {\n\n  const classes = useStyles();\n  const [valuez, setValue] = React.useState('female');\n\n  const handleChange = event => {\n    setValue(event.target.value);\n  };\n\n  const [items, setItems] = useState(props.questions);\n\n  \n  \n  const [open, setOpen] = React.useState(false);\n  const [updating, setUpdating] = React.useState(null);\n\n  const handleClickOpen = (e, value) => {\n    setOpen(true);\n    console.log(e.target);\n    console.log(value);\n    setUpdating(value);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [type, setType] = React.useState('radio');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(\"title: \" + e.target.elements[\"title\"].value);\n    handleClose();\n    const question = updating;\n    question.title = title;\n    console.log(question);\n    setUpdating(null);\n    console.log(items);\n\n\n  }\n\n  const [title, setTitle] = React.useState(\"title\");\n\n  const handleSave = e => {\n    setTitle(title);\n    console.log(\"saved: \" + title);\n    console.log(\"wwwL: \" + e.target.value);\n    handleClose();\n    const question = updating;\n    question.title = title;\n    console.log(question);\n    setUpdating(null);\n    console.log(items);\n  }\n\n  const handleTitleChange = e => {\n    setTitle(e.target.value);\n  }\n\n\n  const dialog = (\n    <Dialog\n        maxWidth=\"md\"\n        fullWidth\n        onClose={handleClose}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}\n      >\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n          Edit question\n        </DialogTitle>\n        <DialogContent dividers>\n          {/* <DialogContentText>\n            To subscribe to this website, please enter your email address here. We will send updates\n            occasionally.\n          </DialogContentText> */}\n          <form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n            <div>\n              <TextField\n                className={classes.element}\n                id=\"type\"\n                select\n                label=\"Type\"\n                value={type}\n                onChange={handleChange}\n                variant=\"outlined\"\n                margin=\"dense\"\n              >\n                {questionTypes.map(option => (\n                  <MenuItem key={option.value} value={option.value}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </TextField>\n            </div>\n            <FormControl fullWidth>\n              <TextField\n                className={classes.element}\n                id=\"title\"\n                label=\"Title\"\n                variant=\"outlined\"\n                margin=\"dense\"\n                autoComplete=\"off\"\n                onChange={handleTitleChange}\n              />\n            </FormControl>\n          </form>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose} color=\"secondary\">\n            Cancel\n          </Button>\n          <Button autoFocus onClick={handleSave} color=\"primary\">\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n  )\n\n  return (\n    <Container className=\"main\" maxWidth=\"md\">\n      <List\n        className=\"drop-container-item\"\n        values={items}\n        onChange={({ oldIndex, newIndex }) =>\n          setItems(arrayMove(items, oldIndex, newIndex))\n        }\n        renderList={({ children, props, isDragged }) => (\n          <ul\n            {...props}\n            style={{ padding: 0, cursor: isDragged ? \"grabbing\" : undefined }}\n          >\n            {children}\n          </ul>\n        )}\n        renderItem={({ value, props, isDragged, isSelected }) => (\n          <li\n            {...props}\n            style={{\n              ...props.style,\n              padding: \"0 0\",\n              // padding: \"1.5em\",\n              margin: \"1em 0em\",\n              // margin: \"0.5em 0em\",\n              listStyleType: \"none\",\n              cursor: isDragged ? \"grabbing\" : \"grab\",\n              textAlign: \"center\",\n            }}\n          >\n            <RadioQuestion value={value} items={items}/>\n          </li>\n        )}\n      />\n    </Container>\n  );\n};\n\nexport default NewEdit;"]},"metadata":{},"sourceType":"module"}