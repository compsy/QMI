{"ast":null,"code":"var _jsxFileName = \"/Users/palp/now/QMI/question-interface-managment/src/components/QuestionnaireProperties.js\";\nimport React, { useContext, useState } from \"react\";\nimport Switch from \"@material-ui/core/Switch\";\nimport { DialogContent, FormControlLabel, IconButton, InputAdornment } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nconst TextProperty = ({\n  newQuestion,\n  newQuestionDispatch,\n  name,\n  propertyName\n}) => {\n  const handleChange = event => {\n    newQuestion[propertyName] = event.target.value;\n    newQuestionDispatch({\n      type: \"SET_QUESTION\",\n      question: { ...newQuestion\n      }\n    });\n  };\n\n  return React.createElement(TextField, {\n    autoFocus: true,\n    required: true,\n    variant: \"outlined\",\n    autoComplete: \"off\",\n    margin: \"dense\",\n    type: \"text\",\n    fullWidth: true,\n    id: \"outlined-basic\",\n    value: newQuestion[propertyName],\n    onChange: handleChange,\n    label: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  });\n};\n\nexport const TitleProperty = ({\n  newQuestion,\n  newQuestionDispatch\n}) => {\n  return React.createElement(TextProperty, {\n    newQuestion: newQuestion,\n    newQuestionDispatch: newQuestionDispatch,\n    propertyName: \"title\",\n    name: \"Title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  });\n};","map":{"version":3,"sources":["/Users/palp/now/QMI/question-interface-managment/src/components/QuestionnaireProperties.js"],"names":["React","useContext","useState","Switch","DialogContent","FormControlLabel","IconButton","InputAdornment","TextField","DeleteIcon","TextProperty","newQuestion","newQuestionDispatch","name","propertyName","handleChange","event","target","value","type","question","TitleProperty"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAAQC,aAAR,EAAuBC,gBAAvB,EAAyCC,UAAzC,EAAqDC,cAArD,QAA0E,mBAA1E;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,WAAD;AAAcC,EAAAA,mBAAd;AAAmCC,EAAAA,IAAnC;AAAyCC,EAAAA;AAAzC,CAAD,KAA4D;AAC/E,QAAMC,YAAY,GAAGC,KAAK,IAAI;AAC5BL,IAAAA,WAAW,CAACG,YAAD,CAAX,GAA4BE,KAAK,CAACC,MAAN,CAAaC,KAAzC;AACAN,IAAAA,mBAAmB,CAAC;AAClBO,MAAAA,IAAI,EAAE,cADY;AAElBC,MAAAA,QAAQ,EAAE,EAAE,GAAGT;AAAL;AAFQ,KAAD,CAAnB;AAID,GAND;;AAQA,SAAO,oBAAC,SAAD;AACG,IAAA,SAAS,MADZ;AAEG,IAAA,QAAQ,MAFX;AAGG,IAAA,OAAO,EAAC,UAHX;AAIG,IAAA,YAAY,EAAC,KAJhB;AAKG,IAAA,MAAM,EAAC,OALV;AAMG,IAAA,IAAI,EAAC,MANR;AAOG,IAAA,SAAS,MAPZ;AAQG,IAAA,EAAE,EAAE,gBARP;AASG,IAAA,KAAK,EAAEA,WAAW,CAACG,YAAD,CATrB;AAUG,IAAA,QAAQ,EAAEC,YAVb;AAWG,IAAA,KAAK,EAAEF,IAXV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAaD,CAtBD;;AAuBA,OAAO,MAAMQ,aAAa,GAAG,CAAC;AAACV,EAAAA,WAAD;AAAcC,EAAAA;AAAd,CAAD,KAAwC;AACnE,SAAO,oBAAC,YAAD;AACL,IAAA,WAAW,EAAED,WADR;AAEL,IAAA,mBAAmB,EAAEC,mBAFhB;AAGL,IAAA,YAAY,EAAI,OAHX;AAIL,IAAA,IAAI,EAAI,OAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAMD,CAPM","sourcesContent":["import React, {useContext, useState} from \"react\";\nimport Switch from \"@material-ui/core/Switch\";\nimport {DialogContent, FormControlLabel, IconButton, InputAdornment} from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nconst TextProperty = ({newQuestion, newQuestionDispatch, name, propertyName}) => {\n  const handleChange = event => {\n    newQuestion[propertyName] = event.target.value;\n    newQuestionDispatch({\n      type: \"SET_QUESTION\",\n      question: { ...newQuestion}\n    });\n  };\n\n  return <TextField\n            autoFocus\n            required\n            variant=\"outlined\"\n            autoComplete=\"off\"\n            margin=\"dense\"\n            type=\"text\"\n            fullWidth\n            id={\"outlined-basic\"}\n            value={newQuestion[propertyName]}\n            onChange={handleChange}\n            label={name}\n  />\n}\nexport const TitleProperty = ({newQuestion, newQuestionDispatch}) => {\n  return <TextProperty\n    newQuestion={newQuestion}\n    newQuestionDispatch={newQuestionDispatch}\n    propertyName = {\"title\"}\n    name = {\"Title\"}\n  />\n}\n\n\n"]},"metadata":{},"sourceType":"module"}