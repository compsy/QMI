{"ast":null,"code":"var _jsxFileName = \"/Users/palp/now/QMI/question-interface-managment/src/components/properties/TextTemplate.js\";\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectProperty, setProperty } from \"../../features/questionProperties/questionSlice\";\nimport { TextField, FormControl, InputLabel, FilledInput, makeStyles, Paper } from \"@material-ui/core\";\nconst useStyles = makeStyles(theme => ({\n  boxy: {\n    borderRadius: 0,\n    zIndex: 0\n  },\n  paper: {\n    overflow: \"auto\",\n    wordWrap: \"break-word\",\n    wordBreak: \"break-word\"\n  }\n}));\nexport const TextProperty = ({\n  name,\n  propertyName,\n  required = false,\n  ...props\n}) => {\n  const property = useSelector(selectProperty(propertyName));\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    dispatch(setProperty({\n      property: propertyName,\n      value: event.target.value\n    }));\n  };\n\n  const classes = useStyles();\n  return (// <TextField\n    //   required={required}\n    //   key={propertyName}\n    //   fullWidth\n    //   variant=\"filled\"\n    //   type=\"text\"\n    //   id={\"outlined-basic\"}\n    //   value={property}\n    //   onChange={handleChange}\n    //   label={name}\n    //   {...props}\n    // />\n    React.createElement(Paper, {\n      className: classes.paper,\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      fullWidth: true,\n      required: required,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      variant: \"filled\",\n      style: {\n        userSelect: \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, name), React.createElement(FilledInput, Object.assign({\n      className: classes.boxy,\n      autoFocus: true,\n      autoComplete: \"off\",\n      type: \"text\",\n      id: \"outlined-basic\",\n      placeholder: name,\n      value: property || \"\",\n      onChange: handleChange\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }))))\n  );\n};","map":{"version":3,"sources":["/Users/palp/now/QMI/question-interface-managment/src/components/properties/TextTemplate.js"],"names":["React","useSelector","useDispatch","selectProperty","setProperty","TextField","FormControl","InputLabel","FilledInput","makeStyles","Paper","useStyles","theme","boxy","borderRadius","zIndex","paper","overflow","wordWrap","wordBreak","TextProperty","name","propertyName","required","props","property","dispatch","handleChange","event","value","target","classes","userSelect"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACEC,cADF,EAEEC,WAFF,QAGO,iDAHP;AAIA,SACEC,SADF,EAEEC,WAFF,EAGEC,UAHF,EAIEC,WAJF,EAKEC,UALF,EAMEC,KANF,QAOO,mBAPP;AASA,MAAMC,SAAS,GAAGF,UAAU,CAAEG,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,YAAY,EAAE,CADV;AAEJC,IAAAA,MAAM,EAAE;AAFJ,GADiC;AAKvCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE,MADL;AAELC,IAAAA,QAAQ,EAAE,YAFL;AAGLC,IAAAA,SAAS,EAAE;AAHN;AALgC,CAAZ,CAAD,CAA5B;AAYA,OAAO,MAAMC,YAAY,GAAG,CAAC;AAC3BC,EAAAA,IAD2B;AAE3BC,EAAAA,YAF2B;AAG3BC,EAAAA,QAAQ,GAAG,KAHgB;AAI3B,KAAGC;AAJwB,CAAD,KAKtB;AACJ,QAAMC,QAAQ,GAAGxB,WAAW,CAACE,cAAc,CAACmB,YAAD,CAAf,CAA5B;AACA,QAAMI,QAAQ,GAAGxB,WAAW,EAA5B;;AAEA,QAAMyB,YAAY,GAAIC,KAAD,IAAW;AAC9BF,IAAAA,QAAQ,CACNtB,WAAW,CAAC;AACVqB,MAAAA,QAAQ,EAAEH,YADA;AAEVO,MAAAA,KAAK,EAAED,KAAK,CAACE,MAAN,CAAaD;AAFV,KAAD,CADL,CAAR;AAMD,GAPD;;AASA,QAAME,OAAO,GAAGpB,SAAS,EAAzB;AAEA,SACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAC,KAAD;AAAO,MAAA,SAAS,EAAEoB,OAAO,CAACf,KAA1B;AAAiC,MAAA,OAAO,EAAC,UAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAa,MAAA,SAAS,MAAtB;AAAuB,MAAA,QAAQ,EAAEO,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,QAApB;AAA6B,MAAA,KAAK,EAAE;AAAES,QAAAA,UAAU,EAAE;AAAd,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6DX,IAA7D,CADF,EAEE,oBAAC,WAAD;AACE,MAAA,SAAS,EAAEU,OAAO,CAAClB,IADrB;AAEE,MAAA,SAAS,MAFX;AAGE,MAAA,YAAY,EAAC,KAHf;AAIE,MAAA,IAAI,EAAC,MAJP;AAKE,MAAA,EAAE,EAAE,gBALN;AAME,MAAA,WAAW,EAAEQ,IANf;AAOE,MAAA,KAAK,EAAEI,QAAQ,IAAI,EAPrB;AAQE,MAAA,QAAQ,EAAEE;AARZ,OASMH,KATN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFF,CADF;AAbF;AA8BD,CAlDM","sourcesContent":["import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  selectProperty,\n  setProperty,\n} from \"../../features/questionProperties/questionSlice\";\nimport {\n  TextField,\n  FormControl,\n  InputLabel,\n  FilledInput,\n  makeStyles,\n  Paper,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  boxy: {\n    borderRadius: 0,\n    zIndex: 0\n  },\n  paper: {\n    overflow: \"auto\",\n    wordWrap: \"break-word\",\n    wordBreak: \"break-word\",\n  },\n}));\n\nexport const TextProperty = ({\n  name,\n  propertyName,\n  required = false,\n  ...props\n}) => {\n  const property = useSelector(selectProperty(propertyName));\n  const dispatch = useDispatch();\n\n  const handleChange = (event) => {\n    dispatch(\n      setProperty({\n        property: propertyName,\n        value: event.target.value,\n      })\n    );\n  };\n\n  const classes = useStyles();\n\n  return (\n    // <TextField\n    //   required={required}\n    //   key={propertyName}\n    //   fullWidth\n    //   variant=\"filled\"\n    //   type=\"text\"\n    //   id={\"outlined-basic\"}\n    //   value={property}\n    //   onChange={handleChange}\n    //   label={name}\n    //   {...props}\n    // />\n    <Paper className={classes.paper} variant=\"outlined\">\n      <FormControl fullWidth required={required}>\n        <InputLabel variant=\"filled\" style={{ userSelect: \"none\" }}>{name}</InputLabel>\n        <FilledInput\n          className={classes.boxy}\n          autoFocus\n          autoComplete=\"off\"\n          type=\"text\"\n          id={\"outlined-basic\"}\n          placeholder={name}\n          value={property || \"\"}\n          onChange={handleChange}\n          {...props}\n        />\n      </FormControl>\n    </Paper>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}