{"ast":null,"code":"var _jsxFileName = \"/Users/palp/now/QMI/question-interface-managment/src/components/StringifiedJSONCard.js\";\nimport React from 'react';\nimport { useContext } from 'react';\nimport { QuestionnaireContext } from '../contexts/QuestionnaireContext';\nimport { Card, Typography } from '@material-ui/core';\nimport { useEffect } from 'react';\n\nconst StringifiedJSONCard = () => {\n  const {\n    questions\n  } = useContext(QuestionnaireContext); // formats the ids\n\n  useEffect(() => {\n    const toPrint = questions.map((question, index) => {\n      const obj = question.type === \"range\" ? {\n        id: `v${index + 1}`,\n        type: question.type,\n        title: question.title,\n        labels: question.options\n      } : { ...question,\n        id: `v${index + 1}`\n      };\n      return obj;\n    });\n  }, [questions]);\n  return React.createElement(Card, {\n    variant: \"outlined\",\n    style: {\n      wordWrap: \"break-word\",\n      wordBreak: \"break-word\",\n      margin: \"0.5em auto\",\n      padding: \"2em\",\n      height: \"150px\",\n      overflow: \"scroll\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"body2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, JSON.stringify(toPrint)));\n};\n\nexport default StringifiedJSONCard;","map":{"version":3,"sources":["/Users/palp/now/QMI/question-interface-managment/src/components/StringifiedJSONCard.js"],"names":["React","useContext","QuestionnaireContext","Card","Typography","useEffect","StringifiedJSONCard","questions","toPrint","map","question","index","obj","type","id","title","labels","options","wordWrap","wordBreak","margin","padding","height","overflow","JSON","stringify"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,oBAAT,QAAqC,kCAArC;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,mBAAjC;AACA,SAASC,SAAT,QAA0B,OAA1B;;AAEA,MAAMC,mBAAmB,GAAG,MAAM;AAChC,QAAM;AAAEC,IAAAA;AAAF,MAAgBN,UAAU,CAACC,oBAAD,CAAhC,CADgC,CAEhC;;AACAG,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMG,OAAO,GAAGD,SAAS,CAACE,GAAV,CAAc,CAACC,QAAD,EAAWC,KAAX,KAAqB;AACjD,YAAMC,GAAG,GACPF,QAAQ,CAACG,IAAT,KAAkB,OAAlB,GACI;AACEC,QAAAA,EAAE,EAAG,IAAGH,KAAK,GAAG,CAAE,EADpB;AAEEE,QAAAA,IAAI,EAAEH,QAAQ,CAACG,IAFjB;AAGEE,QAAAA,KAAK,EAAEL,QAAQ,CAACK,KAHlB;AAIEC,QAAAA,MAAM,EAAEN,QAAQ,CAACO;AAJnB,OADJ,GAOI,EACE,GAAGP,QADL;AAEEI,QAAAA,EAAE,EAAG,IAAGH,KAAK,GAAG,CAAE;AAFpB,OARN;AAYA,aAAOC,GAAP;AACD,KAde,CAAhB;AAeD,GAhBQ,EAgBN,CAACL,SAAD,CAhBM,CAAT;AAiBA,SACE,oBAAC,IAAD;AACE,IAAA,OAAO,EAAC,UADV;AAEE,IAAA,KAAK,EAAE;AACLW,MAAAA,QAAQ,EAAE,YADL;AAELC,MAAAA,SAAS,EAAE,YAFN;AAGLC,MAAAA,MAAM,EAAE,YAHH;AAILC,MAAAA,OAAO,EAAE,KAJJ;AAKLC,MAAAA,MAAM,EAAE,OALH;AAMLC,MAAAA,QAAQ,EAAE;AANL,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BC,IAAI,CAACC,SAAL,CAAejB,OAAf,CAA7B,CAXF,CADF;AAeD,CAnCD;;AAqCA,eAAeF,mBAAf","sourcesContent":["import React from 'react'\nimport { useContext } from 'react';\nimport { QuestionnaireContext } from '../contexts/QuestionnaireContext';\nimport { Card, Typography } from '@material-ui/core';\nimport { useEffect } from 'react';\n\nconst StringifiedJSONCard = () => {\n  const { questions } = useContext(QuestionnaireContext);\n  // formats the ids\n  useEffect(() => {\n    const toPrint = questions.map((question, index) => {\n      const obj =\n        question.type === \"range\"\n          ? {\n              id: `v${index + 1}`,\n              type: question.type,\n              title: question.title,\n              labels: question.options\n            }\n          : {\n              ...question,\n              id: `v${index + 1}`\n            };\n      return obj;\n    });\n  }, [questions])\n  return (\n    <Card\n      variant=\"outlined\"\n      style={{\n        wordWrap: \"break-word\",\n        wordBreak: \"break-word\",\n        margin: \"0.5em auto\",\n        padding: \"2em\",\n        height: \"150px\",\n        overflow: \"scroll\"\n      }}\n    >\n      <Typography variant=\"body2\">{JSON.stringify(toPrint)}</Typography>\n    </Card>\n  );\n};\n\nexport default StringifiedJSONCard;"]},"metadata":{},"sourceType":"module"}