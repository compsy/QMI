{"ast":null,"code":"var _jsxFileName = \"/Users/palp/now/web/10mar/src/components/RadioTemplate.jsx\";\nimport React, { useState } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Typography from '@material-ui/core/Typography';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Radio from '@material-ui/core/Radio';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport TextField from '@material-ui/core/TextField';\n\nconst RadioEditDialog = ({\n  value,\n  items,\n  setItems\n}) => {\n  const [title, setTitle] = useState('');\n  const [open, setOpen] = useState(false);\n\n  const handleClose = () => {\n    setTitle('');\n    setOpen(false);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const newItem = { ...value,\n      title: title\n    };\n    const newItems = items.map(item => item.id == newItem.id ? newItem : item);\n    setItems(newItems);\n    handleClose();\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    onClick: () => setOpen(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"edit\"), React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"edit this question\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(DialogContentText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"edit this question and when done press save or cancel\"), React.createElement(TextField, {\n    autoComplete: \"off\",\n    value: title,\n    onChange: event => setTitle(event.currentTarget.value),\n    autoFocus: true,\n    variant: \"outlined\",\n    margin: \"dense\",\n    id: \"title\",\n    label: \"title\",\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"save\"), React.createElement(Button, {\n    color: \"secondary\",\n    onClick: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"cancel\")))));\n};\n\nconst RadioRemoveDialog = ({\n  value,\n  items,\n  setItems\n}) => {\n  const [open, setOpen] = useState(false);\n\n  const handleEnterKeyPress = event => {\n    if (event.key === 'Enter') {\n      setOpen(false);\n      console.log(\"quit\");\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"secondary\",\n    onClick: () => setOpen(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"remove\"), React.createElement(Dialog, {\n    open: open,\n    onClose: () => setOpen(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"Remove Confirmation\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(DialogContentText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"Remove this question?\")), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"secondary\",\n    onClick: handleRemoveClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"remove\"), React.createElement(Button, {\n    onClick: () => setOpen(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"cancel\"))));\n};\n\nconst RadioTemplate = ({\n  value,\n  items,\n  setItems\n}) => {\n  const options = value.options.map(option => React.createElement(FormControlLabel, {\n    disabled: true,\n    label: option,\n    control: React.createElement(Radio, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }));\n  return React.createElement(Card, {\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, items.indexOf(value))), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"caption\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, value.type))), React.createElement(\"div\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, value.title)), React.createElement(\"div\", {\n    className: \"options\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, options)))), React.createElement(CardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(RadioEditDialog, {\n    value: value,\n    items: items,\n    setItems: setItems,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }), React.createElement(RadioRemoveDialog, {\n    value: value,\n    items: items,\n    setItems: setItems,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  })));\n};\n\nexport default RadioTemplate;","map":{"version":3,"sources":["/Users/palp/now/web/10mar/src/components/RadioTemplate.jsx"],"names":["React","useState","Card","CardContent","CardActions","Typography","FormControl","FormControlLabel","FormGroup","Radio","Button","Dialog","DialogTitle","DialogContent","DialogActions","DialogContentText","TextField","RadioEditDialog","value","items","setItems","title","setTitle","open","setOpen","handleClose","handleSubmit","event","preventDefault","newItem","newItems","map","item","id","currentTarget","RadioRemoveDialog","handleEnterKeyPress","key","console","log","handleRemoveClick","RadioTemplate","options","option","indexOf","type"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardActions from '@material-ui/core/CardActions'\nimport Typography from '@material-ui/core/Typography'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport Radio from '@material-ui/core/Radio'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport TextField from '@material-ui/core/TextField'\n\n\nconst RadioEditDialog = ({value, items, setItems}) => {\n\n  const [title, setTitle] = useState('');\n  const [open, setOpen] = useState(false);\n\n  const handleClose = () => {\n    setTitle('');\n    setOpen(false);\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const newItem = {...value, title: title};\n    const newItems = items.map(item => (item.id == newItem.id ? newItem : item));\n    setItems(newItems);\n    handleClose();\n  }\n\n  return (\n    <div>\n      <Button color=\"primary\" onClick={() => setOpen(true)}>\n        edit\n      </Button>\n      <Dialog open={open} onClose={handleClose}>\n        <form onSubmit={handleSubmit}>\n          <DialogTitle>\n            edit this question\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              edit this question and when done press save or cancel\n            </DialogContentText>\n            <TextField\n              autoComplete=\"off\"\n              value={title}\n              onChange={event => setTitle(event.currentTarget.value)}\n              autoFocus\n              variant=\"outlined\"\n              margin=\"dense\"\n              id=\"title\"\n              label=\"title\"\n              fullWidth\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button color=\"primary\" type=\"submit\">\n              save\n            </Button>\n            <Button color=\"secondary\" onClick={handleClose}>\n              cancel\n            </Button>\n          </DialogActions>\n        </form>\n      </Dialog>\n    </div>\n  )\n}\n\n\nconst RadioRemoveDialog = ({value, items, setItems}) => {\n\n  const [open, setOpen] = useState(false);\n\n  const handleEnterKeyPress = (event) => {\n    if (event.key === 'Enter') {\n      setOpen(false);\n      console.log(\"quit\");\n    }\n  }\n\n  return (\n    <div>\n      <Button color=\"secondary\" onClick={() => setOpen(true)}>\n        remove\n      </Button>\n      <Dialog open={open} onClose={() => setOpen(false)}>\n        <DialogTitle>\n          Remove Confirmation\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Remove this question?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button color=\"secondary\" onClick={handleRemoveClick}>\n            remove\n          </Button>\n          <Button onClick={() => setOpen(false)}>\n            cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n\n\nconst RadioTemplate = ({ value, items, setItems }) => {\n  const options = value.options.map(option =>\n    <FormControlLabel\n      disabled\n      label={option}\n      control={<Radio />}\n    />\n  );\n\n  return (\n    <Card variant=\"outlined\">\n      <CardContent>\n        <div className=\"header\">\n          <span>\n            <Typography variant=\"h6\">\n              {items.indexOf(value)}\n            </Typography>\n          </span>\n          <span>\n            <Typography variant=\"caption\">\n              {value.type}\n            </Typography>\n          </span>\n        </div>\n        <div className=\"title\">\n          <Typography variant=\"h5\">\n\t\t\t\t\t\t{value.title}\n\t\t\t\t\t</Typography>\n        </div>\n        <div className=\"options\">\n          <FormControl>\n            <FormGroup>\n              {options}\n            </FormGroup>\n          </FormControl>\n        </div>\n      </CardContent>\n      <CardActions>\n        <RadioEditDialog value={value} items={items} setItems={setItems}/>\n        <RadioRemoveDialog value={value} items={items} setItems={setItems}/>\n      </CardActions>\n    </Card>\n  )\n}\n\n\nexport default RadioTemplate;"]},"metadata":{},"sourceType":"module"}