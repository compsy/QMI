{"ast":null,"code":"var _jsxFileName = \"/Users/palp/now/web/10mar/src/components/NewEdit.jsx\";\nimport React, { useState } from 'react';\nimport { List, arrayMove } from 'react-movable';\nimport { Card, CardContent, FormControlLabel, Typography } from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Container } from '@material-ui/core';\nimport ButtonAppBar from './ButtonAppBar';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport CardActions from '@material-ui/core/CardActions'; // import CardContent from '@material-ui/core/CardContent';\n\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport TextField from '@material-ui/core/TextField';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(3)\n  },\n  caption: {\n    position: 'absolute',\n    top: 0,\n    left: 0\n  },\n  con: {\n    display: 'flex'\n  },\n  floatingAdd: {\n    postion: 'fixed',\n    right: 0,\n    bottom: 0\n  }\n}));\nconst fabStyle = {\n  right: 20,\n  position: 'fixed'\n};\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2)\n  },\n  root2: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: 200\n    }\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500]\n  }\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const {\n    children,\n    classes,\n    onClose,\n    ...other\n  } = props;\n  return React.createElement(MuiDialogTitle, Object.assign({\n    disableTypography: true,\n    className: classes.root\n  }, other, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    variant: \"h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, children), onClose ? React.createElement(IconButton, {\n    \"aria-label\": \"close\",\n    className: classes.closeButton,\n    onClick: onClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(CloseIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  })) : null);\n});\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2)\n  }\n}))(MuiDialogContent);\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1)\n  }\n}))(MuiDialogActions);\nconst questionTypes = [{\n  value: 'radio',\n  label: 'radio'\n}, {\n  value: 'checkbox',\n  label: 'checkbox'\n}];\n\nfunction NewEdit() {\n  const classes = useStyles();\n  return React.createElement(React.Fragment, null, React.createElement(Container, {\n    maxWidth: \"false\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(ButtonAppBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }), React.createElement(ReorderableQuestions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  })), React.createElement(Fab, {\n    style: {\n      position: 'fixed',\n      bottom: 50,\n      right: 50,\n      zIndex: 999\n    },\n    color: \"primary\",\n    \"aria-label\": \"add\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(AddIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  })));\n} // send questions through props and use that as \n// initial state in useState(init_param) hook\n\n\nconst ReorderableQuestions = props => {\n  const classes = useStyles();\n  const [valuez, setValue] = React.useState('female');\n\n  const handleChange = event => {\n    setValue(event.target.value);\n  };\n\n  const [items, setItems] = useState([{\n    id: \"v1\",\n    type: \"radio\",\n    title: 'Waar hadden de belangrijkste gebeurtenissen mee te maken?',\n    options: ['hobby/sport', 'werk', 'vriendschap', 'romantische relatie', 'thuis']\n  }, {\n    id: \"v1\",\n    type: \"radio\",\n    title: 'Waar hadden de belangrijkste gebeurtenissen mee te maken?',\n    options: ['hobby/sport', 'werk', 'vriendschap', 'romantische relatie', 'thuis']\n  }]);\n  const [open, setOpen] = React.useState(false);\n  const [updating, setUpdating] = React.useState(null);\n\n  const handleClickOpen = (e, value) => {\n    setOpen(true);\n    console.log(e.target);\n    console.log(value);\n    setUpdating(value);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [type, setType] = React.useState('radio');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(\"title: \" + e.target.elements[\"title\"].value);\n    handleClose();\n    const question = updating;\n    question.title = title;\n    console.log(question);\n    setUpdating(null);\n    console.log(items);\n  };\n\n  const [title, setTitle] = React.useState(\"title\");\n\n  const handleSave = e => {\n    setTitle(title);\n    console.log(\"saved: \" + title);\n    console.log(\"wwwL: \" + e.target.value);\n    handleClose();\n    const question = updating;\n    question.title = title;\n    console.log(question);\n    setUpdating(null);\n    console.log(items);\n  };\n\n  const handleTitleChange = e => {\n    setTitle(e.target.value);\n  };\n\n  const dialog = React.createElement(Dialog, {\n    maxWidth: \"md\",\n    fullWidth: true,\n    onClose: handleClose,\n    \"aria-labelledby\": \"customized-dialog-title\",\n    open: open,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"customized-dialog-title\",\n    onClose: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }, \"Edit question\"), React.createElement(DialogContent, {\n    dividers: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    noValidate: true,\n    autoComplete: \"off\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    className: classes.element,\n    id: \"type\",\n    select: true,\n    label: \"Type\",\n    value: type,\n    onChange: handleChange,\n    variant: \"outlined\",\n    margin: \"dense\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  }, questionTypes.map(option => React.createElement(MenuItem, {\n    key: option.value,\n    value: option.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }, option.label)))), React.createElement(FormControl, {\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    className: classes.element,\n    id: \"title\",\n    label: \"Title\",\n    variant: \"outlined\",\n    margin: \"dense\",\n    autoComplete: \"off\",\n    onChange: handleTitleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250\n    },\n    __self: this\n  })))), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262\n    },\n    __self: this\n  }, React.createElement(Button, {\n    autoFocus: true,\n    onClick: handleClose,\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263\n    },\n    __self: this\n  }, \"Cancel\"), React.createElement(Button, {\n    autoFocus: true,\n    onClick: handleSave,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266\n    },\n    __self: this\n  }, \"Save\")));\n  return React.createElement(Container, {\n    className: \"main\",\n    maxWidth: \"sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274\n    },\n    __self: this\n  }, React.createElement(List, {\n    className: \"drop-container-item\",\n    values: items,\n    onChange: ({\n      oldIndex,\n      newIndex\n    }) => setItems(arrayMove(items, oldIndex, newIndex)),\n    renderList: ({\n      children,\n      props,\n      isDragged\n    }) => React.createElement(\"ul\", Object.assign({}, props, {\n      style: {\n        padding: 0,\n        cursor: isDragged ? \"grabbing\" : undefined\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }), children),\n    renderItem: ({\n      value,\n      props,\n      isDragged,\n      isSelected\n    }) => React.createElement(\"li\", Object.assign({}, props, {\n      style: { ...props.style,\n        padding: \"1.5em\",\n        // padding: \"1.5em\",\n        margin: \"0.5em 0em\",\n        listStyleType: \"none\",\n        cursor: isDragged ? \"grabbing\" : \"grab\",\n        textAlign: \"center\",\n        // zIndex: isDragged || isSelected ? 1 : 0,\n        // border: '2px solid #CCC',\n        // boxShadow: '3px 3px #AAA',\n        // color: '#333',\n        // borderRadius: '5px',\n        // // fontFamily: 'Arial, \"Helvetica Neue\", Helvetica, sans-serif',\n        // // fontFamily: \"'Lato', sans-serif\",\n        // fontFamily: \"'Raleway', sans-serif\",\n        backgroundColor: isDragged || isSelected ? '#EEE' : '#FFF'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }), React.createElement(Card, {\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, React.createElement(CardContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"con\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, items.indexOf(value))), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: \"caption\",\n      variant: \"caption\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, value.type))), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, value.title), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      component: \"fieldset\",\n      className: classes.formControl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }, React.createElement(RadioGroup, {\n      \"aria-label\": \"options\",\n      name: \"options\",\n      value: valuez,\n      onChange: handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, value.options.map(option => React.createElement(FormControlLabel, {\n      value: option,\n      control: React.createElement(Radio, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }),\n      label: option,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    })))))), React.createElement(CardActions, {\n      align: \"end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"small\",\n      color: \"primary\",\n      onClick: e => handleClickOpen(e, value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }, \"Edit\"), dialog, React.createElement(Button, {\n      size: \"small\",\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }, \"Remove\")))),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275\n    },\n    __self: this\n  }));\n};\n\nexport default NewEdit;","map":{"version":3,"sources":["/Users/palp/now/web/10mar/src/components/NewEdit.jsx"],"names":["React","useState","List","arrayMove","Card","CardContent","FormControlLabel","Typography","makeStyles","Container","ButtonAppBar","InputLabel","MenuItem","FormHelperText","FormControl","Select","Radio","RadioGroup","CardActions","CardMedia","Button","ArrowBackIcon","Dialog","MuiDialogTitle","MuiDialogContent","MuiDialogActions","withStyles","IconButton","CloseIcon","TextField","DialogContentText","Fab","AddIcon","useStyles","theme","formControl","margin","spacing","caption","position","top","left","con","display","floatingAdd","postion","right","bottom","fabStyle","styles","root","padding","root2","width","closeButton","color","palette","grey","DialogTitle","props","children","classes","onClose","other","DialogContent","DialogActions","questionTypes","value","label","NewEdit","zIndex","ReorderableQuestions","valuez","setValue","handleChange","event","target","items","setItems","id","type","title","options","open","setOpen","updating","setUpdating","handleClickOpen","e","console","log","handleClose","setType","handleSubmit","preventDefault","elements","question","setTitle","handleSave","handleTitleChange","dialog","element","map","option","oldIndex","newIndex","isDragged","cursor","undefined","isSelected","style","listStyleType","textAlign","backgroundColor","indexOf"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { List, arrayMove } from 'react-movable';\nimport { Card, CardContent, FormControlLabel, Typography } from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Container } from '@material-ui/core';\nimport ButtonAppBar from './ButtonAppBar';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\n\nimport CardActions from '@material-ui/core/CardActions';\n// import CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\n\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport TextField from '@material-ui/core/TextField';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\n\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(3),\n  },\n  caption: {\n    position: 'absolute',\n    top: 0,\n    left: 0\n  },\n  con: {\n    display: 'flex',\n  },\n  floatingAdd: {\n    postion: 'fixed',\n    right: 0,\n    bottom: 0\n  }\n}));\n\nconst fabStyle = {\n  right: 20,\n  position: 'fixed'\n};\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  root2: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: 200,\n    },\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\n\n\nconst questionTypes = [\n  {\n    value: 'radio',\n    label: 'radio',\n  },\n  {\n    value: 'checkbox',\n    label: 'checkbox',\n  },\n];\nfunction NewEdit() {\n\n  const classes = useStyles();\n\n  return (\n    <>\n      <Container maxWidth=\"false\">\n        <ButtonAppBar />\n        <ReorderableQuestions />\n        \n      </Container>\n      <Fab style={{position: 'fixed', bottom: 50, right: 50, zIndex: 999}} color=\"primary\" aria-label=\"add\">\n        <AddIcon />\n      </Fab>\n    </>\n  );\n\n}\n\n// send questions through props and use that as \n// initial state in useState(init_param) hook\nconst ReorderableQuestions = (props) => {\n\n  const classes = useStyles();\n  const [valuez, setValue] = React.useState('female');\n\n  const handleChange = event => {\n    setValue(event.target.value);\n  };\n\n  const [items, setItems] = useState([\n    {\n      id: \"v1\",\n      type: \"radio\",\n      title: 'Waar hadden de belangrijkste gebeurtenissen mee te maken?',\n      options: ['hobby/sport', 'werk', 'vriendschap', 'romantische relatie', 'thuis']\n    },\n    {\n      id: \"v1\",\n      type: \"radio\",\n      title: 'Waar hadden de belangrijkste gebeurtenissen mee te maken?',\n      options: ['hobby/sport', 'werk', 'vriendschap', 'romantische relatie', 'thuis']\n    }\n  ]);\n\n  \n  \n  const [open, setOpen] = React.useState(false);\n  const [updating, setUpdating] = React.useState(null);\n\n  const handleClickOpen = (e, value) => {\n    setOpen(true);\n    console.log(e.target);\n    console.log(value);\n    setUpdating(value);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [type, setType] = React.useState('radio');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(\"title: \" + e.target.elements[\"title\"].value);\n    handleClose();\n    const question = updating;\n    question.title = title;\n    console.log(question);\n    setUpdating(null);\n    console.log(items);\n\n\n  }\n\n  const [title, setTitle] = React.useState(\"title\");\n\n  const handleSave = e => {\n    setTitle(title);\n    console.log(\"saved: \" + title);\n    console.log(\"wwwL: \" + e.target.value);\n    handleClose();\n    const question = updating;\n    question.title = title;\n    console.log(question);\n    setUpdating(null);\n    console.log(items);\n  }\n\n  const handleTitleChange = e => {\n    setTitle(e.target.value);\n  }\n\n\n  const dialog = (\n    <Dialog\n        maxWidth=\"md\"\n        fullWidth\n        onClose={handleClose}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}\n      >\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n          Edit question\n        </DialogTitle>\n        <DialogContent dividers>\n          {/* <DialogContentText>\n            To subscribe to this website, please enter your email address here. We will send updates\n            occasionally.\n          </DialogContentText> */}\n          <form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n            <div>\n              <TextField\n                className={classes.element}\n                id=\"type\"\n                select\n                label=\"Type\"\n                value={type}\n                onChange={handleChange}\n                variant=\"outlined\"\n                margin=\"dense\"\n              >\n                {questionTypes.map(option => (\n                  <MenuItem key={option.value} value={option.value}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </TextField>\n            </div>\n            <FormControl fullWidth>\n              <TextField\n                className={classes.element}\n                id=\"title\"\n                label=\"Title\"\n                variant=\"outlined\"\n                margin=\"dense\"\n                autoComplete=\"off\"\n                onChange={handleTitleChange}\n              />\n            </FormControl>\n          </form>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose} color=\"secondary\">\n            Cancel\n          </Button>\n          <Button autoFocus onClick={handleSave} color=\"primary\">\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n  )\n\n  return (\n    <Container className=\"main\" maxWidth=\"sm\">\n      <List\n        className=\"drop-container-item\"\n        values={items}\n        onChange={({ oldIndex, newIndex }) =>\n          setItems(arrayMove(items, oldIndex, newIndex))\n        }\n        renderList={({ children, props, isDragged }) => (\n          <ul\n            {...props}\n            style={{ padding: 0, cursor: isDragged ? \"grabbing\" : undefined }}\n          >\n            {children}\n          </ul>\n        )}\n        renderItem={({ value, props, isDragged, isSelected }) => (\n          <li\n            {...props}\n            style={{\n              ...props.style,\n              padding: \"1.5em\",\n              // padding: \"1.5em\",\n              margin: \"0.5em 0em\",\n              listStyleType: \"none\",\n              cursor: isDragged ? \"grabbing\" : \"grab\",\n              textAlign: \"center\",\n              // zIndex: isDragged || isSelected ? 1 : 0,\n              // border: '2px solid #CCC',\n              // boxShadow: '3px 3px #AAA',\n              // color: '#333',\n              // borderRadius: '5px',\n              // // fontFamily: 'Arial, \"Helvetica Neue\", Helvetica, sans-serif',\n              // // fontFamily: \"'Lato', sans-serif\",\n              // fontFamily: \"'Raleway', sans-serif\",\n              backgroundColor: isDragged || isSelected ? '#EEE' : '#FFF'\n            }}\n          >\n            <Card variant=\"outlined\">\n              <CardContent>\n                <div className=\"con\">\n                  <span>\n                    <Typography component=\"h1\" variant=\"h6\">{items.indexOf(value)}</Typography>\n                    </span>\n                  <span>\n                    <Typography component=\"caption\" variant=\"caption\">{value.type}</Typography>\n                    </span>\n                </div>\n                <h2>{value.title}</h2>\n                <div>\n                  <FormControl\n                    component=\"fieldset\"\n                    className={classes.formControl}\n                  >\n                    <RadioGroup\n                      aria-label=\"options\"\n                      name=\"options\"\n                      value={valuez}\n                      onChange={handleChange}\n                    >\n                      {value.options.map(option => (\n                        <FormControlLabel\n                          value={option}\n                          control={<Radio />}\n                          label={option}\n                        />\n                      ))}\n                    </RadioGroup>\n                  </FormControl>\n                </div>\n              </CardContent>\n              <CardActions align=\"end\">\n                <Button size=\"small\" color=\"primary\" onClick={(e) => handleClickOpen(e, value)}>\n                  Edit\n                </Button>\n                {dialog}\n                <Button size=\"small\" color=\"secondary\">\n                  Remove\n                </Button>\n              </CardActions>\n            </Card>\n          </li>\n        )}\n      />\n    </Container>\n  );\n};\n\nexport default NewEdit;"]},"metadata":{},"sourceType":"module"}