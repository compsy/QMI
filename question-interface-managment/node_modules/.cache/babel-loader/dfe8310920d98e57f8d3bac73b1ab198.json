{"ast":null,"code":"var _jsxFileName = \"/Users/palp/now/web/10mar/src/components/EditQuestionnaire.jsx\";\nimport React, { useState } from 'react';\nimport { List, arrayMove } from 'react-movable';\nimport { Card, CardContent, FormControlLabel, Typography } from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Container } from '@material-ui/core';\nimport ButtonAppBar from './ButtonAppBar';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport CardActions from '@material-ui/core/CardActions'; // import CardContent from '@material-ui/core/CardContent';\n\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(3)\n  },\n  caption: {\n    position: 'absolute',\n    top: 0,\n    left: 0\n  }\n}));\n\nfunction EditQuestionnaire() {\n  return React.createElement(Container, {\n    maxWidth: \"false\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(ButtonAppBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(ReorderableQuestions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }));\n} // send questions through props and use that as \n// initial state in useState(init_param) hook\n\n\nconst ReorderableQuestions = props => {\n  const classes = useStyles();\n  const [valuez, setValue] = React.useState('female');\n\n  const handleChange = event => {\n    setValue(event.target.value);\n  };\n\n  const [items, setItems] = useState([{\n    id: \"v1\",\n    type: \"checkbox\",\n    title: 'Waar hadden de belangrijkste gebeurtenissen mee te maken?',\n    options: ['hobby/sport', 'werk', 'vriendschap', 'romantische relatie', 'thuis']\n  }, {\n    id: \"v1\",\n    type: \"radio\",\n    title: 'Waar hadden de belangrijkste gebeurtenissen mee te maken?',\n    options: ['hobby/sport', 'werk', 'vriendschap', 'romantische relatie', 'thuis']\n  }]);\n  return React.createElement(Container, {\n    className: \"main\",\n    maxWidth: \"sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(List, {\n    className: \"drop-container-item\",\n    values: items,\n    onChange: ({\n      oldIndex,\n      newIndex\n    }) => setItems(arrayMove(items, oldIndex, newIndex)),\n    renderList: ({\n      children,\n      props,\n      isDragged\n    }) => React.createElement(\"ul\", Object.assign({}, props, {\n      style: {\n        padding: 0,\n        cursor: isDragged ? \"grabbing\" : undefined\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), children),\n    renderItem: ({\n      value,\n      props,\n      isDragged,\n      isSelected\n    }) => React.createElement(\"li\", Object.assign({}, props, {\n      style: { ...props.style,\n        padding: \"1.5em\",\n        // padding: \"1.5em\",\n        margin: \"0.5em 0em\",\n        listStyleType: \"none\",\n        cursor: isDragged ? \"grabbing\" : \"grab\",\n        textAlign: \"center\" // zIndex: isDragged || isSelected ? 1 : 0,\n        // border: '2px solid #CCC',\n        // boxShadow: '3px 3px #AAA',\n        // color: '#333',\n        // borderRadius: '5px',\n        // // fontFamily: 'Arial, \"Helvetica Neue\", Helvetica, sans-serif',\n        // // fontFamily: \"'Lato', sans-serif\",\n        // fontFamily: \"'Raleway', sans-serif\",\n        // backgroundColor: isDragged || isSelected ? '#EEE' : '#FFF'\n\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(Card, {\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(CardContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: \"h1\",\n      className: classes.caption,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, items.indexOf(value))), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"caption\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, value.type))), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, value.title), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      component: \"fieldset\",\n      className: classes.formControl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(RadioGroup, {\n      \"aria-label\": \"options\",\n      name: \"options\",\n      value: valuez,\n      onChange: handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, value.options.map(option => React.createElement(FormControlLabel, {\n      value: option,\n      control: React.createElement(Radio, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }),\n      label: option,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    })))))), React.createElement(CardActions, {\n      align: \"end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"small\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Edit\"), React.createElement(Button, {\n      size: \"small\",\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"Remove\")))),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }));\n};\n\nexport default EditQuestionnaire;","map":{"version":3,"sources":["/Users/palp/now/web/10mar/src/components/EditQuestionnaire.jsx"],"names":["React","useState","List","arrayMove","Card","CardContent","FormControlLabel","Typography","makeStyles","Container","ButtonAppBar","InputLabel","MenuItem","FormHelperText","FormControl","Select","Radio","RadioGroup","CardActions","CardMedia","Button","ArrowBackIcon","useStyles","theme","formControl","margin","spacing","caption","position","top","left","EditQuestionnaire","ReorderableQuestions","props","classes","valuez","setValue","handleChange","event","target","value","items","setItems","id","type","title","options","oldIndex","newIndex","children","isDragged","padding","cursor","undefined","isSelected","style","listStyleType","textAlign","indexOf","map","option"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { List, arrayMove } from 'react-movable';\nimport { Card, CardContent, FormControlLabel, Typography } from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Container } from '@material-ui/core';\nimport ButtonAppBar from './ButtonAppBar';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\n\nimport CardActions from '@material-ui/core/CardActions';\n// import CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\n\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(3),\n  },\n  caption: {\n    position: 'absolute',\n    top: 0,\n    left: 0\n  }\n}));\n\n\nfunction EditQuestionnaire() {\n\n  return (\n    <Container maxWidth=\"false\">\n      <ButtonAppBar />\n      <ReorderableQuestions />\n    </Container>\n  );\n\n}\n\n// send questions through props and use that as \n// initial state in useState(init_param) hook\nconst ReorderableQuestions = (props) => {\n\n  const classes = useStyles();\n  const [valuez, setValue] = React.useState('female');\n\n  const handleChange = event => {\n    setValue(event.target.value);\n  };\n\n  const [items, setItems] = useState([\n    {\n      id: \"v1\",\n      type: \"checkbox\",\n      title: 'Waar hadden de belangrijkste gebeurtenissen mee te maken?',\n      options: ['hobby/sport', 'werk', 'vriendschap', 'romantische relatie', 'thuis']\n    },\n    {\n      id: \"v1\",\n      type: \"radio\",\n      title: 'Waar hadden de belangrijkste gebeurtenissen mee te maken?',\n      options: ['hobby/sport', 'werk', 'vriendschap', 'romantische relatie', 'thuis']\n    }\n  ]);\n\n\n  return (\n    <Container className=\"main\" maxWidth=\"sm\">\n      <List\n        className=\"drop-container-item\"\n        values={items}\n        onChange={({ oldIndex, newIndex }) =>\n          setItems(arrayMove(items, oldIndex, newIndex))\n        }\n        renderList={({ children, props, isDragged }) => (\n          <ul\n            {...props}\n            style={{ padding: 0, cursor: isDragged ? \"grabbing\" : undefined }}\n          >\n            {children}\n          </ul>\n        )}\n        renderItem={({ value, props, isDragged, isSelected }) => (\n          <li\n            {...props}\n            style={{\n              ...props.style,\n              padding: \"1.5em\",\n              // padding: \"1.5em\",\n              margin: \"0.5em 0em\",\n              listStyleType: \"none\",\n              cursor: isDragged ? \"grabbing\" : \"grab\",\n              textAlign: \"center\"\n              // zIndex: isDragged || isSelected ? 1 : 0,\n              // border: '2px solid #CCC',\n              // boxShadow: '3px 3px #AAA',\n              // color: '#333',\n              // borderRadius: '5px',\n              // // fontFamily: 'Arial, \"Helvetica Neue\", Helvetica, sans-serif',\n              // // fontFamily: \"'Lato', sans-serif\",\n              // fontFamily: \"'Raleway', sans-serif\",\n              // backgroundColor: isDragged || isSelected ? '#EEE' : '#FFF'\n            }}\n          >\n            <Card variant=\"outlined\">\n              <CardContent>\n                <div>\n                  <span>\n                    <Typography component=\"h1\" className={classes.caption}>{items.indexOf(value)}</Typography>\n                    </span>\n                  <span><caption>{value.type}</caption></span>\n                </div>\n                <h2>{value.title}</h2>\n                <div>\n                  <FormControl\n                    component=\"fieldset\"\n                    className={classes.formControl}\n                  >\n                    <RadioGroup\n                      aria-label=\"options\"\n                      name=\"options\"\n                      value={valuez}\n                      onChange={handleChange}\n                    >\n                      {value.options.map(option => (\n                        <FormControlLabel\n                          value={option}\n                          control={<Radio />}\n                          label={option}\n                        />\n                      ))}\n                    </RadioGroup>\n                  </FormControl>\n                </div>\n              </CardContent>\n              <CardActions align=\"end\">\n                <Button size=\"small\" color=\"primary\">\n                  Edit\n                </Button>\n                <Button size=\"small\" color=\"secondary\">\n                  Remove\n                </Button>\n              </CardActions>\n            </Card>\n          </li>\n        )}\n      />\n    </Container>\n  );\n};\n\nexport default EditQuestionnaire;"]},"metadata":{},"sourceType":"module"}