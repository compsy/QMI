{"ast":null,"code":"var _jsxFileName = \"/Users/palp/now/QMI/question-interface-managment/src/components/QuestionnaireProperties.js\";\nimport React, { useContext, useState } from \"react\";\nimport Switch from \"@material-ui/core/Switch\";\nimport { DialogContent, FormControlLabel, IconButton, InputAdornment } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport uuid from \"uuid/v1\";\n\nconst TextProperty = ({\n  newQuestion,\n  newQuestionDispatch,\n  name,\n  propertyName,\n  ...props\n}) => {\n  const handleChange = event => {\n    newQuestion[propertyName] = event.target.value;\n    newQuestionDispatch({\n      type: \"SET_QUESTION\",\n      question: { ...newQuestion\n      }\n    });\n  };\n\n  return React.createElement(TextField, Object.assign({\n    key: propertyName + uuid(),\n    variant: \"outlined\",\n    autoFocus: true,\n    margin: \"dense\",\n    type: \"text\",\n    fullWidth: true,\n    id: \"outlined-basic\",\n    value: newQuestion[propertyName],\n    onChange: handleChange,\n    label: name\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }));\n};\n\nexport const TitleProperty = ({\n  newQuestion,\n  newQuestionDispatch,\n  ...props\n}) => {\n  return React.createElement(TextProperty, Object.assign({\n    newQuestion: newQuestion,\n    newQuestionDispatch: newQuestionDispatch,\n    propertyName: \"title\",\n    name: \"Title\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }));\n};\nexport const TooltipProperty = ({\n  newQuestion,\n  newQuestionDispatch,\n  ...props\n}) => {\n  return React.createElement(TextProperty, Object.assign({\n    newQuestion: newQuestion,\n    newQuestionDispatch: newQuestionDispatch,\n    propertyName: \"tooltip\",\n    name: \"Tooltip text\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }));\n};\nexport const OtherwiseLabelProperty = ({\n  newQuestion,\n  newQuestionDispatch,\n  ...props\n}) => {\n  return React.createElement(TextProperty, Object.assign({\n    newQuestion: newQuestion,\n    newQuestionDispatch: newQuestionDispatch,\n    propertyName: \"otherwise_label\",\n    name: \"Custom 'otherwise: ...' text\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }));\n};\nexport const OtherwiseTooltipProperty = ({\n  newQuestion,\n  newQuestionDispatch,\n  ...props\n}) => {\n  return React.createElement(TextProperty, Object.assign({\n    newQuestion: newQuestion,\n    newQuestionDispatch: newQuestionDispatch,\n    propertyName: \"otherwise_tooltip\",\n    name: \"'otherwise: ...' tooltip\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }));\n};\nexport const HiddenProperty = ({\n  newQuestion,\n  newQuestionDispatch,\n  ...props\n}) => React.createElement(BooleanProperty, Object.assign({\n  newQuestionDispatch: newQuestionDispatch,\n  newQuestion: newQuestion,\n  name: \"Hidden\",\n  propertyName: \"hidden\"\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 95\n  },\n  __self: this\n}));\nexport const ShowOtherwiseProperty = ({\n  newQuestion,\n  newQuestionDispatch,\n  ...props\n}) => React.createElement(BooleanProperty, Object.assign({\n  newQuestionDispatch: newQuestionDispatch,\n  newQuestion: newQuestion,\n  name: \"Show 'otherwise: ...'\",\n  propertyName: \"show_otherwise\"\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 105\n  },\n  __self: this\n}));\nexport const RequiredProperty = ({\n  newQuestion,\n  newQuestionDispatch,\n  ...props\n}) => React.createElement(BooleanProperty, Object.assign({\n  newQuestionDispatch: newQuestionDispatch,\n  newQuestion: newQuestion,\n  name: \"Required\",\n  propertyName: \"required\"\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 115\n  },\n  __self: this\n}));\n\nconst BooleanProperty = ({\n  newQuestion,\n  newQuestionDispatch,\n  name,\n  propertyName,\n  ...props\n}) => {\n  const handleChange = event => {\n    newQuestion[propertyName] = event.target.checked;\n    newQuestionDispatch({\n      type: \"SET_QUESTION\",\n      question: { ...newQuestion\n      }\n    });\n  };\n\n  const switchComponent = React.createElement(Switch, {\n    checked: newQuestion[propertyName],\n    color: \"primary\",\n    onChange: handleChange,\n    name: propertyName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  });\n  return React.createElement(FormControlLabel, Object.assign({\n    control: switchComponent,\n    label: name\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }));\n};\n\nconst ArrayProperty = ({\n  newQuestion,\n  newQuestionDispatch,\n  name,\n  propertyName,\n  type\n}) => {\n  const handleChange = event => {\n    newQuestion[propertyName] = event.target.value;\n    newQuestionDispatch({\n      type: \"SET_QUESTION\",\n      question: { ...newQuestion\n      }\n    });\n  };\n\n  return React.createElement(TextField, {\n    autoFocus: true,\n    required: true,\n    variant: \"outlined\",\n    autoComplete: \"off\",\n    margin: \"dense\",\n    type: \"text\",\n    fullWidth: true,\n    id: \"outlined-basic\",\n    value: newQuestion[propertyName],\n    onChange: handleChange,\n    label: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  });\n};\n\nexport const TextOptionsProperty = ({\n  newQuestion,\n  newQuestionDispatch\n}) => {\n  const [optionAdded, setOptionAdded] = useState(false);\n\n  const handleChange = (index, event) => {\n    newQuestion.options[index] = event.target.value;\n    newQuestionDispatch({\n      type: \"SET_QUESTION\",\n      question: { ...newQuestion\n      }\n    });\n  };\n\n  const handleAddOptionClick = event => {\n    newQuestionDispatch({\n      type: \"SET_QUESTION\",\n      question: { ...newQuestion,\n        options: [...newQuestion.options, \"\"]\n      }\n    });\n    setOptionAdded(true);\n  };\n\n  const handleRemoveOptionClick = (index, event) => {\n    let newOptions = [...newQuestion.options];\n    newOptions.splice(index, 1);\n    newQuestionDispatch({\n      type: \"SET_QUESTION\",\n      question: { ...newQuestion,\n        options: newOptions\n      }\n    });\n  };\n\n  const renderOptions = () => newQuestion.options.map((option, index) => React.createElement(TextField, {\n    autoFocus: optionAdded ? index === newQuestion.options.length - 1 : false,\n    style: {\n      margin: \"0.2em 0\"\n    },\n    placeholder: newQuestion.type === \"range\" ? \"label\" : \"option\",\n    type: \"text\",\n    fullWidth: true,\n    value: option,\n    onChange: e => handleChange(index, e),\n    InputProps: getInputProps(index),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }));\n\n  const getInputProps = index => ({\n    endAdornment: React.createElement(InputAdornment, {\n      position: \"end\",\n      margin: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      edge: \"end\",\n      onClick: e => handleRemoveOptionClick(index, e),\n      style: {\n        margin: \"0\",\n        padding: \"0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(DeleteIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    })))\n  });\n\n  return React.createElement(React.Fragment, null, React.createElement(Button, {\n    onClick: handleAddOptionClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }, \"add \", newQuestion.type === \"range\" ? \"label\" : \"option\"), React.createElement(Box, {\n    fullWidth: true // height=\"200px\"\n    ,\n    height: \"200px\",\n    overflow: \"scroll\",\n    style: {\n      margin: \"0\",\n      overflowX: \"hidden\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }, renderOptions()));\n};","map":{"version":3,"sources":["/Users/palp/now/QMI/question-interface-managment/src/components/QuestionnaireProperties.js"],"names":["React","useContext","useState","Switch","DialogContent","FormControlLabel","IconButton","InputAdornment","TextField","DeleteIcon","Button","Box","uuid","TextProperty","newQuestion","newQuestionDispatch","name","propertyName","props","handleChange","event","target","value","type","question","TitleProperty","TooltipProperty","OtherwiseLabelProperty","OtherwiseTooltipProperty","HiddenProperty","ShowOtherwiseProperty","RequiredProperty","BooleanProperty","checked","switchComponent","ArrayProperty","TextOptionsProperty","optionAdded","setOptionAdded","index","options","handleAddOptionClick","handleRemoveOptionClick","newOptions","splice","renderOptions","map","option","length","margin","e","getInputProps","endAdornment","padding","overflowX"],"mappings":"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","sourcesContent":["import React, {useContext, useState} from \"react\";\nimport Switch from \"@material-ui/core/Switch\";\nimport {DialogContent, FormControlLabel, IconButton, InputAdornment} from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport uuid from \"uuid/v1\";\n\nconst TextProperty = ({\n  newQuestion,\n  newQuestionDispatch,\n  name,\n  propertyName,\n  ...props\n}) => {\n\n  const handleChange = event => {\n    newQuestion[propertyName] = event.target.value;\n    newQuestionDispatch({\n      type: \"SET_QUESTION\",\n      question: { ...newQuestion }\n    });\n  };\n\n  return (\n    <TextField\n      key={propertyName + uuid()}\n      variant=\"outlined\"\n      autoFocus\n      margin=\"dense\"\n      type=\"text\"\n      fullWidth\n      id={\"outlined-basic\"}\n      value={newQuestion[propertyName]}\n      onChange={handleChange}\n      label={name}\n      {...props}\n    />\n  );\n};\n\nexport const TitleProperty = ({ newQuestion, newQuestionDispatch, ...props }) => {\n  return (\n    <TextProperty\n      newQuestion={newQuestion}\n      newQuestionDispatch={newQuestionDispatch}\n      propertyName={\"title\"}\n      name={\"Title\"}\n      {...props}\n    />\n  );\n}\n\nexport const TooltipProperty = ({ newQuestion, newQuestionDispatch, ...props }) => {\n  return (\n    <TextProperty\n      newQuestion={newQuestion}\n      newQuestionDispatch={newQuestionDispatch}\n      propertyName={\"tooltip\"}\n      name={\"Tooltip text\"}\n      {...props}\n    />\n  );\n}\n\nexport const OtherwiseLabelProperty = ({ newQuestion, newQuestionDispatch, ...props }) => {\n  return (\n    <TextProperty\n      newQuestion={newQuestion}\n      newQuestionDispatch={newQuestionDispatch}\n      propertyName={\"otherwise_label\"}\n      name={\"Custom 'otherwise: ...' text\"}\n      {...props}\n    />\n  );\n\n}\nexport const OtherwiseTooltipProperty = ({ newQuestion, newQuestionDispatch, ...props }) => {\n  return (\n    <TextProperty\n      newQuestion={newQuestion}\n      newQuestionDispatch={newQuestionDispatch}\n      propertyName={\"otherwise_tooltip\"}\n      name={\"'otherwise: ...' tooltip\"}\n      {...props}\n    />\n  );\n}\n\n\n\n\nexport const HiddenProperty = ({newQuestion, newQuestionDispatch, ...props}) => (\n  <BooleanProperty\n    newQuestionDispatch={newQuestionDispatch}\n    newQuestion={newQuestion}\n    name={\"Hidden\"}\n    propertyName={\"hidden\"}\n    {...props}\n  />\n)\n\nexport const ShowOtherwiseProperty = ({newQuestion, newQuestionDispatch, ...props}) => (\n  <BooleanProperty\n    newQuestionDispatch={newQuestionDispatch}\n    newQuestion={newQuestion}\n    name={\"Show 'otherwise: ...'\"}\n    propertyName={\"show_otherwise\"}\n    {...props}\n  />\n)\n\nexport const RequiredProperty = ({newQuestion, newQuestionDispatch, ...props}) => (\n  <BooleanProperty\n    newQuestionDispatch={newQuestionDispatch}\n    newQuestion={newQuestion}\n    name={\"Required\"}\n    propertyName={\"required\"}\n    {...props}\n  />\n)\n\n\nconst BooleanProperty = ({newQuestion, newQuestionDispatch,\n                           name,\n                           propertyName,\n                           ...props}) => {\n\n  const handleChange = event => {\n    newQuestion[propertyName] = event.target.checked;\n    newQuestionDispatch({\n      type: \"SET_QUESTION\",\n      question: { ...newQuestion }\n    });\n  };\n\n  const switchComponent = <Switch\n    checked={newQuestion[propertyName]}\n    color=\"primary\"\n    onChange={handleChange}\n    name={propertyName}\n  />;\n\n\n  return (\n    <FormControlLabel\n      control={switchComponent}\n      label={name}\n      {...props}\n    />\n  );\n};\n\n\nconst ArrayProperty = ({newQuestion, newQuestionDispatch, name, propertyName, type}) => {\n  const handleChange = event => {\n    newQuestion[propertyName] = event.target.value;\n    newQuestionDispatch({\n      type: \"SET_QUESTION\",\n      question: { ...newQuestion}\n    });\n  };\n\n\n  return <TextField\n    autoFocus\n    required\n    variant=\"outlined\"\n    autoComplete=\"off\"\n    margin=\"dense\"\n    type=\"text\"\n    fullWidth\n    id={\"outlined-basic\"}\n    value={newQuestion[propertyName]}\n    onChange={handleChange}\n    label={name}\n  />\n};\nexport const TextOptionsProperty = ({newQuestion, newQuestionDispatch}) => {\n  const [optionAdded, setOptionAdded] = useState(false);\n\n  const handleChange = (index, event) => {\n    newQuestion.options[index] = event.target.value;\n    newQuestionDispatch({\n      type: \"SET_QUESTION\",\n      question: { ...newQuestion}\n    });\n  };\n\n  const handleAddOptionClick = event => {\n    newQuestionDispatch({\n      type: \"SET_QUESTION\",\n      question: { ...newQuestion, options: [...newQuestion.options, \"\"] }\n    });\n    setOptionAdded(true);\n  }\n\n  const handleRemoveOptionClick = (index, event) => {\n    let newOptions = [...newQuestion.options];\n    newOptions.splice(index, 1);\n    newQuestionDispatch({\n      type: \"SET_QUESTION\",\n      question: { ...newQuestion, options: newOptions }\n    });\n  };\n\n  const renderOptions = () => newQuestion.options.map((option, index) => (\n    <TextField\n      autoFocus={optionAdded ? index === newQuestion.options.length - 1 : false}\n      style={{ margin: \"0.2em 0\" }}\n      placeholder={newQuestion.type === \"range\" ? \"label\" : \"option\"}\n      type=\"text\"\n      fullWidth\n      value={option}\n      onChange={e => handleChange(index, e)}\n      InputProps={getInputProps(index)}\n    />\n  ))\n\n  const getInputProps = (index) => ({\n    endAdornment: (\n      <InputAdornment position=\"end\" margin=\"0\">\n        <IconButton\n          edge=\"end\"\n          onClick={e => handleRemoveOptionClick(index, e)}\n          style={{margin: \"0\", padding: \"0\"}}\n        >\n          <DeleteIcon/>\n        </IconButton>\n      </InputAdornment>\n    )\n  });\n\n  return <>\n    <Button onClick={handleAddOptionClick}>\n      add {newQuestion.type === \"range\" ? \"label\" : \"option\"}\n    </Button>\n    <Box\n      fullWidth\n      // height=\"200px\"\n      height=\"200px\"\n      overflow=\"scroll\"\n      style={{ margin: \"0\", overflowX: \"hidden\" }}\n    >\n      {renderOptions()}\n    </Box>\n  </>\n}\n\n\n"]},"metadata":{},"sourceType":"module"}