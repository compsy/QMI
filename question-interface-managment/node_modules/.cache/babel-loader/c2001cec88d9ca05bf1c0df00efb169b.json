{"ast":null,"code":"var _jsxFileName = \"/Users/palp/now/QMI/question-interface-managment/src/contexts/QuestionnaireContext.js\";\nimport React, { createContext, useReducer } from 'react';\nimport { questionnaireReducer } from '../reducers/questionnaireReducer';\nimport { useEffect } from 'react';\nexport const QuestionnaireContext = createContext();\n\nconst timelineReducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD_TIMELINE\":\n      if (state.present == null) {\n        return {\n          past: state.past,\n          present: action.questions,\n          future: state.future\n        };\n      } else {\n        return {\n          past: [...state.past, state.present],\n          present: action.questions,\n          future: state.future\n        };\n      }\n\n    case \"UNDO\":\n      if (state.past.length > 0) {\n        const newPast = state.past.slice(0, state.past.length - 1);\n        const newPresent = state.past[state.past.length - 1];\n        const newFuture = [state.present, ...state.future];\n        return {\n          past: newPast,\n          present: newPresent,\n          future: newFuture\n        };\n      } else {\n        return state;\n      }\n\n    case \"REDO\":\n      if (state.future.length > 0) {\n        const newPast = [...state.past, state.present];\n        const newFuture = state.future.slice(1, state.future.length);\n        const newPresent = state.future[0];\n        return {\n          past: newPast,\n          present: newPresent,\n          future: newFuture\n        };\n      } else {\n        return state;\n      }\n\n    default:\n      return state;\n  }\n};\n\nconst QuestionnaireContextProvider = props => {\n  const [questions, dispatch] = useReducer(questionnaireReducer, [{\n    id: 'v1',\n    type: \"radio\",\n    title: \"untitled radio\",\n    options: [\"option 1\", \"option 2\", \"option 3\", \"option 4\"]\n  }, {\n    id: 'v2',\n    type: \"checkbox\",\n    title: \"untitled checkbox\",\n    options: [\"option 1\", \"option 2\", \"option 3\", \"option 4\"]\n  }, {\n    id: 'v3',\n    type: \"range\",\n    title: \"untitled range\",\n    options: [\"option 1\", \"option 2\", \"option 3\", \"option 4\"]\n  }, {\n    id: 'v4',\n    type: \"likert\",\n    title: \"untitled likert\",\n    options: [\"option 1\", \"option 2\", \"option 3\", \"option 4\"]\n  }]);\n  const [timeline, dispatchTimeline] = useReducer(timelineReducer, {\n    past: [],\n    present: null,\n    future: []\n  }); // useEffect(() => {\n  //   dispatchTimeline({ type: \"ADD_QUESTIONS\", questions: questions })\n  // }, []);\n\n  useEffect(() => {\n    dispatchTimeline({\n      type: \"ADD_TIMELINE\",\n      questions: questions\n    });\n  }, [questions]);\n  useEffect(() => {\n    dispatch({\n      type: \"SET_QUESTIONS\",\n      questions: timeline.present\n    });\n  }, [timeline]);\n  return React.createElement(QuestionnaireContext.Provider, {\n    value: {\n      questions,\n      dispatch,\n      timeline,\n      dispatchTimeline\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default QuestionnaireContextProvider;","map":{"version":3,"sources":["/Users/palp/now/QMI/question-interface-managment/src/contexts/QuestionnaireContext.js"],"names":["React","createContext","useReducer","questionnaireReducer","useEffect","QuestionnaireContext","timelineReducer","state","action","type","present","past","questions","future","length","newPast","slice","newPresent","newFuture","QuestionnaireContextProvider","props","dispatch","id","title","options","timeline","dispatchTimeline","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,SAASC,oBAAT,QAAqC,kCAArC;AACA,SAASC,SAAT,QAA0B,OAA1B;AAEA,OAAO,MAAMC,oBAAoB,GAAGJ,aAAa,EAA1C;;AAEP,MAAMK,eAAe,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACzC,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,cAAL;AACE,UAAIF,KAAK,CAACG,OAAN,IAAiB,IAArB,EAA2B;AACzB,eAAO;AAACC,UAAAA,IAAI,EAAEJ,KAAK,CAACI,IAAb;AAAmBD,UAAAA,OAAO,EAAEF,MAAM,CAACI,SAAnC;AAA8CC,UAAAA,MAAM,EAAEN,KAAK,CAACM;AAA5D,SAAP;AACD,OAFD,MAEO;AACL,eAAO;AAACF,UAAAA,IAAI,EAAE,CAAC,GAAGJ,KAAK,CAACI,IAAV,EAAgBJ,KAAK,CAACG,OAAtB,CAAP;AAAuCA,UAAAA,OAAO,EAAEF,MAAM,CAACI,SAAvD;AAAkEC,UAAAA,MAAM,EAAEN,KAAK,CAACM;AAAhF,SAAP;AACD;;AACH,SAAK,MAAL;AACE,UAAIN,KAAK,CAACI,IAAN,CAAWG,MAAX,GAAoB,CAAxB,EAA2B;AACzB,cAAMC,OAAO,GAAGR,KAAK,CAACI,IAAN,CAAWK,KAAX,CAAiB,CAAjB,EAAoBT,KAAK,CAACI,IAAN,CAAWG,MAAX,GAAoB,CAAxC,CAAhB;AACA,cAAMG,UAAU,GAAGV,KAAK,CAACI,IAAN,CAAWJ,KAAK,CAACI,IAAN,CAAWG,MAAX,GAAoB,CAA/B,CAAnB;AACA,cAAMI,SAAS,GAAG,CAACX,KAAK,CAACG,OAAP,EAAgB,GAAGH,KAAK,CAACM,MAAzB,CAAlB;AACA,eAAO;AAACF,UAAAA,IAAI,EAAEI,OAAP;AAAgBL,UAAAA,OAAO,EAAEO,UAAzB;AAAqCJ,UAAAA,MAAM,EAAEK;AAA7C,SAAP;AACD,OALD,MAKO;AACL,eAAOX,KAAP;AACD;;AACH,SAAK,MAAL;AACE,UAAIA,KAAK,CAACM,MAAN,CAAaC,MAAb,GAAsB,CAA1B,EAA6B;AAC3B,cAAMC,OAAO,GAAG,CAAC,GAAGR,KAAK,CAACI,IAAV,EAAgBJ,KAAK,CAACG,OAAtB,CAAhB;AACA,cAAMQ,SAAS,GAAGX,KAAK,CAACM,MAAN,CAAaG,KAAb,CAAmB,CAAnB,EAAsBT,KAAK,CAACM,MAAN,CAAaC,MAAnC,CAAlB;AACA,cAAMG,UAAU,GAAGV,KAAK,CAACM,MAAN,CAAa,CAAb,CAAnB;AACA,eAAO;AAACF,UAAAA,IAAI,EAAEI,OAAP;AAAgBL,UAAAA,OAAO,EAAEO,UAAzB;AAAqCJ,UAAAA,MAAM,EAAEK;AAA7C,SAAP;AACD,OALD,MAKO;AACL,eAAOX,KAAP;AACD;;AACL;AACE,aAAOA,KAAP;AA1BF;AA4BD,CA7BD;;AA+BA,MAAMY,4BAA4B,GAAIC,KAAD,IAAW;AAC9C,QAAM,CAACR,SAAD,EAAYS,QAAZ,IAAwBnB,UAAU,CAACC,oBAAD,EAAuB,CAC7D;AAACmB,IAAAA,EAAE,EAAE,IAAL;AAAWb,IAAAA,IAAI,EAAE,OAAjB;AAA0Bc,IAAAA,KAAK,EAAE,gBAAjC;AAAmDC,IAAAA,OAAO,EAAE,CAAC,UAAD,EAAa,UAAb,EAAyB,UAAzB,EAAqC,UAArC;AAA5D,GAD6D,EAE7D;AAACF,IAAAA,EAAE,EAAE,IAAL;AAAWb,IAAAA,IAAI,EAAE,UAAjB;AAA6Bc,IAAAA,KAAK,EAAE,mBAApC;AAAyDC,IAAAA,OAAO,EAAE,CAAC,UAAD,EAAa,UAAb,EAAyB,UAAzB,EAAqC,UAArC;AAAlE,GAF6D,EAG7D;AAACF,IAAAA,EAAE,EAAE,IAAL;AAAWb,IAAAA,IAAI,EAAE,OAAjB;AAA0Bc,IAAAA,KAAK,EAAE,gBAAjC;AAAmDC,IAAAA,OAAO,EAAE,CAAC,UAAD,EAAa,UAAb,EAAyB,UAAzB,EAAqC,UAArC;AAA5D,GAH6D,EAI7D;AAACF,IAAAA,EAAE,EAAE,IAAL;AAAWb,IAAAA,IAAI,EAAE,QAAjB;AAA2Bc,IAAAA,KAAK,EAAE,iBAAlC;AAAqDC,IAAAA,OAAO,EAAE,CAAC,UAAD,EAAa,UAAb,EAAyB,UAAzB,EAAqC,UAArC;AAA9D,GAJ6D,CAAvB,CAAxC;AAMA,QAAM,CAACC,QAAD,EAAWC,gBAAX,IAA+BxB,UAAU,CAACI,eAAD,EAAkB;AAACK,IAAAA,IAAI,EAAE,EAAP;AAAWD,IAAAA,OAAO,EAAE,IAApB;AAA0BG,IAAAA,MAAM,EAAE;AAAlC,GAAlB,CAA/C,CAP8C,CAQ9C;AACA;AACA;;AACAT,EAAAA,SAAS,CAAC,MAAM;AACdsB,IAAAA,gBAAgB,CAAC;AAAEjB,MAAAA,IAAI,EAAE,cAAR;AAAwBG,MAAAA,SAAS,EAAEA;AAAnC,KAAD,CAAhB;AACD,GAFQ,EAEN,CAACA,SAAD,CAFM,CAAT;AAGAR,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,QAAQ,CAAC;AAAEZ,MAAAA,IAAI,EAAE,eAAR;AAAyBG,MAAAA,SAAS,EAAEa,QAAQ,CAACf;AAA7C,KAAD,CAAR;AACD,GAFQ,EAEN,CAACe,QAAD,CAFM,CAAT;AAGA,SACE,oBAAC,oBAAD,CAAsB,QAAtB;AAA+B,IAAA,KAAK,EAAE;AAACb,MAAAA,SAAD;AAAYS,MAAAA,QAAZ;AAAsBI,MAAAA,QAAtB;AAAgCC,MAAAA;AAAhC,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,KAAK,CAACO,QADT,CADF;AAKD,CAtBD;;AAwBA,eAAeR,4BAAf","sourcesContent":["import React, { createContext, useReducer } from 'react';\nimport { questionnaireReducer } from '../reducers/questionnaireReducer';\nimport { useEffect } from 'react';\n\nexport const QuestionnaireContext = createContext();\n\nconst timelineReducer = (state, action) => {\n  switch(action.type) {\n    case \"ADD_TIMELINE\":\n      if (state.present == null) {\n        return {past: state.past, present: action.questions, future: state.future};\n      } else {\n        return {past: [...state.past, state.present], present: action.questions, future: state.future};\n      }\n    case \"UNDO\":\n      if (state.past.length > 0) {\n        const newPast = state.past.slice(0, state.past.length - 1);\n        const newPresent = state.past[state.past.length - 1];\n        const newFuture = [state.present, ...state.future];\n        return {past: newPast, present: newPresent, future: newFuture};\n      } else {\n        return state;\n      }\n    case \"REDO\":\n      if (state.future.length > 0) {\n        const newPast = [...state.past, state.present];\n        const newFuture = state.future.slice(1, state.future.length);\n        const newPresent = state.future[0];\n        return {past: newPast, present: newPresent, future: newFuture};\n      } else {\n        return state;\n      }\n  default:\n    return state;\n  }\n}\n\nconst QuestionnaireContextProvider = (props) => {\n  const [questions, dispatch] = useReducer(questionnaireReducer, [\n    {id: 'v1', type: \"radio\", title: \"untitled radio\", options: [\"option 1\", \"option 2\", \"option 3\", \"option 4\"]},\n    {id: 'v2', type: \"checkbox\", title: \"untitled checkbox\", options: [\"option 1\", \"option 2\", \"option 3\", \"option 4\"]},\n    {id: 'v3', type: \"range\", title: \"untitled range\", options: [\"option 1\", \"option 2\", \"option 3\", \"option 4\"]},\n    {id: 'v4', type: \"likert\", title: \"untitled likert\", options: [\"option 1\", \"option 2\", \"option 3\", \"option 4\"]},\n  ]);\n  const [timeline, dispatchTimeline] = useReducer(timelineReducer, {past: [], present: null, future: []});\n  // useEffect(() => {\n  //   dispatchTimeline({ type: \"ADD_QUESTIONS\", questions: questions })\n  // }, []);\n  useEffect(() => {\n    dispatchTimeline({ type: \"ADD_TIMELINE\", questions: questions});\n  }, [questions]);\n  useEffect(() => {\n    dispatch({ type: \"SET_QUESTIONS\", questions: timeline.present });\n  }, [timeline]);\n  return (\n    <QuestionnaireContext.Provider value={{questions, dispatch, timeline, dispatchTimeline}}>\n      {props.children}\n    </QuestionnaireContext.Provider>\n  );\n}\n \nexport default QuestionnaireContextProvider;"]},"metadata":{},"sourceType":"module"}