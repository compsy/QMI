{"ast":null,"code":"var _jsxFileName = \"/Users/palp/now/QMI/question-interface-managment/src/components/QuestionnaireProperties.js\";\nimport React, { useContext, useState } from \"react\";\nimport Switch from \"@material-ui/core/Switch\";\nimport { DialogContent, FormControlLabel, IconButton, InputAdornment } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport uuid from \"uuid/v1\";\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nexport const PatternProperty = ({\n  newQuestion,\n  newQuestionDispatch,\n  ...props\n}) => React.createElement(TextProperty, Object.assign({\n  newQuestion: newQuestion,\n  newQuestionDispatch: newQuestionDispatch,\n  name: \"Regex pattern\",\n  propertyName: \"pattern\"\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}));\n\nconst RegexpProperty = ({\n  newQuestion,\n  newQuestionDispatch,\n  name,\n  propertyName,\n  regexp,\n  helperText,\n  ...props\n}) => {\n  const [valid, setValid] = useState(true);\n\n  const handleChange = event => {\n    newQuestion[propertyName] = event.target.value;\n    newQuestionDispatch({\n      type: \"SET_QUESTION\",\n      question: { ...newQuestion\n      }\n    });\n    setValid(regexp.test(event.target.value));\n  };\n\n  return React.createElement(TextField, Object.assign({\n    key: uuid(),\n    error: !valid,\n    autoFocus: true,\n    variant: \"outlined\",\n    margin: \"dense\",\n    type: \"text\",\n    fullWidth: true,\n    id: \"outlined-error-helper-text\",\n    helperText: valid ? \"\" : helperText,\n    value: newQuestion[propertyName],\n    onChange: handleChange,\n    label: name\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }));\n}; // todo: implement check\n\n\nexport const ColorProperty = ({\n  newQuestion,\n  newQuestionDispatch,\n  ...props\n}) => React.createElement(RegexpProperty, Object.assign({\n  newQuestion: newQuestion,\n  newQuestionDispatch: newQuestionDispatch,\n  name: \"Color (hex value)\",\n  propertyName: \"color\",\n  regexp: RegExp(\"^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$\"),\n  helperText: \"Use hex colors only (e.g. #007fff, #03d)\"\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63\n  },\n  __self: this\n}));\n\nconst DateProperty = ({\n  newQuestion,\n  newQuestionDispatch,\n  name,\n  propertyName,\n  ...props\n}) => {\n  const handleChange = event => {\n    newQuestion[propertyName] = event.target.value;\n    newQuestionDispatch({\n      type: \"SET_QUESTION\",\n      question: { ...newQuestion\n      }\n    });\n  };\n\n  return React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(KeyboardDatePicker, Object.assign({\n    key: uuid(),\n    disableToolbar: true,\n    variant: \"inline\",\n    format: \"dd/MM/yyyy\",\n    margin: \"normal\",\n    id: \"date-picker-inline\",\n    label: name,\n    value: newQuestion[propertyName],\n    onChange: handleChange,\n    KeyboardButtonProps: {\n      'aria-label': 'change date'\n    }\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  })));\n};\n\nexport const DefaultDateProperty = ({\n  newQuestion,\n  newQuestionDispatch,\n  ...props\n}) => React.createElement(DateProperty, Object.assign({\n  newQuestion: newQuestion,\n  newQuestionDispatch: newQuestionDispatch,\n  name: \"Default Date\",\n  propertyName: \"default_date\"\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 114\n  },\n  __self: this\n}));\nexport const MinDateProperty = ({\n  newQuestion,\n  newQuestionDispatch,\n  ...props\n}) => React.createElement(DateProperty, Object.assign({\n  newQuestion: newQuestion,\n  newQuestionDispatch: newQuestionDispatch,\n  name: \"Minimum Date\",\n  propertyName: \"min\"\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 123\n  },\n  __self: this\n}));\nexport const MaxDateProperty = ({\n  newQuestion,\n  newQuestionDispatch,\n  ...props\n}) => React.createElement(DateProperty, Object.assign({\n  newQuestion: newQuestion,\n  newQuestionDispatch: newQuestionDispatch,\n  name: \"Maximum Date\",\n  propertyName: \"max\"\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 132\n  },\n  __self: this\n}));\n\nconst TextProperty = ({\n  newQuestion,\n  newQuestionDispatch,\n  name,\n  propertyName,\n  ...props\n}) => {\n  const handleChange = event => {\n    newQuestion[propertyName] = event.target.value;\n    newQuestionDispatch({\n      type: \"SET_QUESTION\",\n      question: { ...newQuestion\n      }\n    });\n  };\n\n  return React.createElement(TextField, Object.assign({\n    key: uuid(),\n    autoFocus: true,\n    variant: \"outlined\",\n    margin: \"dense\",\n    type: \"text\",\n    fullWidth: true,\n    id: \"outlined-basic\",\n    value: newQuestion[propertyName],\n    onChange: handleChange,\n    label: name\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }));\n};\n\nexport const TitleProperty = ({\n  newQuestion,\n  newQuestionDispatch,\n  ...props\n}) => {\n  return React.createElement(TextProperty, Object.assign({\n    newQuestion: newQuestion,\n    newQuestionDispatch: newQuestionDispatch,\n    propertyName: \"title\",\n    name: \"Title\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }));\n};\nexport const TooltipProperty = ({\n  newQuestion,\n  newQuestionDispatch,\n  ...props\n}) => {\n  return React.createElement(TextProperty, Object.assign({\n    newQuestion: newQuestion,\n    newQuestionDispatch: newQuestionDispatch,\n    propertyName: \"tooltip\",\n    name: \"Tooltip text\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }));\n};\nexport const OtherwiseLabelProperty = ({\n  newQuestion,\n  newQuestionDispatch,\n  ...props\n}) => {\n  return React.createElement(TextProperty, Object.assign({\n    newQuestion: newQuestion,\n    newQuestionDispatch: newQuestionDispatch,\n    propertyName: \"otherwise_label\",\n    name: \"Custom 'otherwise: ...' text\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }));\n};\nexport const OtherwiseTooltipProperty = ({\n  newQuestion,\n  newQuestionDispatch,\n  ...props\n}) => {\n  return React.createElement(TextProperty, Object.assign({\n    newQuestion: newQuestion,\n    newQuestionDispatch: newQuestionDispatch,\n    propertyName: \"otherwise_tooltip\",\n    name: \"'otherwise: ...' tooltip\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }));\n};\nexport const HiddenProperty = ({\n  newQuestion,\n  newQuestionDispatch,\n  ...props\n}) => React.createElement(BooleanProperty, Object.assign({\n  newQuestionDispatch: newQuestionDispatch,\n  newQuestion: newQuestion,\n  name: \"Hidden\",\n  propertyName: \"hidden\"\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 227\n  },\n  __self: this\n}));\nexport const ShowOtherwiseProperty = ({\n  newQuestion,\n  newQuestionDispatch,\n  ...props\n}) => React.createElement(BooleanProperty, Object.assign({\n  newQuestionDispatch: newQuestionDispatch,\n  newQuestion: newQuestion,\n  name: \"Show 'otherwise: ...'\",\n  propertyName: \"show_otherwise\"\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 237\n  },\n  __self: this\n}));\nexport const RequiredProperty = ({\n  newQuestion,\n  newQuestionDispatch,\n  ...props\n}) => React.createElement(BooleanProperty, Object.assign({\n  newQuestionDispatch: newQuestionDispatch,\n  newQuestion: newQuestion,\n  name: \"Required\",\n  propertyName: \"required\"\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 247\n  },\n  __self: this\n}));\n\nconst BooleanProperty = ({\n  newQuestion,\n  newQuestionDispatch,\n  name,\n  propertyName,\n  ...props\n}) => {\n  const handleChange = event => {\n    newQuestion[propertyName] = event.target.checked;\n    newQuestionDispatch({\n      type: \"SET_QUESTION\",\n      question: { ...newQuestion\n      }\n    });\n  };\n\n  const switchComponent = React.createElement(Switch, {\n    checked: newQuestion[propertyName],\n    color: \"primary\",\n    onChange: handleChange,\n    name: propertyName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270\n    },\n    __self: this\n  });\n  return React.createElement(FormControlLabel, Object.assign({\n    control: switchComponent,\n    label: name\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279\n    },\n    __self: this\n  }));\n}; // TODO: make it allow numbers only\n\n\nconst NumericProperty = ({\n  newQuestion,\n  newQuestionDispatch,\n  name,\n  propertyName,\n  ...props\n}) => {\n  return React.createElement(TextProperty, Object.assign({\n    newQuestion: newQuestion,\n    newQuestionDispatch: newQuestionDispatch,\n    name: name,\n    propertyName: propertyName\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296\n    },\n    __self: this\n  }));\n};\n\nexport const MinProperty = ({\n  newQuestion,\n  newQuestionDispatch,\n  ...props\n}) => React.createElement(NumericProperty, Object.assign({\n  newQuestion: newQuestion,\n  newQuestionDispatch: newQuestionDispatch,\n  name: \"Minimum\",\n  propertyName: \"min\"\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 306\n  },\n  __self: this\n}));\nexport const MaxProperty = ({\n  newQuestion,\n  newQuestionDispatch,\n  ...props\n}) => React.createElement(NumericProperty, Object.assign({\n  newQuestion: newQuestion,\n  newQuestionDispatch: newQuestionDispatch,\n  name: \"Maximum\",\n  propertyName: \"max\"\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 316\n  },\n  __self: this\n}));\nexport const StepProperty = ({\n  newQuestion,\n  newQuestionDispatch,\n  ...props\n}) => React.createElement(NumericProperty, Object.assign({\n  newQuestion: newQuestion,\n  newQuestionDispatch: newQuestionDispatch,\n  name: \"Step size\",\n  propertyName: \"step\"\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 326\n  },\n  __self: this\n}));\nexport const ContentProperty = ({\n  newQuestion,\n  newQuestionDispatch,\n  ...props\n}) => React.createElement(TextProperty, Object.assign({\n  multiline: true,\n  newQuestion: newQuestion,\n  newQuestionDispatch: newQuestionDispatch,\n  name: \"Raw HTML\",\n  propertyName: \"raw\"\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 336\n  },\n  __self: this\n}));\nexport const PlaceholderProperty = ({\n  newQuestion,\n  newQuestionDispatch,\n  ...props\n}) => React.createElement(TextProperty, Object.assign({\n  newQuestion: newQuestion,\n  newQuestionDispatch: newQuestionDispatch,\n  name: \"Placeholder\",\n  propertyName: \"placeholder\"\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 347\n  },\n  __self: this\n}));\nexport const DefaultTextValueProperty = ({\n  newQuestion,\n  newQuestionDispatch,\n  ...props\n}) => React.createElement(TextProperty, Object.assign({\n  newQuestion: newQuestion,\n  newQuestionDispatch: newQuestionDispatch,\n  name: \"Default value\",\n  propertyName: \"default_value\"\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 357\n  },\n  __self: this\n}));\nexport const HintProperty = ({\n  newQuestion,\n  newQuestionDispatch,\n  ...props\n}) => React.createElement(TextProperty, Object.assign({\n  newQuestion: newQuestion,\n  newQuestionDispatch: newQuestionDispatch,\n  name: \"Hint\",\n  propertyName: \"hint\"\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 370\n  },\n  __self: this\n}));\nexport const MaxLengthProperty = ({\n  newQuestion,\n  newQuestionDispatch,\n  ...props\n}) => React.createElement(NumericProperty, Object.assign({\n  newQuestion: newQuestion,\n  newQuestionDispatch: newQuestionDispatch,\n  name: \"Max length\",\n  propertyName: \"max_length\"\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 380\n  },\n  __self: this\n}));\nexport const RemoveButtonLabelProperty = ({\n  newQuestion,\n  newQuestionDispatch,\n  ...props\n}) => React.createElement(TextProperty, Object.assign({\n  newQuestion: newQuestion,\n  newQuestionDispatch: newQuestionDispatch,\n  name: \"Remove-button label\",\n  propertyName: \"remove_button_label\"\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 390\n  },\n  __self: this\n}));\nexport const AddButtonLabelProperty = ({\n  newQuestion,\n  newQuestionDispatch,\n  ...props\n}) => React.createElement(TextProperty, Object.assign({\n  newQuestion: newQuestion,\n  newQuestionDispatch: newQuestionDispatch,\n  name: \"Add-button label\",\n  propertyName: \"add_button_label\"\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 400\n  },\n  __self: this\n}));\nexport const DefaultExpansionsProperty = ({\n  newQuestion,\n  newQuestionDispatch,\n  ...props\n}) => React.createElement(NumericProperty, Object.assign({\n  newQuestion: newQuestion,\n  newQuestionDispatch: newQuestionDispatch,\n  name: \"Default amount of expansions\",\n  propertyName: \"default_expansions\"\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 409\n  },\n  __self: this\n}));\nexport const MaxExpansionsProperty = ({\n  newQuestion,\n  newQuestionDispatch,\n  ...props\n}) => React.createElement(NumericProperty, Object.assign({\n  newQuestion: newQuestion,\n  newQuestionDispatch: newQuestionDispatch,\n  name: \"Default amount of expansions\",\n  propertyName: \"max_expansions\"\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 418\n  },\n  __self: this\n}));\nexport const HoursFromProperty = ({\n  newQuestion,\n  newQuestionDispatch,\n  ...props\n}) => React.createElement(NumericProperty, Object.assign({\n  newQuestion: newQuestion,\n  newQuestionDispatch: newQuestionDispatch,\n  name: \"Hours from\",\n  propertyName: \"hours_from\"\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 428\n  },\n  __self: this\n}));\nexport const HoursToProperty = ({\n  newQuestion,\n  newQuestionDispatch,\n  ...props\n}) => React.createElement(NumericProperty, Object.assign({\n  newQuestion: newQuestion,\n  newQuestionDispatch: newQuestionDispatch,\n  name: \"Hours to\",\n  propertyName: \"hours_to\"\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 438\n  },\n  __self: this\n}));\nexport const HoursStepProperty = ({\n  newQuestion,\n  newQuestionDispatch,\n  ...props\n}) => React.createElement(NumericProperty, Object.assign({\n  newQuestion: newQuestion,\n  newQuestionDispatch: newQuestionDispatch,\n  name: \"Hours step count\",\n  propertyName: \"hours_step\"\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 448\n  },\n  __self: this\n}));\nexport const HoursLabelProperty = ({\n  newQuestion,\n  newQuestionDispatch,\n  ...props\n}) => React.createElement(TextProperty, Object.assign({\n  newQuestion: newQuestion,\n  newQuestionDispatch: newQuestionDispatch,\n  name: \"Custom 'hours' text\",\n  propertyName: \"hours_label\"\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 458\n  },\n  __self: this\n}));\nexport const MinutesLabelProperty = ({\n  newQuestion,\n  newQuestionDispatch,\n  ...props\n}) => React.createElement(TextProperty, Object.assign({\n  newQuestion: newQuestion,\n  newQuestionDispatch: newQuestionDispatch,\n  name: \"Custom 'minutes' label\",\n  propertyName: \"minutes_label\"\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 467\n  },\n  __self: this\n}));\nexport const ButtonTextProperty = ({\n  newQuestion,\n  newQuestionDispatch,\n  ...props\n}) => React.createElement(TextProperty, Object.assign({\n  newQuestion: newQuestion,\n  newQuestionDispatch: newQuestionDispatch,\n  name: \"Button text\",\n  propertyName: \"button_text\"\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 477\n  },\n  __self: this\n}));\nexport const LabelProperty = ({\n  newQuestion,\n  newQuestionDispatch,\n  ...props\n}) => React.createElement(TextProperty, Object.assign({\n  newQuestion: newQuestion,\n  newQuestionDispatch: newQuestionDispatch,\n  name: \"Label\",\n  propertyName: \"label\"\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 487\n  },\n  __self: this\n}));\nexport const WidthProperty = ({\n  newQuestion,\n  newQuestionDispatch,\n  ...props\n}) => React.createElement(NumericProperty, Object.assign({\n  newQuestion: newQuestion,\n  newQuestionDispatch: newQuestionDispatch,\n  name: \"Width\",\n  propertyName: \"width\"\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 497\n  },\n  __self: this\n}));\nexport const HeightProperty = ({\n  newQuestion,\n  newQuestionDispatch,\n  ...props\n}) => React.createElement(NumericProperty, Object.assign({\n  newQuestion: newQuestion,\n  newQuestionDispatch: newQuestionDispatch,\n  name: \"Height\",\n  propertyName: \"height\"\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 506\n  },\n  __self: this\n}));\nexport const ImageProperty = ({\n  newQuestion,\n  newQuestionDispatch,\n  ...props\n}) => null;\nexport const DataMethodProperty = ({\n  newQuestion,\n  newQuestionDispatch,\n  ...props\n}) => null;\nexport const SectionStartProperty = ({\n  newQuestion,\n  newQuestionDispatch,\n  ...props\n}) => React.createElement(TextProperty, Object.assign({\n  newQuestion: newQuestion,\n  newQuestionDispatch: newQuestionDispatch,\n  name: \"Start section with...\",\n  propertyName: \"section_start\"\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 527\n  },\n  __self: this\n}));\nexport const SectionEndProperty = ({\n  newQuestion,\n  newQuestionDispatch,\n  ...props\n}) => React.createElement(TextProperty, Object.assign({\n  newQuestion: newQuestion,\n  newQuestionDispatch: newQuestionDispatch,\n  name: \"End section with...\",\n  propertyName: \"section_end\"\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 537\n  },\n  __self: this\n}));\nexport const RadiusProperty = ({\n  newQuestion,\n  newQuestionDispatch,\n  ...props\n}) => React.createElement(NumericProperty, Object.assign({\n  newQuestion: newQuestion,\n  newQuestionDispatch: newQuestionDispatch,\n  name: \"Radius\",\n  propertyName: \"radius\"\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 549\n  },\n  __self: this\n}));\nexport const DensityProperty = ({\n  newQuestion,\n  newQuestionDispatch,\n  ...props\n}) => React.createElement(NumericProperty, Object.assign({\n  newQuestion: newQuestion,\n  newQuestionDispatch: newQuestionDispatch,\n  name: \"Density\",\n  propertyName: \"density\"\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 559\n  },\n  __self: this\n}));\nexport const TodayProperty = ({\n  newQuestion,\n  newQuestionDispatch,\n  ...props\n}) => React.createElement(BooleanProperty, Object.assign({\n  newQuestion: newQuestion,\n  newQuestionDispatch: newQuestionDispatch,\n  name: \"Today\",\n  propertyName: \"today\"\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 572\n  },\n  __self: this\n}));\n/*\n* This will use the ArrayProperty component.\n* */\n\nexport const LabelsProperty = () => null;\n\nconst ArrayProperty = ({\n  newQuestion,\n  newQuestionDispatch,\n  name,\n  propertyName,\n  type\n}) => {\n  const handleChange = event => {\n    newQuestion[propertyName] = event.target.value;\n    newQuestionDispatch({\n      type: \"SET_QUESTION\",\n      question: { ...newQuestion\n      }\n    });\n  };\n\n  return React.createElement(TextField, {\n    autoFocus: true,\n    required: true,\n    variant: \"outlined\",\n    autoComplete: \"off\",\n    margin: \"dense\",\n    type: \"text\",\n    fullWidth: true,\n    id: \"outlined-basic\",\n    value: newQuestion[propertyName],\n    onChange: handleChange,\n    label: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 598\n    },\n    __self: this\n  });\n};\n\nexport const TextArrayProperty = ({\n  newQuestion,\n  newQuestionDispatch,\n  name,\n  propertyName\n}) => {\n  const [elementAdded, setElementAdded] = useState(false);\n\n  const handleChange = (index, event) => {\n    newQuestion[propertyName][index] = event.target.value;\n    newQuestionDispatch({\n      type: \"SET_QUESTION\",\n      question: { ...newQuestion\n      }\n    });\n  };\n\n  const handleAddOptionClick = event => {\n    newQuestion[propertyName] = [newQuestion[propertyName], \"\"];\n    newQuestionDispatch({\n      type: \"SET_QUESTION\",\n      question: { ...newQuestion\n      }\n    });\n    setElementAdded(true);\n  };\n\n  const handleRemoveOptionClick = (index, event) => {\n    let newElements = [...newQuestion[propertyName]];\n    newElements.splice(index, 1);\n    newQuestion[propertyName] = newElements;\n    newQuestionDispatch({\n      type: \"SET_QUESTION\",\n      question: { ...newQuestion\n      }\n    });\n  };\n\n  const renderElements = () => newQuestion[propertyName].map((option, index) => React.createElement(TextField, {\n    autoFocus: elementAdded ? index === newQuestion[propertyName].length - 1 : false,\n    style: {\n      margin: \"0.2em 0\"\n    },\n    placeholder: name,\n    type: \"text\",\n    fullWidth: true,\n    value: option,\n    onChange: e => handleChange(index, e),\n    InputProps: getInputProps(index),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 644\n    },\n    __self: this\n  }));\n\n  const getInputProps = index => ({\n    endAdornment: React.createElement(InputAdornment, {\n      position: \"end\",\n      margin: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 658\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      edge: \"end\",\n      onClick: e => handleRemoveOptionClick(index, e),\n      style: {\n        margin: \"0\",\n        padding: \"0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 659\n      },\n      __self: this\n    }, React.createElement(DeleteIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 664\n      },\n      __self: this\n    })))\n  });\n\n  return React.createElement(React.Fragment, null, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 671\n    },\n    __self: this\n  }, name), React.createElement(Button, {\n    onClick: handleAddOptionClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 672\n    },\n    __self: this\n  }, \"add \", newQuestion.type === \"range\" ? \"label\" : \"option\"), React.createElement(Box, {\n    fullWidth: true // height=\"200px\"\n    ,\n    height: \"200px\",\n    overflow: \"scroll\",\n    style: {\n      margin: \"0\",\n      overflowX: \"hidden\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 675\n    },\n    __self: this\n  }, renderElements()));\n};\nexport const TextOptionsProperty = ({\n  newQuestion,\n  newQuestionDispatch\n}) => React.createElement(TextArrayProperty, {\n  newQuestion: newQuestion,\n  newQuestionDispatch: newQuestionDispatch,\n  name: \"Options\",\n  propertyName: \"options\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 690\n  },\n  __self: this\n});\nexport const LabelOptionsProperty = ({\n  newQuestion,\n  newQuestionDispatch\n}) => React.createElement(TextArrayProperty, {\n  newQuestion: newQuestion,\n  newQuestionDispatch: newQuestionDispatch,\n  name: \"Labels\",\n  propertyName: \"labels\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 698\n  },\n  __self: this\n});","map":{"version":3,"sources":["/Users/palp/now/QMI/question-interface-managment/src/components/QuestionnaireProperties.js"],"names":["React","useContext","useState","Switch","DialogContent","FormControlLabel","IconButton","InputAdornment","TextField","DeleteIcon","Button","Box","uuid","KeyboardDatePicker","MuiPickersUtilsProvider","DateFnsUtils","PatternProperty","newQuestion","newQuestionDispatch","props","RegexpProperty","name","propertyName","regexp","helperText","valid","setValid","handleChange","event","target","value","type","question","test","ColorProperty","RegExp","DateProperty","DefaultDateProperty","MinDateProperty","MaxDateProperty","TextProperty","TitleProperty","TooltipProperty","OtherwiseLabelProperty","OtherwiseTooltipProperty","HiddenProperty","ShowOtherwiseProperty","RequiredProperty","BooleanProperty","checked","switchComponent","NumericProperty","MinProperty","MaxProperty","StepProperty","ContentProperty","PlaceholderProperty","DefaultTextValueProperty","HintProperty","MaxLengthProperty","RemoveButtonLabelProperty","AddButtonLabelProperty","DefaultExpansionsProperty","MaxExpansionsProperty","HoursFromProperty","HoursToProperty","HoursStepProperty","HoursLabelProperty","MinutesLabelProperty","ButtonTextProperty","LabelProperty","WidthProperty","HeightProperty","ImageProperty","DataMethodProperty","SectionStartProperty","SectionEndProperty","RadiusProperty","DensityProperty","TodayProperty","LabelsProperty","ArrayProperty","TextArrayProperty","elementAdded","setElementAdded","index","handleAddOptionClick","handleRemoveOptionClick","newElements","splice","renderElements","map","option","length","margin","e","getInputProps","endAdornment","padding","overflowX","TextOptionsProperty","LabelOptionsProperty"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAAQC,aAAR,EAAuBC,gBAAvB,EAAyCC,UAAzC,EAAqDC,cAArD,QAA0E,mBAA1E;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,SAAQC,kBAAR,EAA4BC,uBAA5B,QAA0D,sBAA1D;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AAEA,OAAO,MAAMC,eAAe,GAAG,CAAC;AAACC,EAAAA,WAAD;AAAcC,EAAAA,mBAAd;AAAmC,KAAGC;AAAtC,CAAD,KAC7B,oBAAC,YAAD;AACE,EAAA,WAAW,EAAEF,WADf;AAEE,EAAA,mBAAmB,EAAEC,mBAFvB;AAGE,EAAA,IAAI,EAAE,eAHR;AAIE,EAAA,YAAY,EAAE;AAJhB,GAKMC,KALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADK;;AAUP,MAAMC,cAAc,GAAG,CAAC;AACAH,EAAAA,WADA;AAEAC,EAAAA,mBAFA;AAGAG,EAAAA,IAHA;AAIAC,EAAAA,YAJA;AAKAC,EAAAA,MALA;AAMAC,EAAAA,UANA;AAOA,KAAGL;AAPH,CAAD,KAQK;AAE1B,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBxB,QAAQ,CAAC,IAAD,CAAlC;;AAEA,QAAMyB,YAAY,GAAGC,KAAK,IAAI;AAC5BX,IAAAA,WAAW,CAACK,YAAD,CAAX,GAA4BM,KAAK,CAACC,MAAN,CAAaC,KAAzC;AACAZ,IAAAA,mBAAmB,CAAC;AAClBa,MAAAA,IAAI,EAAE,cADY;AAElBC,MAAAA,QAAQ,EAAE,EAAE,GAAGf;AAAL;AAFQ,KAAD,CAAnB;AAIAS,IAAAA,QAAQ,CAACH,MAAM,CAACU,IAAP,CAAYL,KAAK,CAACC,MAAN,CAAaC,KAAzB,CAAD,CAAR;AACD,GAPD;;AASA,SACE,oBAAC,SAAD;AACE,IAAA,GAAG,EAAElB,IAAI,EADX;AAEE,IAAA,KAAK,EAAE,CAACa,KAFV;AAGE,IAAA,SAAS,MAHX;AAIE,IAAA,OAAO,EAAC,UAJV;AAKE,IAAA,MAAM,EAAC,OALT;AAME,IAAA,IAAI,EAAC,MANP;AAOE,IAAA,SAAS,MAPX;AAQE,IAAA,EAAE,EAAE,4BARN;AASE,IAAA,UAAU,EAAEA,KAAK,GAAG,EAAH,GAAQD,UAT3B;AAUE,IAAA,KAAK,EAAEP,WAAW,CAACK,YAAD,CAVpB;AAWE,IAAA,QAAQ,EAAEK,YAXZ;AAYE,IAAA,KAAK,EAAEN;AAZT,KAaMF,KAbN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAiBD,CAtCD,C,CAuCA;;;AACA,OAAO,MAAMe,aAAa,GAAG,CAAC;AAACjB,EAAAA,WAAD;AAAcC,EAAAA,mBAAd;AAAmC,KAAGC;AAAtC,CAAD,KAC3B,oBAAC,cAAD;AACE,EAAA,WAAW,EAAEF,WADf;AAEE,EAAA,mBAAmB,EAAEC,mBAFvB;AAGE,EAAA,IAAI,EAAE,mBAHR;AAIE,EAAA,YAAY,EAAE,OAJhB;AAKE,EAAA,MAAM,EAAEiB,MAAM,CAAC,oCAAD,CALhB;AAME,EAAA,UAAU,EAAC;AANb,GAOMhB,KAPN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADK;;AAaP,MAAMiB,YAAY,GAAG,CAAC;AACEnB,EAAAA,WADF;AAEEC,EAAAA,mBAFF;AAGEG,EAAAA,IAHF;AAIEC,EAAAA,YAJF;AAKE,KAAGH;AALL,CAAD,KAMO;AAE1B,QAAMQ,YAAY,GAAGC,KAAK,IAAI;AAC5BX,IAAAA,WAAW,CAACK,YAAD,CAAX,GAA4BM,KAAK,CAACC,MAAN,CAAaC,KAAzC;AACAZ,IAAAA,mBAAmB,CAAC;AAClBa,MAAAA,IAAI,EAAE,cADY;AAElBC,MAAAA,QAAQ,EAAE,EAAE,GAAGf;AAAL;AAFQ,KAAD,CAAnB;AAID,GAND;;AAQA,SACE,oBAAC,uBAAD;AAAyB,IAAA,KAAK,EAAEF,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,kBAAD;AACE,IAAA,GAAG,EAAEH,IAAI,EADX;AAEE,IAAA,cAAc,MAFhB;AAGE,IAAA,OAAO,EAAC,QAHV;AAIE,IAAA,MAAM,EAAC,YAJT;AAKE,IAAA,MAAM,EAAC,QALT;AAME,IAAA,EAAE,EAAC,oBANL;AAOE,IAAA,KAAK,EAAES,IAPT;AAQE,IAAA,KAAK,EAAEJ,WAAW,CAACK,YAAD,CARpB;AASE,IAAA,QAAQ,EAAEK,YATZ;AAUE,IAAA,mBAAmB,EAAE;AACnB,oBAAc;AADK;AAVvB,KAaMR,KAbN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF;AAoBD,CApCD;;AAsCA,OAAO,MAAMkB,mBAAmB,GAAG,CAAC;AAACpB,EAAAA,WAAD;AAAcC,EAAAA,mBAAd;AAAmC,KAAGC;AAAtC,CAAD,KACjC,oBAAC,YAAD;AACE,EAAA,WAAW,EAAEF,WADf;AAEE,EAAA,mBAAmB,EAAEC,mBAFvB;AAGE,EAAA,IAAI,EAAC,cAHP;AAIE,EAAA,YAAY,EAAC;AAJf,GAKMC,KALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADK;AASP,OAAO,MAAMmB,eAAe,GAAG,CAAC;AAACrB,EAAAA,WAAD;AAAcC,EAAAA,mBAAd;AAAmC,KAAGC;AAAtC,CAAD,KAC7B,oBAAC,YAAD;AACE,EAAA,WAAW,EAAEF,WADf;AAEE,EAAA,mBAAmB,EAAEC,mBAFvB;AAGE,EAAA,IAAI,EAAC,cAHP;AAIE,EAAA,YAAY,EAAC;AAJf,GAKMC,KALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADK;AASP,OAAO,MAAMoB,eAAe,GAAG,CAAC;AAACtB,EAAAA,WAAD;AAAcC,EAAAA,mBAAd;AAAmC,KAAGC;AAAtC,CAAD,KAC7B,oBAAC,YAAD;AACE,EAAA,WAAW,EAAEF,WADf;AAEE,EAAA,mBAAmB,EAAEC,mBAFvB;AAGE,EAAA,IAAI,EAAC,cAHP;AAIE,EAAA,YAAY,EAAC;AAJf,GAKMC,KALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADK;;AAWP,MAAMqB,YAAY,GAAG,CAAC;AACpBvB,EAAAA,WADoB;AAEpBC,EAAAA,mBAFoB;AAGpBG,EAAAA,IAHoB;AAIpBC,EAAAA,YAJoB;AAKpB,KAAGH;AALiB,CAAD,KAMf;AAEJ,QAAMQ,YAAY,GAAGC,KAAK,IAAI;AAC5BX,IAAAA,WAAW,CAACK,YAAD,CAAX,GAA4BM,KAAK,CAACC,MAAN,CAAaC,KAAzC;AACAZ,IAAAA,mBAAmB,CAAC;AAClBa,MAAAA,IAAI,EAAE,cADY;AAElBC,MAAAA,QAAQ,EAAE,EAAE,GAAGf;AAAL;AAFQ,KAAD,CAAnB;AAID,GAND;;AAQA,SACE,oBAAC,SAAD;AACE,IAAA,GAAG,EAAEL,IAAI,EADX;AAEE,IAAA,SAAS,MAFX;AAGE,IAAA,OAAO,EAAC,UAHV;AAIE,IAAA,MAAM,EAAC,OAJT;AAKE,IAAA,IAAI,EAAC,MALP;AAME,IAAA,SAAS,MANX;AAOE,IAAA,EAAE,EAAE,gBAPN;AAQE,IAAA,KAAK,EAAEK,WAAW,CAACK,YAAD,CARpB;AASE,IAAA,QAAQ,EAAEK,YATZ;AAUE,IAAA,KAAK,EAAEN;AAVT,KAWMF,KAXN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAeD,CA/BD;;AAiCA,OAAO,MAAMsB,aAAa,GAAG,CAAC;AAAExB,EAAAA,WAAF;AAAeC,EAAAA,mBAAf;AAAoC,KAAGC;AAAvC,CAAD,KAAoD;AAC/E,SACE,oBAAC,YAAD;AACE,IAAA,WAAW,EAAEF,WADf;AAEE,IAAA,mBAAmB,EAAEC,mBAFvB;AAGE,IAAA,YAAY,EAAE,OAHhB;AAIE,IAAA,IAAI,EAAE;AAJR,KAKMC,KALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AASD,CAVM;AAYP,OAAO,MAAMuB,eAAe,GAAG,CAAC;AAAEzB,EAAAA,WAAF;AAAeC,EAAAA,mBAAf;AAAoC,KAAGC;AAAvC,CAAD,KAAoD;AACjF,SACE,oBAAC,YAAD;AACE,IAAA,WAAW,EAAEF,WADf;AAEE,IAAA,mBAAmB,EAAEC,mBAFvB;AAGE,IAAA,YAAY,EAAE,SAHhB;AAIE,IAAA,IAAI,EAAE;AAJR,KAKMC,KALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AASD,CAVM;AAYP,OAAO,MAAMwB,sBAAsB,GAAG,CAAC;AAAE1B,EAAAA,WAAF;AAAeC,EAAAA,mBAAf;AAAoC,KAAGC;AAAvC,CAAD,KAAoD;AACxF,SACE,oBAAC,YAAD;AACE,IAAA,WAAW,EAAEF,WADf;AAEE,IAAA,mBAAmB,EAAEC,mBAFvB;AAGE,IAAA,YAAY,EAAE,iBAHhB;AAIE,IAAA,IAAI,EAAE;AAJR,KAKMC,KALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAUD,CAXM;AAYP,OAAO,MAAMyB,wBAAwB,GAAG,CAAC;AAAE3B,EAAAA,WAAF;AAAeC,EAAAA,mBAAf;AAAoC,KAAGC;AAAvC,CAAD,KAAoD;AAC1F,SACE,oBAAC,YAAD;AACE,IAAA,WAAW,EAAEF,WADf;AAEE,IAAA,mBAAmB,EAAEC,mBAFvB;AAGE,IAAA,YAAY,EAAE,mBAHhB;AAIE,IAAA,IAAI,EAAE;AAJR,KAKMC,KALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AASD,CAVM;AAeP,OAAO,MAAM0B,cAAc,GAAG,CAAC;AAAC5B,EAAAA,WAAD;AAAcC,EAAAA,mBAAd;AAAmC,KAAGC;AAAtC,CAAD,KAC5B,oBAAC,eAAD;AACE,EAAA,mBAAmB,EAAED,mBADvB;AAEE,EAAA,WAAW,EAAED,WAFf;AAGE,EAAA,IAAI,EAAE,QAHR;AAIE,EAAA,YAAY,EAAE;AAJhB,GAKME,KALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADK;AAUP,OAAO,MAAM2B,qBAAqB,GAAG,CAAC;AAAC7B,EAAAA,WAAD;AAAcC,EAAAA,mBAAd;AAAmC,KAAGC;AAAtC,CAAD,KACnC,oBAAC,eAAD;AACE,EAAA,mBAAmB,EAAED,mBADvB;AAEE,EAAA,WAAW,EAAED,WAFf;AAGE,EAAA,IAAI,EAAE,uBAHR;AAIE,EAAA,YAAY,EAAE;AAJhB,GAKME,KALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADK;AAUP,OAAO,MAAM4B,gBAAgB,GAAG,CAAC;AAAC9B,EAAAA,WAAD;AAAcC,EAAAA,mBAAd;AAAmC,KAAGC;AAAtC,CAAD,KAC9B,oBAAC,eAAD;AACE,EAAA,mBAAmB,EAAED,mBADvB;AAEE,EAAA,WAAW,EAAED,WAFf;AAGE,EAAA,IAAI,EAAE,UAHR;AAIE,EAAA,YAAY,EAAE;AAJhB,GAKME,KALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADK;;AAWP,MAAM6B,eAAe,GAAG,CAAC;AAAC/B,EAAAA,WAAD;AAAcC,EAAAA,mBAAd;AACEG,EAAAA,IADF;AAEEC,EAAAA,YAFF;AAGE,KAAGH;AAHL,CAAD,KAGiB;AAEvC,QAAMQ,YAAY,GAAGC,KAAK,IAAI;AAC5BX,IAAAA,WAAW,CAACK,YAAD,CAAX,GAA4BM,KAAK,CAACC,MAAN,CAAaoB,OAAzC;AACA/B,IAAAA,mBAAmB,CAAC;AAClBa,MAAAA,IAAI,EAAE,cADY;AAElBC,MAAAA,QAAQ,EAAE,EAAE,GAAGf;AAAL;AAFQ,KAAD,CAAnB;AAID,GAND;;AAQA,QAAMiC,eAAe,GAAG,oBAAC,MAAD;AACtB,IAAA,OAAO,EAAEjC,WAAW,CAACK,YAAD,CADE;AAEtB,IAAA,KAAK,EAAC,SAFgB;AAGtB,IAAA,QAAQ,EAAEK,YAHY;AAItB,IAAA,IAAI,EAAEL,YAJgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAxB;AAQA,SACE,oBAAC,gBAAD;AACE,IAAA,OAAO,EAAE4B,eADX;AAEE,IAAA,KAAK,EAAE7B;AAFT,KAGMF,KAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAOD,CA5BD,C,CA+BA;;;AACA,MAAMgC,eAAe,GAAG,CAAC;AACOlC,EAAAA,WADP;AAEOC,EAAAA,mBAFP;AAGOG,EAAAA,IAHP;AAIOC,EAAAA,YAJP;AAKO,KAAGH;AALV,CAAD,KAMY;AAClC,SAAO,oBAAC,YAAD;AACL,IAAA,WAAW,EAAEF,WADR;AAEL,IAAA,mBAAmB,EAAEC,mBAFhB;AAGL,IAAA,IAAI,EAAEG,IAHD;AAIL,IAAA,YAAY,EAAEC;AAJT,KAKDH,KALC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AAOD,CAdD;;AAgBA,OAAO,MAAMiC,WAAW,GAAG,CAAC;AAACnC,EAAAA,WAAD;AAAcC,EAAAA,mBAAd;AAAmC,KAAGC;AAAtC,CAAD,KACzB,oBAAC,eAAD;AACE,EAAA,WAAW,EAAEF,WADf;AAEE,EAAA,mBAAmB,EAAEC,mBAFvB;AAGE,EAAA,IAAI,EAAE,SAHR;AAIE,EAAA,YAAY,EAAE;AAJhB,GAKMC,KALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADK;AAUP,OAAO,MAAMkC,WAAW,GAAG,CAAC;AAACpC,EAAAA,WAAD;AAAcC,EAAAA,mBAAd;AAAmC,KAAGC;AAAtC,CAAD,KACzB,oBAAC,eAAD;AACE,EAAA,WAAW,EAAEF,WADf;AAEE,EAAA,mBAAmB,EAAEC,mBAFvB;AAGE,EAAA,IAAI,EAAE,SAHR;AAIE,EAAA,YAAY,EAAE;AAJhB,GAKMC,KALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADK;AAUP,OAAO,MAAMmC,YAAY,GAAG,CAAC;AAACrC,EAAAA,WAAD;AAAcC,EAAAA,mBAAd;AAAmC,KAAGC;AAAtC,CAAD,KAC1B,oBAAC,eAAD;AACE,EAAA,WAAW,EAAEF,WADf;AAEE,EAAA,mBAAmB,EAAEC,mBAFvB;AAGE,EAAA,IAAI,EAAE,WAHR;AAIE,EAAA,YAAY,EAAE;AAJhB,GAKMC,KALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADK;AAUP,OAAO,MAAMoC,eAAe,GAAG,CAAC;AAACtC,EAAAA,WAAD;AAAcC,EAAAA,mBAAd;AAAmC,KAAGC;AAAtC,CAAD,KAC7B,oBAAC,YAAD;AACE,EAAA,SAAS,MADX;AAEE,EAAA,WAAW,EAAEF,WAFf;AAGE,EAAA,mBAAmB,EAAEC,mBAHvB;AAIE,EAAA,IAAI,EAAE,UAJR;AAKE,EAAA,YAAY,EAAE;AALhB,GAMMC,KANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADK;AAWP,OAAO,MAAMqC,mBAAmB,GAAG,CAAC;AAACvC,EAAAA,WAAD;AAAcC,EAAAA,mBAAd;AAAmC,KAAGC;AAAtC,CAAD,KACjC,oBAAC,YAAD;AACE,EAAA,WAAW,EAAEF,WADf;AAEE,EAAA,mBAAmB,EAAEC,mBAFvB;AAGE,EAAA,IAAI,EAAE,aAHR;AAIE,EAAA,YAAY,EAAE;AAJhB,GAKMC,KALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADK;AAUP,OAAO,MAAMsC,wBAAwB,GAAG,CAAC;AAACxC,EAAAA,WAAD;AAAcC,EAAAA,mBAAd;AAAmC,KAAGC;AAAtC,CAAD,KACtC,oBAAC,YAAD;AACE,EAAA,WAAW,EAAEF,WADf;AAEE,EAAA,mBAAmB,EAAEC,mBAFvB;AAGE,EAAA,IAAI,EAAE,eAHR;AAIE,EAAA,YAAY,EAAE;AAJhB,GAKMC,KALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADK;AAaP,OAAO,MAAMuC,YAAY,GAAG,CAAC;AAACzC,EAAAA,WAAD;AAAcC,EAAAA,mBAAd;AAAmC,KAAGC;AAAtC,CAAD,KAC1B,oBAAC,YAAD;AACE,EAAA,WAAW,EAAEF,WADf;AAEE,EAAA,mBAAmB,EAAEC,mBAFvB;AAGE,EAAA,IAAI,EAAE,MAHR;AAIE,EAAA,YAAY,EAAE;AAJhB,GAKMC,KALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADK;AAUP,OAAO,MAAMwC,iBAAiB,GAAG,CAAC;AAAC1C,EAAAA,WAAD;AAAcC,EAAAA,mBAAd;AAAmC,KAAGC;AAAtC,CAAD,KAC/B,oBAAC,eAAD;AACE,EAAA,WAAW,EAAEF,WADf;AAEE,EAAA,mBAAmB,EAAEC,mBAFvB;AAGE,EAAA,IAAI,EAAE,YAHR;AAIE,EAAA,YAAY,EAAE;AAJhB,GAKMC,KALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADK;AAUP,OAAO,MAAMyC,yBAAyB,GAAG,CAAC;AAAC3C,EAAAA,WAAD;AAAcC,EAAAA,mBAAd;AAAmC,KAAGC;AAAtC,CAAD,KACvC,oBAAC,YAAD;AACE,EAAA,WAAW,EAAEF,WADf;AAEE,EAAA,mBAAmB,EAAEC,mBAFvB;AAGE,EAAA,IAAI,EAAE,qBAHR;AAIE,EAAA,YAAY,EAAE;AAJhB,GAKMC,KALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADK;AAUP,OAAO,MAAM0C,sBAAsB,GAAG,CAAC;AAAC5C,EAAAA,WAAD;AAAcC,EAAAA,mBAAd;AAAmC,KAAGC;AAAtC,CAAD,KACpC,oBAAC,YAAD;AACE,EAAA,WAAW,EAAEF,WADf;AAEE,EAAA,mBAAmB,EAAEC,mBAFvB;AAGE,EAAA,IAAI,EAAE,kBAHR;AAIE,EAAA,YAAY,EAAE;AAJhB,GAKMC,KALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADK;AASP,OAAO,MAAM2C,yBAAyB,GAAG,CAAC;AAAC7C,EAAAA,WAAD;AAAcC,EAAAA,mBAAd;AAAmC,KAAGC;AAAtC,CAAD,KACvC,oBAAC,eAAD;AACE,EAAA,WAAW,EAAEF,WADf;AAEE,EAAA,mBAAmB,EAAEC,mBAFvB;AAGE,EAAA,IAAI,EAAE,8BAHR;AAIE,EAAA,YAAY,EAAE;AAJhB,GAKMC,KALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADK;AASP,OAAO,MAAM4C,qBAAqB,GAAG,CAAC;AAAC9C,EAAAA,WAAD;AAAcC,EAAAA,mBAAd;AAAmC,KAAGC;AAAtC,CAAD,KACnC,oBAAC,eAAD;AACE,EAAA,WAAW,EAAEF,WADf;AAEE,EAAA,mBAAmB,EAAEC,mBAFvB;AAGE,EAAA,IAAI,EAAE,8BAHR;AAIE,EAAA,YAAY,EAAE;AAJhB,GAKMC,KALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADK;AAUP,OAAO,MAAM6C,iBAAiB,GAAG,CAAC;AAAC/C,EAAAA,WAAD;AAAcC,EAAAA,mBAAd;AAAmC,KAAGC;AAAtC,CAAD,KAC/B,oBAAC,eAAD;AACE,EAAA,WAAW,EAAEF,WADf;AAEE,EAAA,mBAAmB,EAAEC,mBAFvB;AAGE,EAAA,IAAI,EAAE,YAHR;AAIE,EAAA,YAAY,EAAE;AAJhB,GAKMC,KALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADK;AAUP,OAAO,MAAM8C,eAAe,GAAG,CAAC;AAAChD,EAAAA,WAAD;AAAcC,EAAAA,mBAAd;AAAmC,KAAGC;AAAtC,CAAD,KAC7B,oBAAC,eAAD;AACE,EAAA,WAAW,EAAEF,WADf;AAEE,EAAA,mBAAmB,EAAEC,mBAFvB;AAGE,EAAA,IAAI,EAAE,UAHR;AAIE,EAAA,YAAY,EAAE;AAJhB,GAKMC,KALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADK;AAUP,OAAO,MAAM+C,iBAAiB,GAAG,CAAC;AAACjD,EAAAA,WAAD;AAAcC,EAAAA,mBAAd;AAAmC,KAAGC;AAAtC,CAAD,KAC/B,oBAAC,eAAD;AACE,EAAA,WAAW,EAAEF,WADf;AAEE,EAAA,mBAAmB,EAAEC,mBAFvB;AAGE,EAAA,IAAI,EAAE,kBAHR;AAIE,EAAA,YAAY,EAAE;AAJhB,GAKMC,KALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADK;AAUP,OAAO,MAAMgD,kBAAkB,GAAG,CAAC;AAAClD,EAAAA,WAAD;AAAcC,EAAAA,mBAAd;AAAmC,KAAGC;AAAtC,CAAD,KAChC,oBAAC,YAAD;AACE,EAAA,WAAW,EAAEF,WADf;AAEE,EAAA,mBAAmB,EAAEC,mBAFvB;AAGE,EAAA,IAAI,EAAE,qBAHR;AAIE,EAAA,YAAY,EAAE;AAJhB,GAKMC,KALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADK;AASP,OAAO,MAAMiD,oBAAoB,GAAG,CAAC;AAACnD,EAAAA,WAAD;AAAcC,EAAAA,mBAAd;AAAmC,KAAGC;AAAtC,CAAD,KAClC,oBAAC,YAAD;AACE,EAAA,WAAW,EAAEF,WADf;AAEE,EAAA,mBAAmB,EAAEC,mBAFvB;AAGE,EAAA,IAAI,EAAE,wBAHR;AAIE,EAAA,YAAY,EAAE;AAJhB,GAKMC,KALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADK;AAUP,OAAO,MAAMkD,kBAAkB,GAAG,CAAC;AAACpD,EAAAA,WAAD;AAAcC,EAAAA,mBAAd;AAAmC,KAAGC;AAAtC,CAAD,KAChC,oBAAC,YAAD;AACE,EAAA,WAAW,EAAEF,WADf;AAEE,EAAA,mBAAmB,EAAEC,mBAFvB;AAGE,EAAA,IAAI,EAAE,aAHR;AAIE,EAAA,YAAY,EAAE;AAJhB,GAKMC,KALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADK;AAUP,OAAO,MAAMmD,aAAa,GAAG,CAAC;AAACrD,EAAAA,WAAD;AAAcC,EAAAA,mBAAd;AAAmC,KAAGC;AAAtC,CAAD,KAC3B,oBAAC,YAAD;AACE,EAAA,WAAW,EAAEF,WADf;AAEE,EAAA,mBAAmB,EAAEC,mBAFvB;AAGE,EAAA,IAAI,EAAE,OAHR;AAIE,EAAA,YAAY,EAAE;AAJhB,GAKMC,KALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADK;AAUP,OAAO,MAAMoD,aAAa,GAAG,CAAC;AAACtD,EAAAA,WAAD;AAAcC,EAAAA,mBAAd;AAAmC,KAAGC;AAAtC,CAAD,KAC3B,oBAAC,eAAD;AACE,EAAA,WAAW,EAAEF,WADf;AAEE,EAAA,mBAAmB,EAAEC,mBAFvB;AAGE,EAAA,IAAI,EAAE,OAHR;AAIE,EAAA,YAAY,EAAE;AAJhB,GAKMC,KALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADK;AASP,OAAO,MAAMqD,cAAc,GAAG,CAAC;AAACvD,EAAAA,WAAD;AAAcC,EAAAA,mBAAd;AAAmC,KAAGC;AAAtC,CAAD,KAC5B,oBAAC,eAAD;AACE,EAAA,WAAW,EAAEF,WADf;AAEE,EAAA,mBAAmB,EAAEC,mBAFvB;AAGE,EAAA,IAAI,EAAE,QAHR;AAIE,EAAA,YAAY,EAAE;AAJhB,GAKMC,KALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADK;AAWP,OAAO,MAAMsD,aAAa,GAAG,CAAC;AAACxD,EAAAA,WAAD;AAAcC,EAAAA,mBAAd;AAAmC,KAAGC;AAAtC,CAAD,KAC3B,IADK;AAIP,OAAO,MAAMuD,kBAAkB,GAAG,CAAC;AAACzD,EAAAA,WAAD;AAAcC,EAAAA,mBAAd;AAAmC,KAAGC;AAAtC,CAAD,KAChC,IADK;AAMP,OAAO,MAAMwD,oBAAoB,GAAG,CAAC;AAAC1D,EAAAA,WAAD;AAAcC,EAAAA,mBAAd;AAAmC,KAAGC;AAAtC,CAAD,KAClC,oBAAC,YAAD;AACE,EAAA,WAAW,EAAEF,WADf;AAEE,EAAA,mBAAmB,EAAEC,mBAFvB;AAGE,EAAA,IAAI,EAAE,uBAHR;AAIE,EAAA,YAAY,EAAE;AAJhB,GAKMC,KALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADK;AAUP,OAAO,MAAMyD,kBAAkB,GAAG,CAAC;AAAC3D,EAAAA,WAAD;AAAcC,EAAAA,mBAAd;AAAmC,KAAGC;AAAtC,CAAD,KAChC,oBAAC,YAAD;AACE,EAAA,WAAW,EAAEF,WADf;AAEE,EAAA,mBAAmB,EAAEC,mBAFvB;AAGE,EAAA,IAAI,EAAE,qBAHR;AAIE,EAAA,YAAY,EAAE;AAJhB,GAKMC,KALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADK;AAYP,OAAO,MAAM0D,cAAc,GAAG,CAAC;AAAC5D,EAAAA,WAAD;AAAcC,EAAAA,mBAAd;AAAmC,KAAGC;AAAtC,CAAD,KAC5B,oBAAC,eAAD;AACE,EAAA,WAAW,EAAEF,WADf;AAEE,EAAA,mBAAmB,EAAEC,mBAFvB;AAGE,EAAA,IAAI,EAAE,QAHR;AAIE,EAAA,YAAY,EAAE;AAJhB,GAKMC,KALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADK;AAUP,OAAO,MAAM2D,eAAe,GAAG,CAAC;AAAC7D,EAAAA,WAAD;AAAcC,EAAAA,mBAAd;AAAmC,KAAGC;AAAtC,CAAD,KAC7B,oBAAC,eAAD;AACE,EAAA,WAAW,EAAEF,WADf;AAEE,EAAA,mBAAmB,EAAEC,mBAFvB;AAGE,EAAA,IAAI,EAAE,SAHR;AAIE,EAAA,YAAY,EAAE;AAJhB,GAKMC,KALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADK;AAaP,OAAO,MAAM4D,aAAa,GAAG,CAAC;AAAC9D,EAAAA,WAAD;AAAcC,EAAAA,mBAAd;AAAmC,KAAGC;AAAtC,CAAD,KAC3B,oBAAC,eAAD;AACE,EAAA,WAAW,EAAEF,WADf;AAEE,EAAA,mBAAmB,EAAEC,mBAFvB;AAGE,EAAA,IAAI,EAAE,OAHR;AAIE,EAAA,YAAY,EAAE;AAJhB,GAKMC,KALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADK;AAWP;;;;AAGA,OAAO,MAAM6D,cAAc,GAAG,MAAM,IAA7B;;AAGP,MAAMC,aAAa,GAAG,CAAC;AAAChE,EAAAA,WAAD;AAAcC,EAAAA,mBAAd;AAAmCG,EAAAA,IAAnC;AAAyCC,EAAAA,YAAzC;AAAuDS,EAAAA;AAAvD,CAAD,KAAkE;AACtF,QAAMJ,YAAY,GAAGC,KAAK,IAAI;AAC5BX,IAAAA,WAAW,CAACK,YAAD,CAAX,GAA4BM,KAAK,CAACC,MAAN,CAAaC,KAAzC;AACAZ,IAAAA,mBAAmB,CAAC;AAClBa,MAAAA,IAAI,EAAE,cADY;AAElBC,MAAAA,QAAQ,EAAE,EAAE,GAAGf;AAAL;AAFQ,KAAD,CAAnB;AAID,GAND;;AASA,SAAO,oBAAC,SAAD;AACL,IAAA,SAAS,MADJ;AAEL,IAAA,QAAQ,MAFH;AAGL,IAAA,OAAO,EAAC,UAHH;AAIL,IAAA,YAAY,EAAC,KAJR;AAKL,IAAA,MAAM,EAAC,OALF;AAML,IAAA,IAAI,EAAC,MANA;AAOL,IAAA,SAAS,MAPJ;AAQL,IAAA,EAAE,EAAE,gBARC;AASL,IAAA,KAAK,EAAEA,WAAW,CAACK,YAAD,CATb;AAUL,IAAA,QAAQ,EAAEK,YAVL;AAWL,IAAA,KAAK,EAAEN,IAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAaD,CAvBD;;AAyBA,OAAO,MAAM6D,iBAAiB,GAAG,CAAC;AAACjE,EAAAA,WAAD;AAAcC,EAAAA,mBAAd;AAAmCG,EAAAA,IAAnC;AAAyCC,EAAAA;AAAzC,CAAD,KAA4D;AAC3F,QAAM,CAAC6D,YAAD,EAAeC,eAAf,IAAkClF,QAAQ,CAAC,KAAD,CAAhD;;AAEA,QAAMyB,YAAY,GAAG,CAAC0D,KAAD,EAAQzD,KAAR,KAAkB;AACrCX,IAAAA,WAAW,CAACK,YAAD,CAAX,CAA0B+D,KAA1B,IAAmCzD,KAAK,CAACC,MAAN,CAAaC,KAAhD;AACAZ,IAAAA,mBAAmB,CAAC;AAClBa,MAAAA,IAAI,EAAE,cADY;AAElBC,MAAAA,QAAQ,EAAE,EAAE,GAAGf;AAAL;AAFQ,KAAD,CAAnB;AAID,GAND;;AAQA,QAAMqE,oBAAoB,GAAG1D,KAAK,IAAI;AACpCX,IAAAA,WAAW,CAACK,YAAD,CAAX,GAA4B,CAACL,WAAW,CAACK,YAAD,CAAZ,EAA4B,EAA5B,CAA5B;AACAJ,IAAAA,mBAAmB,CAAC;AAClBa,MAAAA,IAAI,EAAE,cADY;AAElBC,MAAAA,QAAQ,EAAE,EAAE,GAAGf;AAAL;AAFQ,KAAD,CAAnB;AAIAmE,IAAAA,eAAe,CAAC,IAAD,CAAf;AACD,GAPD;;AASA,QAAMG,uBAAuB,GAAG,CAACF,KAAD,EAAQzD,KAAR,KAAkB;AAChD,QAAI4D,WAAW,GAAG,CAAC,GAAGvE,WAAW,CAACK,YAAD,CAAf,CAAlB;AACAkE,IAAAA,WAAW,CAACC,MAAZ,CAAmBJ,KAAnB,EAA0B,CAA1B;AACApE,IAAAA,WAAW,CAACK,YAAD,CAAX,GAA4BkE,WAA5B;AACAtE,IAAAA,mBAAmB,CAAC;AAClBa,MAAAA,IAAI,EAAE,cADY;AAElBC,MAAAA,QAAQ,EAAE,EAAE,GAAGf;AAAL;AAFQ,KAAD,CAAnB;AAID,GARD;;AAUA,QAAMyE,cAAc,GAAG,MAAMzE,WAAW,CAACK,YAAD,CAAX,CAA0BqE,GAA1B,CAA8B,CAACC,MAAD,EAASP,KAAT,KACzD,oBAAC,SAAD;AACE,IAAA,SAAS,EAAEF,YAAY,GAAGE,KAAK,KAAKpE,WAAW,CAACK,YAAD,CAAX,CAA0BuE,MAA1B,GAAmC,CAAhD,GAAoD,KAD7E;AAEE,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAFT;AAGE,IAAA,WAAW,EAAEzE,IAHf;AAIE,IAAA,IAAI,EAAC,MAJP;AAKE,IAAA,SAAS,MALX;AAME,IAAA,KAAK,EAAEuE,MANT;AAOE,IAAA,QAAQ,EAAEG,CAAC,IAAIpE,YAAY,CAAC0D,KAAD,EAAQU,CAAR,CAP7B;AAQE,IAAA,UAAU,EAAEC,aAAa,CAACX,KAAD,CAR3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD2B,CAA7B;;AAaA,QAAMW,aAAa,GAAIX,KAAD,KAAY;AAChCY,IAAAA,YAAY,EACV,oBAAC,cAAD;AAAgB,MAAA,QAAQ,EAAC,KAAzB;AAA+B,MAAA,MAAM,EAAC,GAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AACE,MAAA,IAAI,EAAC,KADP;AAEE,MAAA,OAAO,EAAEF,CAAC,IAAIR,uBAAuB,CAACF,KAAD,EAAQU,CAAR,CAFvC;AAGE,MAAA,KAAK,EAAE;AAACD,QAAAA,MAAM,EAAE,GAAT;AAAcI,QAAAA,OAAO,EAAE;AAAvB,OAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF;AAF8B,GAAZ,CAAtB;;AAcA,SAAO,0CACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK7E,IAAL,CADK,EAEL,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEiE,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACOrE,WAAW,CAACc,IAAZ,KAAqB,OAArB,GAA+B,OAA/B,GAAyC,QADhD,CAFK,EAKL,oBAAC,GAAD;AACE,IAAA,SAAS,MADX,CAEE;AAFF;AAGE,IAAA,MAAM,EAAC,OAHT;AAIE,IAAA,QAAQ,EAAC,QAJX;AAKE,IAAA,KAAK,EAAE;AAAE+D,MAAAA,MAAM,EAAE,GAAV;AAAeK,MAAAA,SAAS,EAAE;AAA1B,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGT,cAAc,EAPjB,CALK,CAAP;AAgBD,CAzEM;AA4EP,OAAO,MAAMU,mBAAmB,GAAG,CAAC;AAACnF,EAAAA,WAAD;AAAcC,EAAAA;AAAd,CAAD,KACjC,oBAAC,iBAAD;AACE,EAAA,WAAW,EAAED,WADf;AAEE,EAAA,mBAAmB,EAAEC,mBAFvB;AAGE,EAAA,IAAI,EAAC,SAHP;AAIE,EAAA,YAAY,EAAC,SAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADK;AAQP,OAAO,MAAMmF,oBAAoB,GAAG,CAAC;AAACpF,EAAAA,WAAD;AAAcC,EAAAA;AAAd,CAAD,KAClC,oBAAC,iBAAD;AACE,EAAA,WAAW,EAAED,WADf;AAEE,EAAA,mBAAmB,EAAEC,mBAFvB;AAGE,EAAA,IAAI,EAAC,QAHP;AAIE,EAAA,YAAY,EAAC,QAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADK","sourcesContent":["import React, {useContext, useState} from \"react\";\nimport Switch from \"@material-ui/core/Switch\";\nimport {DialogContent, FormControlLabel, IconButton, InputAdornment} from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport uuid from \"uuid/v1\";\nimport {KeyboardDatePicker, MuiPickersUtilsProvider} from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\n\nexport const PatternProperty = ({newQuestion, newQuestionDispatch, ...props}) => (\n  <TextProperty\n    newQuestion={newQuestion}\n    newQuestionDispatch={newQuestionDispatch}\n    name={\"Regex pattern\"}\n    propertyName={\"pattern\"}\n    {...props}\n  />\n);\n\nconst RegexpProperty = ({\n                        newQuestion,\n                        newQuestionDispatch,\n                        name,\n                        propertyName,\n                        regexp,\n                        helperText,\n                        ...props\n                      }) => {\n\n  const [valid, setValid] = useState(true);\n\n  const handleChange = event => {\n    newQuestion[propertyName] = event.target.value;\n    newQuestionDispatch({\n      type: \"SET_QUESTION\",\n      question: { ...newQuestion }\n    });\n    setValid(regexp.test(event.target.value));\n  };\n\n  return (\n    <TextField\n      key={uuid()}\n      error={!valid}\n      autoFocus\n      variant=\"outlined\"\n      margin=\"dense\"\n      type=\"text\"\n      fullWidth\n      id={\"outlined-error-helper-text\"}\n      helperText={valid ? \"\" : helperText}\n      value={newQuestion[propertyName]}\n      onChange={handleChange}\n      label={name}\n      {...props}\n    />\n  );\n};\n// todo: implement check\nexport const ColorProperty = ({newQuestion, newQuestionDispatch, ...props}) => (\n  <RegexpProperty\n    newQuestion={newQuestion}\n    newQuestionDispatch={newQuestionDispatch}\n    name={\"Color (hex value)\"}\n    propertyName={\"color\"}\n    regexp={RegExp(\"^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$\")}\n    helperText=\"Use hex colors only (e.g. #007fff, #03d)\"\n    {...props}\n  />\n);\n\n\nconst DateProperty = ({\n                        newQuestion,\n                        newQuestionDispatch,\n                        name,\n                        propertyName,\n                        ...props\n                      }) => {\n\n  const handleChange = event => {\n    newQuestion[propertyName] = event.target.value;\n    newQuestionDispatch({\n      type: \"SET_QUESTION\",\n      question: { ...newQuestion }\n    });\n  };\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <KeyboardDatePicker\n        key={uuid()}\n        disableToolbar\n        variant=\"inline\"\n        format=\"dd/MM/yyyy\"\n        margin=\"normal\"\n        id=\"date-picker-inline\"\n        label={name}\n        value={newQuestion[propertyName]}\n        onChange={handleChange}\n        KeyboardButtonProps={{\n          'aria-label': 'change date',\n        }}\n        {...props}\n      />\n    </MuiPickersUtilsProvider>\n\n  );\n};\n\nexport const DefaultDateProperty = ({newQuestion, newQuestionDispatch, ...props}) =>\n  <DateProperty\n    newQuestion={newQuestion}\n    newQuestionDispatch={newQuestionDispatch}\n    name=\"Default Date\"\n    propertyName=\"default_date\"\n    {...props}\n  />;\n\nexport const MinDateProperty = ({newQuestion, newQuestionDispatch, ...props}) =>\n  <DateProperty\n    newQuestion={newQuestion}\n    newQuestionDispatch={newQuestionDispatch}\n    name=\"Minimum Date\"\n    propertyName=\"min\"\n    {...props}\n  />;\n\nexport const MaxDateProperty = ({newQuestion, newQuestionDispatch, ...props}) =>\n  <DateProperty\n    newQuestion={newQuestion}\n    newQuestionDispatch={newQuestionDispatch}\n    name=\"Maximum Date\"\n    propertyName=\"max\"\n    {...props}\n  />;\n\n\n\nconst TextProperty = ({\n  newQuestion,\n  newQuestionDispatch,\n  name,\n  propertyName,\n  ...props\n}) => {\n\n  const handleChange = event => {\n    newQuestion[propertyName] = event.target.value;\n    newQuestionDispatch({\n      type: \"SET_QUESTION\",\n      question: { ...newQuestion }\n    });\n  };\n\n  return (\n    <TextField\n      key={uuid()}\n      autoFocus\n      variant=\"outlined\"\n      margin=\"dense\"\n      type=\"text\"\n      fullWidth\n      id={\"outlined-basic\"}\n      value={newQuestion[propertyName]}\n      onChange={handleChange}\n      label={name}\n      {...props}\n    />\n  );\n};\n\nexport const TitleProperty = ({ newQuestion, newQuestionDispatch, ...props }) => {\n  return (\n    <TextProperty\n      newQuestion={newQuestion}\n      newQuestionDispatch={newQuestionDispatch}\n      propertyName={\"title\"}\n      name={\"Title\"}\n      {...props}\n    />\n  );\n}\n\nexport const TooltipProperty = ({ newQuestion, newQuestionDispatch, ...props }) => {\n  return (\n    <TextProperty\n      newQuestion={newQuestion}\n      newQuestionDispatch={newQuestionDispatch}\n      propertyName={\"tooltip\"}\n      name={\"Tooltip text\"}\n      {...props}\n    />\n  );\n}\n\nexport const OtherwiseLabelProperty = ({ newQuestion, newQuestionDispatch, ...props }) => {\n  return (\n    <TextProperty\n      newQuestion={newQuestion}\n      newQuestionDispatch={newQuestionDispatch}\n      propertyName={\"otherwise_label\"}\n      name={\"Custom 'otherwise: ...' text\"}\n      {...props}\n    />\n  );\n\n}\nexport const OtherwiseTooltipProperty = ({ newQuestion, newQuestionDispatch, ...props }) => {\n  return (\n    <TextProperty\n      newQuestion={newQuestion}\n      newQuestionDispatch={newQuestionDispatch}\n      propertyName={\"otherwise_tooltip\"}\n      name={\"'otherwise: ...' tooltip\"}\n      {...props}\n    />\n  );\n}\n\n\n\n\nexport const HiddenProperty = ({newQuestion, newQuestionDispatch, ...props}) => (\n  <BooleanProperty\n    newQuestionDispatch={newQuestionDispatch}\n    newQuestion={newQuestion}\n    name={\"Hidden\"}\n    propertyName={\"hidden\"}\n    {...props}\n  />\n)\n\nexport const ShowOtherwiseProperty = ({newQuestion, newQuestionDispatch, ...props}) => (\n  <BooleanProperty\n    newQuestionDispatch={newQuestionDispatch}\n    newQuestion={newQuestion}\n    name={\"Show 'otherwise: ...'\"}\n    propertyName={\"show_otherwise\"}\n    {...props}\n  />\n)\n\nexport const RequiredProperty = ({newQuestion, newQuestionDispatch, ...props}) => (\n  <BooleanProperty\n    newQuestionDispatch={newQuestionDispatch}\n    newQuestion={newQuestion}\n    name={\"Required\"}\n    propertyName={\"required\"}\n    {...props}\n  />\n)\n\n\nconst BooleanProperty = ({newQuestion, newQuestionDispatch,\n                           name,\n                           propertyName,\n                           ...props}) => {\n\n  const handleChange = event => {\n    newQuestion[propertyName] = event.target.checked;\n    newQuestionDispatch({\n      type: \"SET_QUESTION\",\n      question: { ...newQuestion }\n    });\n  };\n\n  const switchComponent = <Switch\n    checked={newQuestion[propertyName]}\n    color=\"primary\"\n    onChange={handleChange}\n    name={propertyName}\n  />;\n\n\n  return (\n    <FormControlLabel\n      control={switchComponent}\n      label={name}\n      {...props}\n    />\n  );\n};\n\n\n// TODO: make it allow numbers only\nconst NumericProperty = ({\n                                newQuestion,\n                                newQuestionDispatch,\n                                name,\n                                propertyName,\n                                ...props\n                              }) => {\n  return <TextProperty\n    newQuestion={newQuestion}\n    newQuestionDispatch={newQuestionDispatch}\n    name={name}\n    propertyName={propertyName}\n    {...props}\n  />\n};\n\nexport const MinProperty = ({newQuestion, newQuestionDispatch, ...props}) => (\n  <NumericProperty\n    newQuestion={newQuestion}\n    newQuestionDispatch={newQuestionDispatch}\n    name={\"Minimum\"}\n    propertyName={\"min\"}\n    {...props}\n  />\n);\n\nexport const MaxProperty = ({newQuestion, newQuestionDispatch, ...props}) => (\n  <NumericProperty\n    newQuestion={newQuestion}\n    newQuestionDispatch={newQuestionDispatch}\n    name={\"Maximum\"}\n    propertyName={\"max\"}\n    {...props}\n  />\n);\n\nexport const StepProperty = ({newQuestion, newQuestionDispatch, ...props}) => (\n  <NumericProperty\n    newQuestion={newQuestion}\n    newQuestionDispatch={newQuestionDispatch}\n    name={\"Step size\"}\n    propertyName={\"step\"}\n    {...props}\n  />\n);\n\nexport const ContentProperty = ({newQuestion, newQuestionDispatch, ...props}) => (\n  <TextProperty\n    multiline\n    newQuestion={newQuestion}\n    newQuestionDispatch={newQuestionDispatch}\n    name={\"Raw HTML\"}\n    propertyName={\"raw\"}\n    {...props}\n  />\n);\n\nexport const PlaceholderProperty = ({newQuestion, newQuestionDispatch, ...props}) => (\n  <TextProperty\n    newQuestion={newQuestion}\n    newQuestionDispatch={newQuestionDispatch}\n    name={\"Placeholder\"}\n    propertyName={\"placeholder\"}\n    {...props}\n  />\n);\n\nexport const DefaultTextValueProperty = ({newQuestion, newQuestionDispatch, ...props}) => (\n  <TextProperty\n    newQuestion={newQuestion}\n    newQuestionDispatch={newQuestionDispatch}\n    name={\"Default value\"}\n    propertyName={\"default_value\"}\n    {...props}\n  />\n);\n\n\n\n\nexport const HintProperty = ({newQuestion, newQuestionDispatch, ...props}) => (\n  <TextProperty\n    newQuestion={newQuestion}\n    newQuestionDispatch={newQuestionDispatch}\n    name={\"Hint\"}\n    propertyName={\"hint\"}\n    {...props}\n  />\n);\n\nexport const MaxLengthProperty = ({newQuestion, newQuestionDispatch, ...props}) => (\n  <NumericProperty\n    newQuestion={newQuestion}\n    newQuestionDispatch={newQuestionDispatch}\n    name={\"Max length\"}\n    propertyName={\"max_length\"}\n    {...props}\n  />\n);\n\nexport const RemoveButtonLabelProperty = ({newQuestion, newQuestionDispatch, ...props}) => (\n  <TextProperty\n    newQuestion={newQuestion}\n    newQuestionDispatch={newQuestionDispatch}\n    name={\"Remove-button label\"}\n    propertyName={\"remove_button_label\"}\n    {...props}\n  />\n);\n\nexport const AddButtonLabelProperty = ({newQuestion, newQuestionDispatch, ...props}) => (\n  <TextProperty\n    newQuestion={newQuestion}\n    newQuestionDispatch={newQuestionDispatch}\n    name={\"Add-button label\"}\n    propertyName={\"add_button_label\"}\n    {...props}\n  />\n);\nexport const DefaultExpansionsProperty = ({newQuestion, newQuestionDispatch, ...props}) => (\n  <NumericProperty\n    newQuestion={newQuestion}\n    newQuestionDispatch={newQuestionDispatch}\n    name={\"Default amount of expansions\"}\n    propertyName={\"default_expansions\"}\n    {...props}\n  />\n);\nexport const MaxExpansionsProperty = ({newQuestion, newQuestionDispatch, ...props}) => (\n  <NumericProperty\n    newQuestion={newQuestion}\n    newQuestionDispatch={newQuestionDispatch}\n    name={\"Default amount of expansions\"}\n    propertyName={\"max_expansions\"}\n    {...props}\n  />\n);\n\nexport const HoursFromProperty = ({newQuestion, newQuestionDispatch, ...props}) => (\n  <NumericProperty\n    newQuestion={newQuestion}\n    newQuestionDispatch={newQuestionDispatch}\n    name={\"Hours from\"}\n    propertyName={\"hours_from\"}\n    {...props}\n  />\n);\n\nexport const HoursToProperty = ({newQuestion, newQuestionDispatch, ...props}) => (\n  <NumericProperty\n    newQuestion={newQuestion}\n    newQuestionDispatch={newQuestionDispatch}\n    name={\"Hours to\"}\n    propertyName={\"hours_to\"}\n    {...props}\n  />\n);\n\nexport const HoursStepProperty = ({newQuestion, newQuestionDispatch, ...props}) => (\n  <NumericProperty\n    newQuestion={newQuestion}\n    newQuestionDispatch={newQuestionDispatch}\n    name={\"Hours step count\"}\n    propertyName={\"hours_step\"}\n    {...props}\n  />\n);\n\nexport const HoursLabelProperty = ({newQuestion, newQuestionDispatch, ...props}) => (\n  <TextProperty\n    newQuestion={newQuestion}\n    newQuestionDispatch={newQuestionDispatch}\n    name={\"Custom 'hours' text\"}\n    propertyName={\"hours_label\"}\n    {...props}\n  />\n);\nexport const MinutesLabelProperty = ({newQuestion, newQuestionDispatch, ...props}) => (\n  <TextProperty\n    newQuestion={newQuestion}\n    newQuestionDispatch={newQuestionDispatch}\n    name={\"Custom 'minutes' label\"}\n    propertyName={\"minutes_label\"}\n    {...props}\n  />\n);\n\nexport const ButtonTextProperty = ({newQuestion, newQuestionDispatch, ...props}) => (\n  <TextProperty\n    newQuestion={newQuestion}\n    newQuestionDispatch={newQuestionDispatch}\n    name={\"Button text\"}\n    propertyName={\"button_text\"}\n    {...props}\n  />\n);\n\nexport const LabelProperty = ({newQuestion, newQuestionDispatch, ...props}) => (\n  <TextProperty\n    newQuestion={newQuestion}\n    newQuestionDispatch={newQuestionDispatch}\n    name={\"Label\"}\n    propertyName={\"label\"}\n    {...props}\n  />\n);\n\nexport const WidthProperty = ({newQuestion, newQuestionDispatch, ...props}) => (\n  <NumericProperty\n    newQuestion={newQuestion}\n    newQuestionDispatch={newQuestionDispatch}\n    name={\"Width\"}\n    propertyName={\"width\"}\n    {...props}\n  />\n);\nexport const HeightProperty = ({newQuestion, newQuestionDispatch, ...props}) => (\n  <NumericProperty\n    newQuestion={newQuestion}\n    newQuestionDispatch={newQuestionDispatch}\n    name={\"Height\"}\n    propertyName={\"height\"}\n    {...props}\n  />\n);\n\n\nexport const ImageProperty = ({newQuestion, newQuestionDispatch, ...props}) => (\n  null\n);\n\nexport const DataMethodProperty = ({newQuestion, newQuestionDispatch, ...props}) => (\n  null\n);\n\n\n\nexport const SectionStartProperty = ({newQuestion, newQuestionDispatch, ...props}) => (\n  <TextProperty\n    newQuestion={newQuestion}\n    newQuestionDispatch={newQuestionDispatch}\n    name={\"Start section with...\"}\n    propertyName={\"section_start\"}\n    {...props}\n  />\n);\n\nexport const SectionEndProperty = ({newQuestion, newQuestionDispatch, ...props}) => (\n  <TextProperty\n    newQuestion={newQuestion}\n    newQuestionDispatch={newQuestionDispatch}\n    name={\"End section with...\"}\n    propertyName={\"section_end\"}\n    {...props}\n  />\n);\n\n\n\nexport const RadiusProperty = ({newQuestion, newQuestionDispatch, ...props}) => (\n  <NumericProperty\n    newQuestion={newQuestion}\n    newQuestionDispatch={newQuestionDispatch}\n    name={\"Radius\"}\n    propertyName={\"radius\"}\n    {...props}\n  />\n);\n\nexport const DensityProperty = ({newQuestion, newQuestionDispatch, ...props}) => (\n  <NumericProperty\n    newQuestion={newQuestion}\n    newQuestionDispatch={newQuestionDispatch}\n    name={\"Density\"}\n    propertyName={\"density\"}\n    {...props}\n  />\n);\n\n\n\n\nexport const TodayProperty = ({newQuestion, newQuestionDispatch, ...props}) => (\n  <BooleanProperty\n    newQuestion={newQuestion}\n    newQuestionDispatch={newQuestionDispatch}\n    name={\"Today\"}\n    propertyName={\"today\"}\n    {...props}\n  />\n);\n\n\n/*\n* This will use the ArrayProperty component.\n* */\nexport const LabelsProperty = () => null;\n\n\nconst ArrayProperty = ({newQuestion, newQuestionDispatch, name, propertyName, type}) => {\n  const handleChange = event => {\n    newQuestion[propertyName] = event.target.value;\n    newQuestionDispatch({\n      type: \"SET_QUESTION\",\n      question: { ...newQuestion}\n    });\n  };\n\n\n  return <TextField\n    autoFocus\n    required\n    variant=\"outlined\"\n    autoComplete=\"off\"\n    margin=\"dense\"\n    type=\"text\"\n    fullWidth\n    id={\"outlined-basic\"}\n    value={newQuestion[propertyName]}\n    onChange={handleChange}\n    label={name}\n  />\n};\n\nexport const TextArrayProperty = ({newQuestion, newQuestionDispatch, name, propertyName}) => {\n  const [elementAdded, setElementAdded] = useState(false);\n\n  const handleChange = (index, event) => {\n    newQuestion[propertyName][index] = event.target.value;\n    newQuestionDispatch({\n      type: \"SET_QUESTION\",\n      question: { ...newQuestion}\n    });\n  };\n\n  const handleAddOptionClick = event => {\n    newQuestion[propertyName] = [newQuestion[propertyName], \"\"];\n    newQuestionDispatch({\n      type: \"SET_QUESTION\",\n      question: { ...newQuestion}\n    });\n    setElementAdded(true);\n  }\n\n  const handleRemoveOptionClick = (index, event) => {\n    let newElements = [...newQuestion[propertyName]];\n    newElements.splice(index, 1);\n    newQuestion[propertyName] = newElements;\n    newQuestionDispatch({\n      type: \"SET_QUESTION\",\n      question: { ...newQuestion}\n    });\n  };\n\n  const renderElements = () => newQuestion[propertyName].map((option, index) => (\n    <TextField\n      autoFocus={elementAdded ? index === newQuestion[propertyName].length - 1 : false}\n      style={{ margin: \"0.2em 0\" }}\n      placeholder={name}\n      type=\"text\"\n      fullWidth\n      value={option}\n      onChange={e => handleChange(index, e)}\n      InputProps={getInputProps(index)}\n    />\n  ))\n\n  const getInputProps = (index) => ({\n    endAdornment: (\n      <InputAdornment position=\"end\" margin=\"0\">\n        <IconButton\n          edge=\"end\"\n          onClick={e => handleRemoveOptionClick(index, e)}\n          style={{margin: \"0\", padding: \"0\"}}\n        >\n          <DeleteIcon/>\n        </IconButton>\n      </InputAdornment>\n    )\n  });\n\n  return <>\n    <h5>{name}</h5>\n    <Button onClick={handleAddOptionClick}>\n      add {newQuestion.type === \"range\" ? \"label\" : \"option\"}\n    </Button>\n    <Box\n      fullWidth\n      // height=\"200px\"\n      height=\"200px\"\n      overflow=\"scroll\"\n      style={{ margin: \"0\", overflowX: \"hidden\" }}\n    >\n      {renderElements()}\n    </Box>\n  </>\n\n}\n\n\nexport const TextOptionsProperty = ({newQuestion, newQuestionDispatch}) =>\n  <TextArrayProperty\n    newQuestion={newQuestion}\n    newQuestionDispatch={newQuestionDispatch}\n    name=\"Options\"\n    propertyName=\"options\"\n  />\n\nexport const LabelOptionsProperty = ({newQuestion, newQuestionDispatch}) =>\n  <TextArrayProperty\n    newQuestion={newQuestion}\n    newQuestionDispatch={newQuestionDispatch}\n    name=\"Labels\"\n    propertyName=\"labels\"\n  />\n\n"]},"metadata":{},"sourceType":"module"}