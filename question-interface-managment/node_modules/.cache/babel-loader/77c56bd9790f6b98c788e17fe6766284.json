{"ast":null,"code":"var _jsxFileName = \"/Users/palp/now/QMI/question-interface-managment/src/components/previews/RadioCheckboxPreview.js\";\nimport React, { useContext } from \"react\";\nimport { Checkbox, Grid, Radio, Typography } from \"@material-ui/core\";\nimport { SettingsContext } from \"../../contexts/SettingsContext\";\n\nconst RadioCheckboxPreview = ({\n  question\n}) => {\n  const {\n    settings\n  } = useContext(SettingsContext);\n  return React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    style: {\n      background: settings.showGridAreas ? \"pink\" : \"transparent\",\n      opacity: settings.showGridAreas ? \"0.8\" : \"1.0\"\n    },\n    spacing: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, question.options.map(option => React.createElement(Grid, {\n    item: true,\n    xs: true,\n    key: option,\n    style: {\n      background: settings.showGridAreas ? \"yellow\" : \"transparent\",\n      opacity: settings.showGridAreas ? \"0.8\" : \"1.0\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"flex-start\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    style: {\n      textAlign: \"center\",\n      background: settings.showGridAreas ? \"grey\" : \"transparent\",\n      opacity: settings.showGridAreas ? \"0.8\" : \"1.0\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, question.type === \"checkbox\" ? React.createElement(Checkbox, {\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }) : React.createElement(Radio, {\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 9,\n    style: {\n      wordWrap: \"break-word\",\n      textAlign: \"left\",\n      background: settings.showGridAreas ? \"mediumpurple\" : \"transparent\",\n      opacity: settings.showGridAreas ? \"0.8\" : \"1.0\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"body1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, typeof option === \"string\" ? option : option.title))))));\n};\n\nexport default RadioCheckboxPreview;","map":{"version":3,"sources":["/Users/palp/now/QMI/question-interface-managment/src/components/previews/RadioCheckboxPreview.js"],"names":["React","useContext","Checkbox","Grid","Radio","Typography","SettingsContext","RadioCheckboxPreview","question","settings","background","showGridAreas","opacity","options","map","option","textAlign","type","wordWrap","title"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,SAAQC,QAAR,EAAkBC,IAAlB,EAAwBC,KAAxB,EAA+BC,UAA/B,QAAgD,mBAAhD;AACA,SAAQC,eAAR,QAA8B,gCAA9B;;AAEA,MAAMC,oBAAoB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC3C,QAAM;AAAEC,IAAAA;AAAF,MAAeR,UAAU,CAACK,eAAD,CAA/B;AACA,SACI,oBAAC,IAAD;AACI,IAAA,SAAS,MADb;AAEI,IAAA,SAAS,EAAC,QAFd;AAGI,IAAA,KAAK,EAAE;AACHI,MAAAA,UAAU,EAAED,QAAQ,CAACE,aAAT,GAAyB,MAAzB,GAAkC,aAD3C;AAEHC,MAAAA,OAAO,EAAEH,QAAQ,CAACE,aAAT,GAAyB,KAAzB,GAAiC;AAFvC,KAHX;AAOI,IAAA,OAAO,EAAE,CAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASKH,QAAQ,CAACK,OAAT,CAAiBC,GAAjB,CAAqBC,MAAM,IACxB,oBAAC,IAAD;AACI,IAAA,IAAI,MADR;AAEI,IAAA,EAAE,MAFN;AAGI,IAAA,GAAG,EAAEA,MAHT;AAII,IAAA,KAAK,EAAE;AACHL,MAAAA,UAAU,EAAED,QAAQ,CAACE,aAAT,GAAyB,QAAzB,GAAoC,aAD7C;AAEHC,MAAAA,OAAO,EAAEH,QAAQ,CAACE,aAAT,GAAyB,KAAzB,GAAiC;AAFvC,KAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASI,oBAAC,IAAD;AACI,IAAA,SAAS,MADb;AAEI,IAAA,SAAS,EAAC,KAFd;AAGI,IAAA,OAAO,EAAC,YAHZ;AAII,IAAA,UAAU,EAAC,QAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMI,oBAAC,IAAD;AACI,IAAA,IAAI,MADR;AAEI,IAAA,EAAE,EAAE,CAFR;AAGI,IAAA,KAAK,EAAE;AACHK,MAAAA,SAAS,EAAE,QADR;AAEHN,MAAAA,UAAU,EAAED,QAAQ,CAACE,aAAT,GAAyB,MAAzB,GAAkC,aAF3C;AAGHC,MAAAA,OAAO,EAAEH,QAAQ,CAACE,aAAT,GAAyB,KAAzB,GAAiC;AAHvC,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASKH,QAAQ,CAACS,IAAT,KAAkB,UAAlB,GAA+B,oBAAC,QAAD;AAAU,IAAA,QAAQ,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA/B,GAAuD,oBAAC,KAAD;AAAO,IAAA,QAAQ,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAT5D,CANJ,EAiBI,oBAAC,IAAD;AACI,IAAA,IAAI,MADR;AAEI,IAAA,EAAE,EAAE,CAFR;AAGI,IAAA,KAAK,EAAE;AACHC,MAAAA,QAAQ,EAAE,YADP;AAEHF,MAAAA,SAAS,EAAE,MAFR;AAGHN,MAAAA,UAAU,EAAED,QAAQ,CAACE,aAAT,GACN,cADM,GAEN,aALH;AAMHC,MAAAA,OAAO,EAAEH,QAAQ,CAACE,aAAT,GAAyB,KAAzB,GAAiC;AANvC,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6B,OAAOI,MAAP,KAAmB,QAAnB,GAA8BA,MAA9B,GAAuCA,MAAM,CAACI,KAA3E,CAZJ,CAjBJ,CATJ,CADH,CATL,CADJ;AAwDH,CA1DD;;AA4DA,eAAeZ,oBAAf","sourcesContent":["import React, {useContext} from \"react\";\nimport {Checkbox, Grid, Radio, Typography} from \"@material-ui/core\";\nimport {SettingsContext} from \"../../contexts/SettingsContext\";\n\nconst RadioCheckboxPreview = ({ question }) => {\n    const { settings } = useContext(SettingsContext);\n    return (\n        <Grid\n            container\n            direction=\"column\"\n            style={{\n                background: settings.showGridAreas ? \"pink\" : \"transparent\",\n                opacity: settings.showGridAreas ? \"0.8\" : \"1.0\"\n            }}\n            spacing={1}\n        >\n            {question.options.map(option => (\n                <Grid\n                    item\n                    xs\n                    key={option}\n                    style={{\n                        background: settings.showGridAreas ? \"yellow\" : \"transparent\",\n                        opacity: settings.showGridAreas ? \"0.8\" : \"1.0\"\n                    }}\n                >\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justify=\"flex-start\"\n                        alignItems=\"center\"\n                    >\n                        <Grid\n                            item\n                            xs={2}\n                            style={{\n                                textAlign: \"center\",\n                                background: settings.showGridAreas ? \"grey\" : \"transparent\",\n                                opacity: settings.showGridAreas ? \"0.8\" : \"1.0\"\n                            }}\n                        >\n                            {question.type === \"checkbox\" ? <Checkbox disabled /> : <Radio disabled />}\n                        </Grid>\n                        <Grid\n                            item\n                            xs={9}\n                            style={{\n                                wordWrap: \"break-word\",\n                                textAlign: \"left\",\n                                background: settings.showGridAreas\n                                    ? \"mediumpurple\"\n                                    : \"transparent\",\n                                opacity: settings.showGridAreas ? \"0.8\" : \"1.0\"\n                            }}\n                        >\n                            <Typography variant=\"body1\">{typeof(option) === \"string\" ? option : option.title}</Typography>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            ))}\n        </Grid>\n    );\n};\n\nexport default RadioCheckboxPreview;\n"]},"metadata":{},"sourceType":"module"}