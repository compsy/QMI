{"ast":null,"code":"var _jsxFileName = \"/Users/palp/now/QMI/question-interface-managment/src/components/properties/TextTemplate.js\";\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectProperty, setProperty } from \"../../features/questionProperties/questionSlice\";\nimport { TextField, FormControl, InputLabel, FilledInput } from \"@material-ui/core\";\nexport const TextProperty = ({\n  name,\n  propertyName,\n  ...props\n}) => {\n  const property = useSelector(selectProperty(propertyName));\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    dispatch(setProperty({\n      property: propertyName,\n      value: event.target.value\n    }));\n  };\n\n  return (// <TextField\n    //   key={propertyName}\n    //   fullWidth\n    //   variant=\"filled\"\n    //   type=\"text\"\n    //   id={\"outlined-basic\"}\n    //   value={property}\n    //   onChange={handleChange}\n    //   label={name}\n    //   {...props}\n    // />\n    React.createElement(FormControl, {\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      variant: \"filled\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, name), React.createElement(FilledInput, Object.assign({\n      required: true,\n      className: classes.boxy,\n      autoFocus: true,\n      autoComplete: \"off\",\n      type: \"text\",\n      id: \"outlined-basic\",\n      placeholder: type === \"range\" ? \"Enter range label here..\" : \"Enter option title here..\",\n      value: property || \"\",\n      onChange: handleChange\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    })))\n  );\n};","map":{"version":3,"sources":["/Users/palp/now/QMI/question-interface-managment/src/components/properties/TextTemplate.js"],"names":["React","useSelector","useDispatch","selectProperty","setProperty","TextField","FormControl","InputLabel","FilledInput","TextProperty","name","propertyName","props","property","dispatch","handleChange","event","value","target","classes","boxy","type"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACEC,cADF,EAEEC,WAFF,QAGO,iDAHP;AAIA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,UAAjC,EAA6CC,WAA7C,QAAgE,mBAAhE;AAEA,OAAO,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,YAAR;AAAsB,KAAGC;AAAzB,CAAD,KAAsC;AAChE,QAAMC,QAAQ,GAAGZ,WAAW,CAACE,cAAc,CAACQ,YAAD,CAAf,CAA5B;AACA,QAAMG,QAAQ,GAAGZ,WAAW,EAA5B;;AAEA,QAAMa,YAAY,GAAIC,KAAD,IAAW;AAC9BF,IAAAA,QAAQ,CACNV,WAAW,CAAC;AACVS,MAAAA,QAAQ,EAAEF,YADA;AAEVM,MAAAA,KAAK,EAAED,KAAK,CAACE,MAAN,CAAaD;AAFV,KAAD,CADL,CAAR;AAMD,GAPD;;AASA,SACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAC,WAAD;AAAa,MAAA,SAAS,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8BP,IAA9B,CADF,EAEE,oBAAC,WAAD;AACE,MAAA,QAAQ,MADV;AAEE,MAAA,SAAS,EAAES,OAAO,CAACC,IAFrB;AAGE,MAAA,SAAS,MAHX;AAIE,MAAA,YAAY,EAAC,KAJf;AAKE,MAAA,IAAI,EAAC,MALP;AAME,MAAA,EAAE,EAAE,gBANN;AAOE,MAAA,WAAW,EACTC,IAAI,KAAK,OAAT,GACI,0BADJ,GAEI,2BAVR;AAYE,MAAA,KAAK,EAAER,QAAQ,IAAI,EAZrB;AAaE,MAAA,QAAQ,EAAEE;AAbZ,OAcMH,KAdN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFF;AAZF;AAgCD,CA7CM","sourcesContent":["import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  selectProperty,\n  setProperty,\n} from \"../../features/questionProperties/questionSlice\";\nimport { TextField, FormControl, InputLabel, FilledInput } from \"@material-ui/core\";\n\nexport const TextProperty = ({ name, propertyName, ...props }) => {\n  const property = useSelector(selectProperty(propertyName));\n  const dispatch = useDispatch();\n\n  const handleChange = (event) => {\n    dispatch(\n      setProperty({\n        property: propertyName,\n        value: event.target.value,\n      })\n    );\n  };\n\n  return (\n    // <TextField\n    //   key={propertyName}\n    //   fullWidth\n    //   variant=\"filled\"\n    //   type=\"text\"\n    //   id={\"outlined-basic\"}\n    //   value={property}\n    //   onChange={handleChange}\n    //   label={name}\n    //   {...props}\n    // />\n    <FormControl fullWidth>\n      <InputLabel variant=\"filled\">{name}</InputLabel>\n      <FilledInput\n        required\n        className={classes.boxy}\n        autoFocus\n        autoComplete=\"off\"\n        type=\"text\"\n        id={\"outlined-basic\"}\n        placeholder={\n          type === \"range\"\n            ? \"Enter range label here..\"\n            : \"Enter option title here..\"\n        }\n        value={property || \"\"}\n        onChange={handleChange}\n        {...props}\n      />\n    </FormControl>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}