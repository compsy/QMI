{"ast":null,"code":"const postprocessMap = {\n  checkbox: postprocessCheckbox,\n  radio: postprocessCheckbox\n};\nexport const postprocessQuestion = question => {\n  return postprocessMap[question.type](question);\n};\n\nconst postprocessCheckbox = question => {\n  // const preprocessedOptions = () => {\n  //   return question.options;\n  // };\n  const processedOptions = () => {\n    return question.options.map(q => {\n      return { ...q,\n        numeric_value: undefined\n      };\n    });\n  }; // prettier-ignore\n\n\n  return {\n    // ...CLEAN_SUPER_QUESTION,\n    id: question.id,\n    type: question.type,\n    // required\n    title: question.title !== undefined ? question.title : \"untitled checkbox\",\n    options: question.options !== undefined ? processedOptions : [],\n    // optional\n    tooltip: question.tooltip !== undefined ? question.tooltip : undefined,\n    required: question.required !== undefined ? question.required : undefined,\n    hidden: question.hidden !== undefined ? question.hidden : undefined,\n    section_start: question.section_start !== undefined ? question.section_start : undefined,\n    section_end: question.section_end !== undefined ? question.section_end : undefined,\n    show_otherwise: question.show_otherwise !== undefined ? question.show_otherwise : undefined,\n    otherwise_label: question.otherwise_label !== undefined ? question.otherwise_label : undefined,\n    otherwise_tooltip: question.otherwise_tooltip !== undefined ? question.otherwise_tooltip : undefined\n  };\n};","map":{"version":3,"sources":["/Users/palp/now/QMI/question-interface-managment/src/components/properties/utils.js"],"names":["postprocessMap","checkbox","postprocessCheckbox","radio","postprocessQuestion","question","type","processedOptions","options","map","q","numeric_value","undefined","id","title","tooltip","required","hidden","section_start","section_end","show_otherwise","otherwise_label","otherwise_tooltip"],"mappings":"AAAA,MAAMA,cAAc,GAAG;AACrBC,EAAAA,QAAQ,EAAEC,mBADW;AAErBC,EAAAA,KAAK,EAAED;AAFc,CAAvB;AAKA,OAAO,MAAME,mBAAmB,GAAIC,QAAD,IAAc;AAC/C,SAAOL,cAAc,CAACK,QAAQ,CAACC,IAAV,CAAd,CAA8BD,QAA9B,CAAP;AACD,CAFM;;AAIP,MAAMH,mBAAmB,GAAIG,QAAD,IAAc;AACxC;AACA;AACA;AAEA,QAAME,gBAAgB,GAAG,MAAM;AAC7B,WAAOF,QAAQ,CAACG,OAAT,CAAiBC,GAAjB,CAAsBC,CAAD,IAAO;AACjC,aAAO,EACL,GAAGA,CADE;AAELC,QAAAA,aAAa,EAAEC;AAFV,OAAP;AAID,KALM,CAAP;AAMD,GAPD,CALwC,CAaxC;;;AACA,SAAO;AACL;AACAC,IAAAA,EAAE,EAAER,QAAQ,CAACQ,EAFR;AAGLP,IAAAA,IAAI,EAAED,QAAQ,CAACC,IAHV;AAIL;AACAQ,IAAAA,KAAK,EAAET,QAAQ,CAACS,KAAT,KAAmBF,SAAnB,GAA+BP,QAAQ,CAACS,KAAxC,GAAgD,mBALlD;AAMLN,IAAAA,OAAO,EAAEH,QAAQ,CAACG,OAAT,KAAqBI,SAArB,GAAiCL,gBAAjC,GAAoD,EANxD;AAOL;AACAQ,IAAAA,OAAO,EAAEV,QAAQ,CAACU,OAAT,KAAqBH,SAArB,GAAiCP,QAAQ,CAACU,OAA1C,GAAoDH,SARxD;AASLI,IAAAA,QAAQ,EAAEX,QAAQ,CAACW,QAAT,KAAsBJ,SAAtB,GAAkCP,QAAQ,CAACW,QAA3C,GAAsDJ,SAT3D;AAULK,IAAAA,MAAM,EAAEZ,QAAQ,CAACY,MAAT,KAAoBL,SAApB,GAAgCP,QAAQ,CAACY,MAAzC,GAAkDL,SAVrD;AAWLM,IAAAA,aAAa,EAAEb,QAAQ,CAACa,aAAT,KAA2BN,SAA3B,GAAuCP,QAAQ,CAACa,aAAhD,GAAgEN,SAX1E;AAYLO,IAAAA,WAAW,EAAEd,QAAQ,CAACc,WAAT,KAAyBP,SAAzB,GAAqCP,QAAQ,CAACc,WAA9C,GAA4DP,SAZpE;AAaLQ,IAAAA,cAAc,EAAEf,QAAQ,CAACe,cAAT,KAA4BR,SAA5B,GAAwCP,QAAQ,CAACe,cAAjD,GAAkER,SAb7E;AAcLS,IAAAA,eAAe,EAAEhB,QAAQ,CAACgB,eAAT,KAA6BT,SAA7B,GAAyCP,QAAQ,CAACgB,eAAlD,GAAoET,SAdhF;AAeLU,IAAAA,iBAAiB,EAAEjB,QAAQ,CAACiB,iBAAT,KAA+BV,SAA/B,GAA2CP,QAAQ,CAACiB,iBAApD,GAAwEV;AAftF,GAAP;AAiBD,CA/BD","sourcesContent":["const postprocessMap = {\n  checkbox: postprocessCheckbox,\n  radio: postprocessCheckbox,\n};\n\nexport const postprocessQuestion = (question) => {\n  return postprocessMap[question.type](question);\n};\n\nconst postprocessCheckbox = (question) => {\n  // const preprocessedOptions = () => {\n  //   return question.options;\n  // };\n\n  const processedOptions = () => {\n    return question.options.map((q) => {\n      return {\n        ...q,\n        numeric_value: undefined,\n      };\n    });\n  };\n  // prettier-ignore\n  return {\n    // ...CLEAN_SUPER_QUESTION,\n    id: question.id,\n    type: question.type,\n    // required\n    title: question.title !== undefined ? question.title : \"untitled checkbox\",\n    options: question.options !== undefined ? processedOptions : [],\n    // optional\n    tooltip: question.tooltip !== undefined ? question.tooltip : undefined,\n    required: question.required !== undefined ? question.required : undefined,\n    hidden: question.hidden !== undefined ? question.hidden : undefined,\n    section_start: question.section_start !== undefined ? question.section_start : undefined,\n    section_end: question.section_end !== undefined ? question.section_end : undefined,\n    show_otherwise: question.show_otherwise !== undefined ? question.show_otherwise : undefined,\n    otherwise_label: question.otherwise_label !== undefined ? question.otherwise_label : undefined,\n    otherwise_tooltip: question.otherwise_tooltip !== undefined ? question.otherwise_tooltip : undefined,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}