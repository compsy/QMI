{"ast":null,"code":"var _jsxFileName = \"/Users/palp/now/QMI/question-interface-managment/src/components/PrivateRoute.jsx\";\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => React.createElement(Route, Object.assign({}, rest, {\n  render: props => {\n    const currentUser = localStorage.getItem(\"user\");\n\n    if (!currentUser) {\n      return React.createElement(Redirect, {\n        to: {\n          pathname: \"/login\",\n          state: {\n            from: props.location\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(Component, Object.assign({}, props, rest, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }));\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}));\n\nexport default PrivateRoute;","map":{"version":3,"sources":["/Users/palp/now/QMI/question-interface-managment/src/components/PrivateRoute.jsx"],"names":["React","Route","Redirect","PrivateRoute","component","Component","rest","props","currentUser","localStorage","getItem","pathname","state","from","location"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,KADF,EAEEC,QAFF,QAGO,kBAHP;;AAKA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KACnB,oBAAC,KAAD,oBACMA,IADN;AAEE,EAAA,MAAM,EAAEC,KAAK,IAAI;AACf,UAAMC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAApB;;AACA,QAAI,CAACF,WAAL,EAAkB;AAChB,aACE,oBAAC,QAAD;AACE,QAAA,EAAE,EAAE;AAAEG,UAAAA,QAAQ,EAAE,QAAZ;AAAsBC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,IAAI,EAAEN,KAAK,CAACO;AAAd;AAA7B,SADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAKD;;AACD,WAAO,oBAAC,SAAD,oBAAeP,KAAf,EAA0BD,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD,GAZH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADF;;AAiBA,eAAeH,YAAf","sourcesContent":["import React from \"react\";\nimport {\n  Route,\n  Redirect\n} from \"react-router-dom\";\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={props => {\n      const currentUser = localStorage.getItem(\"user\");\n      if (!currentUser) {\n        return (\n          <Redirect\n            to={{ pathname: \"/login\", state: { from: props.location } }}\n          />\n        );\n      }\n      return <Component {...props} {...rest} />;\n    }}\n  />\n);\n\nexport default PrivateRoute;\n"]},"metadata":{},"sourceType":"module"}