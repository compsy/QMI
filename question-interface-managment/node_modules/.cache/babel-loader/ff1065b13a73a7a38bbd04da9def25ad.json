{"ast":null,"code":"var _jsxFileName = \"/Users/palp/now/web/10mar/src/components/CustomizedDialogs.jsx\";\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { Container, FormControl } from '@material-ui/core';\nconst questionTypes = [{\n  value: 'radio',\n  label: 'radio'\n}, {\n  value: 'checkbox',\n  label: 'checkbox'\n}];\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: 200\n    },\n    // position form in the middle\n    position: 'absolute',\n    left: '50%',\n    top: '50%',\n    transform: 'translate(-50%, -50%)' // background: 'grey'\n\n  },\n  element: {\n    margin: '10px'\n  }\n}));\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2)\n  },\n  root2: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: 200\n    }\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500]\n  }\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const {\n    children,\n    classes,\n    onClose,\n    ...other\n  } = props;\n  return React.createElement(MuiDialogTitle, Object.assign({\n    disableTypography: true,\n    className: classes.root\n  }, other, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    variant: \"h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, children), onClose ? React.createElement(IconButton, {\n    \"aria-label\": \"close\",\n    className: classes.closeButton,\n    onClick: onClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(CloseIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  })) : null);\n});\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2)\n  }\n}))(MuiDialogContent);\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1)\n  }\n}))(MuiDialogActions);\nexport default function CustomizedDialogs() {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const classes = useStyles();\n  const [type, setType] = React.useState('radio');\n\n  const handleChange = event => {\n    setType(event.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(\"title: \" + e.target.elements[\"title\"].value);\n    handleClose();\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: handleClickOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"Open dialog\"), React.createElement(Dialog, {\n    maxWidth: \"md\",\n    fullWidth: true,\n    onClose: handleClose,\n    \"aria-labelledby\": \"customized-dialog-title\",\n    open: open,\n    style: classes.dialog,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"customized-dialog-title\",\n    onClose: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"Edit question\"), React.createElement(DialogContent, {\n    dividers: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    noValidate: true,\n    autoComplete: \"off\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    className: classes.element,\n    id: \"type\",\n    select: true,\n    label: \"Type\",\n    value: type,\n    onChange: handleChange,\n    variant: \"outlined\",\n    margin: \"dense\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, questionTypes.map(option => React.createElement(MenuItem, {\n    key: option.value,\n    value: option.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, option.label)))), React.createElement(FormControl, {\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    className: classes.element,\n    id: \"title\",\n    label: \"Title\",\n    variant: \"outlined\",\n    margin: \"dense\",\n    autoComplete: \"off\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  })), React.createElement(Button, {\n    autoFocus: true,\n    onClick: handleClose,\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, \"Cancel\"), React.createElement(Button, {\n    autoFocus: true,\n    type: \"submit\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, \"Save\"))), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, React.createElement(Button, {\n    autoFocus: true,\n    onClick: handleClose,\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, \"Cancel\"), React.createElement(Button, {\n    autoFocus: true,\n    onClick: handleClose,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, \"Save\"))));\n}","map":{"version":3,"sources":["/Users/palp/now/web/10mar/src/components/CustomizedDialogs.jsx"],"names":["React","withStyles","Button","Dialog","MuiDialogTitle","MuiDialogContent","MuiDialogActions","IconButton","CloseIcon","Typography","TextField","DialogContentText","makeStyles","MenuItem","Container","FormControl","questionTypes","value","label","useStyles","theme","root","margin","spacing","width","position","left","top","transform","element","styles","padding","root2","closeButton","right","color","palette","grey","DialogTitle","props","children","classes","onClose","other","DialogContent","DialogActions","CustomizedDialogs","open","setOpen","useState","handleClickOpen","handleClose","type","setType","handleChange","event","target","handleSubmit","e","preventDefault","console","log","elements","dialog","map","option"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { Container, FormControl } from '@material-ui/core';\n\n\nconst questionTypes = [\n  {\n    value: 'radio',\n    label: 'radio',\n  },\n  {\n    value: 'checkbox',\n    label: 'checkbox',\n  },\n];\n\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: 200,\n    },\n    // position form in the middle\n    position: 'absolute', \n    left: '50%', \n    top: '50%',\n    transform: 'translate(-50%, -50%)',\n    // background: 'grey'\n  },\n  element: {\n    margin: '10px'\n  },\n\n}));\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  root2: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: 200,\n    },\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function CustomizedDialogs() {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const classes = useStyles();\n\n  const [type, setType] = React.useState('radio');\n\n  const handleChange = event => {\n    setType(event.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(\"title: \" + e.target.elements[\"title\"].value);\n    handleClose();\n  }\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Open dialog\n      </Button>\n      <Dialog\n        maxWidth=\"md\"\n        fullWidth\n        onClose={handleClose}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}\n        style={classes.dialog}\n      >\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n          Edit question\n        </DialogTitle>\n        {/* <DialogContent dividers>\n          <Typography gutterBottom>\n            Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis\n            in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\n          </Typography>\n          <Typography gutterBottom>\n            Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis\n            lacus vel augue laoreet rutrum faucibus dolor auctor.\n          </Typography>\n          <Typography gutterBottom>\n            Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel\n            scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus\n            auctor fringilla.\n          </Typography>\n        </DialogContent> */}\n        <DialogContent dividers>\n          {/* <DialogContentText>\n            To subscribe to this website, please enter your email address here. We will send updates\n            occasionally.\n          </DialogContentText> */}\n          <form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n            <div>\n              <TextField\n                className={classes.element}\n                id=\"type\"\n                select\n                label=\"Type\"\n                value={type}\n                onChange={handleChange}\n                variant=\"outlined\"\n                margin=\"dense\"\n              >\n                {questionTypes.map(option => (\n                  <MenuItem key={option.value} value={option.value}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </TextField>\n            </div>\n            <FormControl fullWidth>\n              <TextField\n                className={classes.element}\n                id=\"title\"\n                label=\"Title\"\n                variant=\"outlined\"\n                margin=\"dense\"\n                autoComplete=\"off\"\n              />\n            </FormControl>\n            <Button autoFocus onClick={handleClose} color=\"secondary\">\n              Cancel\n            </Button>\n            <Button autoFocus type=\"submit\" color=\"primary\">\n              Save\n            </Button>\n          </form>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose} color=\"secondary\">\n            Cancel\n          </Button>\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}