{"ast":null,"code":"var _jsxFileName = \"/Users/palp/now/QMI/question-interface-managment/src/contexts/QuestionnaireContext.js\";\nimport React, { createContext, useReducer } from 'react';\nimport { questionnaireReducer } from '../reducers/questionnaireReducer';\nexport const QuestionnaireContext = createContext();\n\nconst QuestionnaireContextProvider = props => {\n  const [questions, dispatch] = useReducer(questionnaireReducer, [{\n    id: 'v1',\n    type: \"radio\",\n    title: \"untitled radio\",\n    options: [\"option 1\", \"option 2\", \"option 3\", \"option 4\"]\n  }, {\n    id: 'v2',\n    type: \"checkbox\",\n    title: \"untitled checkbox\",\n    options: [\"option 1\", \"option 2\", \"option 3\", \"option 4\"]\n  }, {\n    id: 'v3',\n    type: \"range\",\n    title: \"untitled range\",\n    options: [\"option 1\", \"option 2\", \"option 3\", \"option 4\"]\n  }, {\n    id: 'v4',\n    type: \"likert\",\n    title: \"untitled likert\",\n    options: [\"option 1\", \"option 2\", \"option 3\", \"option 4\"]\n  }]);\n  return React.createElement(QuestionnaireContext.Provider, {\n    value: {\n      questions,\n      dispatch\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default QuestionnaireContextProvider;","map":{"version":3,"sources":["/Users/palp/now/QMI/question-interface-managment/src/contexts/QuestionnaireContext.js"],"names":["React","createContext","useReducer","questionnaireReducer","QuestionnaireContext","QuestionnaireContextProvider","props","questions","dispatch","id","type","title","options","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,SAASC,oBAAT,QAAqC,kCAArC;AAEA,OAAO,MAAMC,oBAAoB,GAAGH,aAAa,EAA1C;;AAEP,MAAMI,4BAA4B,GAAIC,KAAD,IAAW;AAC9C,QAAM,CAACC,SAAD,EAAYC,QAAZ,IAAwBN,UAAU,CAACC,oBAAD,EAAuB,CAC7D;AAACM,IAAAA,EAAE,EAAE,IAAL;AAAWC,IAAAA,IAAI,EAAE,OAAjB;AAA0BC,IAAAA,KAAK,EAAE,gBAAjC;AAAmDC,IAAAA,OAAO,EAAE,CAAC,UAAD,EAAa,UAAb,EAAyB,UAAzB,EAAqC,UAArC;AAA5D,GAD6D,EAE7D;AAACH,IAAAA,EAAE,EAAE,IAAL;AAAWC,IAAAA,IAAI,EAAE,UAAjB;AAA6BC,IAAAA,KAAK,EAAE,mBAApC;AAAyDC,IAAAA,OAAO,EAAE,CAAC,UAAD,EAAa,UAAb,EAAyB,UAAzB,EAAqC,UAArC;AAAlE,GAF6D,EAG7D;AAACH,IAAAA,EAAE,EAAE,IAAL;AAAWC,IAAAA,IAAI,EAAE,OAAjB;AAA0BC,IAAAA,KAAK,EAAE,gBAAjC;AAAmDC,IAAAA,OAAO,EAAE,CAAC,UAAD,EAAa,UAAb,EAAyB,UAAzB,EAAqC,UAArC;AAA5D,GAH6D,EAI7D;AAACH,IAAAA,EAAE,EAAE,IAAL;AAAWC,IAAAA,IAAI,EAAE,QAAjB;AAA2BC,IAAAA,KAAK,EAAE,iBAAlC;AAAqDC,IAAAA,OAAO,EAAE,CAAC,UAAD,EAAa,UAAb,EAAyB,UAAzB,EAAqC,UAArC;AAA9D,GAJ6D,CAAvB,CAAxC;AAMA,SACE,oBAAC,oBAAD,CAAsB,QAAtB;AAA+B,IAAA,KAAK,EAAE;AAACL,MAAAA,SAAD;AAAYC,MAAAA;AAAZ,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,KAAK,CAACO,QADT,CADF;AAKD,CAZD;;AAcA,eAAeR,4BAAf","sourcesContent":["import React, { createContext, useReducer } from 'react';\nimport { questionnaireReducer } from '../reducers/questionnaireReducer';\n\nexport const QuestionnaireContext = createContext();\n\nconst QuestionnaireContextProvider = (props) => {\n  const [questions, dispatch] = useReducer(questionnaireReducer, [\n    {id: 'v1', type: \"radio\", title: \"untitled radio\", options: [\"option 1\", \"option 2\", \"option 3\", \"option 4\"]},\n    {id: 'v2', type: \"checkbox\", title: \"untitled checkbox\", options: [\"option 1\", \"option 2\", \"option 3\", \"option 4\"]},\n    {id: 'v3', type: \"range\", title: \"untitled range\", options: [\"option 1\", \"option 2\", \"option 3\", \"option 4\"]},\n    {id: 'v4', type: \"likert\", title: \"untitled likert\", options: [\"option 1\", \"option 2\", \"option 3\", \"option 4\"]},\n  ]);\n  return (\n    <QuestionnaireContext.Provider value={{questions, dispatch}}>\n      {props.children}\n    </QuestionnaireContext.Provider>\n  );\n}\n \nexport default QuestionnaireContextProvider;"]},"metadata":{},"sourceType":"module"}