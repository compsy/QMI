{"ast":null,"code":"var _jsxFileName = \"/Users/palp/now/QMI/question-interface-managment/src/contexts/QuestionnaireContext.js\";\nimport React, { createContext, useReducer } from 'react';\nimport { questionnaireReducer } from '../reducers/questionnaireReducer';\nimport { useEffect } from 'react';\nexport const QuestionnaireContext = createContext();\n\nconst timelineReducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD_QUESTIONS\":\n      const newPresent = action.questions;\n      return {\n        past: state.past,\n        present: newPresent,\n        future: state.future\n      };\n\n    case \"ADD_TIMELINE\":\n      if (state.present !== {}) {\n        const newPast = [...state.past, state.present];\n        const newPresent = action.questions;\n        return {\n          past: newPast,\n          present: newPresent,\n          future: state.future\n        };\n      } else {\n        return state;\n      }\n\n    case \"UNDO\":\n      if (state.past.length > 0) {\n        const newPast = state.past.slice(0, state.past.length - 1);\n        const newPresent = state.past.slice(state.past.length - 1, state.past.length);\n        const newFuture = [state.present, ...state.future];\n        return {\n          past: newPast,\n          present: newPresent,\n          future: newFuture\n        };\n      } else {\n        return state;\n      }\n\n    case \"REDO\":\n      if (state.future.length > 0) {\n        const newPast = [...state.past, state.present];\n        const newPresent = state.future.slice(0, 1);\n        const newFuture = state.future.slice(1, state.future.length);\n        return {\n          past: newPast,\n          present: newPresent,\n          future: newFuture\n        };\n      } else {\n        return state;\n      }\n\n    default:\n      return state;\n  }\n};\n\nconst QuestionnaireContextProvider = props => {\n  const [questions, dispatch] = useReducer(questionnaireReducer, [{\n    id: 'v1',\n    type: \"radio\",\n    title: \"untitled radio\",\n    options: [\"option 1\", \"option 2\", \"option 3\", \"option 4\"]\n  }, {\n    id: 'v2',\n    type: \"checkbox\",\n    title: \"untitled checkbox\",\n    options: [\"option 1\", \"option 2\", \"option 3\", \"option 4\"]\n  }, {\n    id: 'v3',\n    type: \"range\",\n    title: \"untitled range\",\n    options: [\"option 1\", \"option 2\", \"option 3\", \"option 4\"]\n  }, {\n    id: 'v4',\n    type: \"likert\",\n    title: \"untitled likert\",\n    options: [\"option 1\", \"option 2\", \"option 3\", \"option 4\"]\n  }]);\n  const [timeline, dispatchTimeline] = useReducer(timelineReducer, {\n    past: [],\n    present: {},\n    future: []\n  });\n  useEffect(() => {\n    dispatchTimeline({\n      type: \"ADD_QUESTIONS\",\n      questions: questions\n    });\n  }, []);\n  useEffect(() => {\n    dispatchTimeline({\n      type: \"ADD_TIMELINE\",\n      questions: questions\n    });\n  }, [questions]);\n  return React.createElement(QuestionnaireContext.Provider, {\n    value: {\n      questions,\n      dispatch,\n      timeline,\n      dispatchTimeline\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default QuestionnaireContextProvider;","map":{"version":3,"sources":["/Users/palp/now/QMI/question-interface-managment/src/contexts/QuestionnaireContext.js"],"names":["React","createContext","useReducer","questionnaireReducer","useEffect","QuestionnaireContext","timelineReducer","state","action","type","newPresent","questions","past","present","future","newPast","length","slice","newFuture","QuestionnaireContextProvider","props","dispatch","id","title","options","timeline","dispatchTimeline","children"],"mappings":"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","sourcesContent":["import React, { createContext, useReducer } from 'react';\nimport { questionnaireReducer } from '../reducers/questionnaireReducer';\nimport { useEffect } from 'react';\n\nexport const QuestionnaireContext = createContext();\n\nconst timelineReducer = (state, action) => {\n  switch(action.type) {\n    case \"ADD_QUESTIONS\":\n      const newPresent = action.questions;\n      return {past: state.past, present: newPresent, future: state.future};\n    case \"ADD_TIMELINE\":\n      if (state.present !== {}) {\n        const newPast = [...state.past, state.present];\n        const newPresent = action.questions;\n        return {past: newPast, present: newPresent, future: state.future};\n      } else {\n        return state;\n      }\n    case \"UNDO\":\n      if (state.past.length > 0) {\n        const newPast = state.past.slice(0, state.past.length - 1);\n        const newPresent = state.past.slice(state.past.length - 1, state.past.length);\n        const newFuture = [state.present, ...state.future];\n        return {past: newPast, present: newPresent, future: newFuture};\n      } else {\n        return state;\n      }\n    case \"REDO\":\n      if (state.future.length > 0) {\n        const newPast = [...state.past, state.present];\n        const newPresent = state.future.slice(0, 1);\n        const newFuture = state.future.slice(1, state.future.length);\n        return {past: newPast, present: newPresent, future: newFuture};\n      } else {\n        return state;\n      }\n  default:\n    return state;\n  }\n}\n\nconst QuestionnaireContextProvider = (props) => {\n  const [questions, dispatch] = useReducer(questionnaireReducer, [\n    {id: 'v1', type: \"radio\", title: \"untitled radio\", options: [\"option 1\", \"option 2\", \"option 3\", \"option 4\"]},\n    {id: 'v2', type: \"checkbox\", title: \"untitled checkbox\", options: [\"option 1\", \"option 2\", \"option 3\", \"option 4\"]},\n    {id: 'v3', type: \"range\", title: \"untitled range\", options: [\"option 1\", \"option 2\", \"option 3\", \"option 4\"]},\n    {id: 'v4', type: \"likert\", title: \"untitled likert\", options: [\"option 1\", \"option 2\", \"option 3\", \"option 4\"]},\n  ]);\n  const [timeline, dispatchTimeline] = useReducer(timelineReducer, {past: [], present: {}, future: []});\n  useEffect(() => {\n    dispatchTimeline({ type: \"ADD_QUESTIONS\", questions: questions })\n  }, []);\n  useEffect(() => {\n    dispatchTimeline({ type: \"ADD_TIMELINE\", questions: questions})\n  }, [questions]);\n  return (\n    <QuestionnaireContext.Provider value={{questions, dispatch, timeline, dispatchTimeline}}>\n      {props.children}\n    </QuestionnaireContext.Provider>\n  );\n}\n \nexport default QuestionnaireContextProvider;"]},"metadata":{},"sourceType":"module"}