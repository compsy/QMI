{"ast":null,"code":"var _jsxFileName = \"/Users/palp/now/QMI/question-interface-managment/src/components/properties/TextTemplate.js\";\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectProperty, setProperty } from \"../../features/questionProperties/questionSlice\";\nimport { TextField } from \"@material-ui/core\";\nexport const TextProperty = ({\n  name,\n  propertyName,\n  ...props\n}) => {\n  const property = useSelector(selectProperty(propertyName));\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    dispatch(setProperty({\n      property: propertyName,\n      value: event.target.value\n    }));\n  };\n\n  return React.createElement(TextField, Object.assign({\n    key: propertyName,\n    fullWidth: true,\n    variant: \"filled\",\n    type: \"text\",\n    id: \"outlined-basic\",\n    value: property,\n    onChange: handleChange // label={name}\n\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }));\n  return React.createElement(FormControl, {\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    variant: \"filled\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, name), React.createElement(FilledInput, {\n    required: true,\n    className: classes.boxy,\n    autoFocus: true,\n    autoComplete: \"off\",\n    type: \"text\",\n    id: `option-${index + 1}`,\n    placeholder: type === \"range\" ? \"Enter range label here..\" : \"Enter option title here..\",\n    value: option || \"\",\n    onChange: e => handleChange(index, e),\n    endAdornment: React.createElement(InputAdornment, {\n      position: \"end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      size: \"small\",\n      onClick: handleMenuClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(MoreHorizIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })), React.createElement(Menu, {\n      id: \"simple-menu\",\n      keepMounted: true,\n      anchorEl: anchorEl,\n      open: Boolean(anchorEl),\n      onClose: handleMenuClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      button: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      variant: \"filled\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Option tooltip\"), React.createElement(FilledInput, {\n      required: true,\n      className: classes.boxy,\n      autoFocus: true,\n      autoComplete: \"off\",\n      type: \"text\",\n      id: `option-${index + 1}-tooltip`,\n      placeholder: \"Enter option tooltip text here..\",\n      value: option || \"\",\n      onChange: e => handleChange(index, e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }))), React.createElement(MenuItem, {\n      onClick: handleMenuClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"My account\"), React.createElement(MenuItem, {\n      onClick: handleMenuClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Logout\")), React.createElement(IconButton, {\n      size: \"small\",\n      onClick: () => handleRemoveOptionClick(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(DeleteIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }))),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["/Users/palp/now/QMI/question-interface-managment/src/components/properties/TextTemplate.js"],"names":["React","useSelector","useDispatch","selectProperty","setProperty","TextField","TextProperty","name","propertyName","props","property","dispatch","handleChange","event","value","target","classes","boxy","index","type","option","e","handleMenuClick","anchorEl","Boolean","handleMenuClose","handleRemoveOptionClick"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  selectProperty,\n  setProperty,\n} from \"../../features/questionProperties/questionSlice\";\nimport { TextField } from \"@material-ui/core\";\n\nexport const TextProperty = ({ name, propertyName, ...props }) => {\n  const property = useSelector(selectProperty(propertyName));\n  const dispatch = useDispatch();\n\n  const handleChange = (event) => {\n    dispatch(\n      setProperty({\n        property: propertyName,\n        value: event.target.value,\n      })\n    );\n  };\n\n  return (\n    <TextField\n      key={propertyName}\n      fullWidth\n      variant=\"filled\"\n      type=\"text\"\n      id={\"outlined-basic\"}\n      value={property}\n      onChange={handleChange}\n      // label={name}\n      {...props}\n    />\n  );\n\n  return (\n    <FormControl fullWidth>\n      <InputLabel variant=\"filled\">\n        {name}\n      </InputLabel>\n      <FilledInput\n        required\n        className={classes.boxy}\n        autoFocus\n        autoComplete=\"off\"\n        type=\"text\"\n        id={`option-${index + 1}`}\n        placeholder={\n          type === \"range\"\n            ? \"Enter range label here..\"\n            : \"Enter option title here..\"\n        }\n        value={option || \"\"}\n        onChange={(e) => handleChange(index, e)}\n        endAdornment={\n          <InputAdornment position=\"end\">\n            <IconButton size=\"small\" onClick={handleMenuClick}>\n              <MoreHorizIcon />\n            </IconButton>\n            <Menu\n              id=\"simple-menu\"\n              keepMounted\n              anchorEl={anchorEl}\n              open={Boolean(anchorEl)}\n              onClose={handleMenuClose}\n            >\n              {/* switch case without break for options */}\n              <MenuItem button={false}>\n                <FormControl fullWidth>\n                  <InputLabel variant=\"filled\">Option tooltip</InputLabel>\n                  <FilledInput\n                    required\n                    className={classes.boxy}\n                    autoFocus\n                    autoComplete=\"off\"\n                    type=\"text\"\n                    id={`option-${index + 1}-tooltip`}\n                    placeholder=\"Enter option tooltip text here..\"\n                    value={option || \"\"}\n                    onChange={(e) => handleChange(index, e)}\n                  />\n                </FormControl>\n              </MenuItem>\n              <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n              <MenuItem onClick={handleMenuClose}>Logout</MenuItem>\n            </Menu>\n            <IconButton\n              size=\"small\"\n              onClick={() => handleRemoveOptionClick(index)}\n            >\n              <DeleteIcon />\n            </IconButton>\n          </InputAdornment>\n        }\n      />\n    </FormControl>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}