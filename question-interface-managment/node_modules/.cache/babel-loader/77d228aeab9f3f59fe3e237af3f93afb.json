{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { initial2, preprocessQuestion, CLEAN_SUPER_QUESTION } from \"../../utils\";\nexport const questionSlice = createSlice({\n  name: \"question\",\n  initialState: {},\n  reducers: {\n    setQuestion: (state, action) => {\n      return action.payload;\n    },\n    setProperty: (state, action) => {\n      state[action.payload.property] = action.payload.value;\n    },\n    setTextArrayField: (state, action) => {\n      state[action.payload.property][action.payload.index] = action.payload.value;\n    },\n    resetAll: (state, action) => {\n      return CLEAN_SUPER_QUESTION;\n    },\n    removeOption: (state, action) => {\n      state[\"options\"] = state[\"options\"].filter((_, i) => i !== action.payload);\n    }\n  }\n});\nexport const {\n  setQuestion,\n  setProperty,\n  setTextArrayField,\n  resetAll,\n  removeOption\n} = questionSlice.actions;\nexport function selectProperty(propertyName) {\n  return state => state.question[propertyName];\n}\nexport default questionSlice.reducer;","map":{"version":3,"sources":["/Users/palp/now/QMI/question-interface-managment/src/features/questionProperties/questionSlice.js"],"names":["createSlice","initial2","preprocessQuestion","CLEAN_SUPER_QUESTION","questionSlice","name","initialState","reducers","setQuestion","state","action","payload","setProperty","property","value","setTextArrayField","index","resetAll","removeOption","filter","_","i","actions","selectProperty","propertyName","question","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SACEC,QADF,EAEEC,kBAFF,EAGEC,oBAHF,QAIO,aAJP;AAMA,OAAO,MAAMC,aAAa,GAAGJ,WAAW,CAAC;AACvCK,EAAAA,IAAI,EAAE,UADiC;AAEvCC,EAAAA,YAAY,EAAE,EAFyB;AAGvCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,WAAW,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC9B,aAAOA,MAAM,CAACC,OAAd;AACD,KAHO;AAIRC,IAAAA,WAAW,EAAE,CAACH,KAAD,EAAQC,MAAR,KAAmB;AAC9BD,MAAAA,KAAK,CAACC,MAAM,CAACC,OAAP,CAAeE,QAAhB,CAAL,GAAiCH,MAAM,CAACC,OAAP,CAAeG,KAAhD;AACD,KANO;AAORC,IAAAA,iBAAiB,EAAE,CAACN,KAAD,EAAQC,MAAR,KAAmB;AACpCD,MAAAA,KAAK,CAACC,MAAM,CAACC,OAAP,CAAeE,QAAhB,CAAL,CAA+BH,MAAM,CAACC,OAAP,CAAeK,KAA9C,IACEN,MAAM,CAACC,OAAP,CAAeG,KADjB;AAED,KAVO;AAWRG,IAAAA,QAAQ,EAAE,CAACR,KAAD,EAAQC,MAAR,KAAmB;AAC3B,aAAOP,oBAAP;AACD,KAbO;AAcRe,IAAAA,YAAY,EAAE,CAACT,KAAD,EAAQC,MAAR,KAAmB;AAC/BD,MAAAA,KAAK,CAAC,SAAD,CAAL,GAAmBA,KAAK,CAAC,SAAD,CAAL,CAAiBU,MAAjB,CACjB,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,KAAKX,MAAM,CAACC,OADN,CAAnB;AAGD;AAlBO;AAH6B,CAAD,CAAjC;AAyBP,OAAO,MAAM;AACXH,EAAAA,WADW;AAEXI,EAAAA,WAFW;AAGXG,EAAAA,iBAHW;AAIXE,EAAAA,QAJW;AAKXC,EAAAA;AALW,IAMTd,aAAa,CAACkB,OANX;AAQP,OAAO,SAASC,cAAT,CAAwBC,YAAxB,EAAsC;AAC3C,SAAQf,KAAD,IAAWA,KAAK,CAACgB,QAAN,CAAeD,YAAf,CAAlB;AACD;AAED,eAAepB,aAAa,CAACsB,OAA7B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport {\n  initial2,\n  preprocessQuestion,\n  CLEAN_SUPER_QUESTION,\n} from \"../../utils\";\n\nexport const questionSlice = createSlice({\n  name: \"question\",\n  initialState: {},\n  reducers: {\n    setQuestion: (state, action) => {\n      return action.payload;\n    },\n    setProperty: (state, action) => {\n      state[action.payload.property] = action.payload.value;\n    },\n    setTextArrayField: (state, action) => {\n      state[action.payload.property][action.payload.index] =\n        action.payload.value;\n    },\n    resetAll: (state, action) => {\n      return CLEAN_SUPER_QUESTION;\n    },\n    removeOption: (state, action) => {\n      state[\"options\"] = state[\"options\"].filter(\n        (_, i) => i !== action.payload\n      );\n    },\n  },\n});\n\nexport const {\n  setQuestion,\n  setProperty,\n  setTextArrayField,\n  resetAll,\n  removeOption\n} = questionSlice.actions;\n\nexport function selectProperty(propertyName) {\n  return (state) => state.question[propertyName];\n}\n\nexport default questionSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}