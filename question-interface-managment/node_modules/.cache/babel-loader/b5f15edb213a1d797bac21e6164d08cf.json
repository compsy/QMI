{"ast":null,"code":"var _jsxFileName = \"/Users/palp/now/QMI/question-interface-managment/src/components/properties/TypeProperty.js\";\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\nimport { QUESTION_TYPES, capitalize } from \"../../utils\";\nimport { setProperty } from \"../../features/questionProperties/questionSlice\";\nexport default function TypeProperty() {\n  const type = useSelector(state => state.question.type);\n  const dispatch = useDispatch();\n  return React.createElement(\"div\", {\n    className: \"type-property\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    variant: \"filled\",\n    onClick: e => e.stopPropagation(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    id: \"type-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Type\"), React.createElement(Select, {\n    fullWidth: true,\n    labelId: \"type-label\",\n    id: \"type\",\n    name: \"type\",\n    value: type || \"\",\n    onChange: e => dispatch(setProperty({\n      property: \"type\",\n      value: e.target.value\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, QUESTION_TYPES.map(obj => React.createElement(MenuItem, {\n    key: obj.type,\n    value: obj.type,\n    disabled: obj.disabled,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, capitalize(obj.type))))));\n}","map":{"version":3,"sources":["/Users/palp/now/QMI/question-interface-managment/src/components/properties/TypeProperty.js"],"names":["React","useSelector","useDispatch","FormControl","InputLabel","Select","MenuItem","QUESTION_TYPES","capitalize","setProperty","TypeProperty","type","state","question","dispatch","e","stopPropagation","property","value","target","map","obj","disabled"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,EAAsBC,UAAtB,EAAkCC,MAAlC,EAA0CC,QAA1C,QAA0D,mBAA1D;AACA,SAASC,cAAT,EAAyBC,UAAzB,QAA2C,aAA3C;AACA,SAASC,WAAT,QAA4B,iDAA5B;AAEA,eAAe,SAASC,YAAT,GAAwB;AACrC,QAAMC,IAAI,GAAGV,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACC,QAAN,CAAeF,IAAzB,CAAxB;AACA,QAAMG,QAAQ,GAAGZ,WAAW,EAA5B;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAC,QAArB;AAA8B,IAAA,OAAO,EAAGa,CAAD,IAAOA,CAAC,CAACC,eAAF,EAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,EAAE,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE,oBAAC,MAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,OAAO,EAAC,YAFV;AAGE,IAAA,EAAE,EAAC,MAHL;AAIE,IAAA,IAAI,EAAC,MAJP;AAKE,IAAA,KAAK,EAAEL,IAAI,IAAI,EALjB;AAME,IAAA,QAAQ,EAAGI,CAAD,IAAOD,QAAQ,CAACL,WAAW,CAAC;AAACQ,MAAAA,QAAQ,EAAE,MAAX;AAAmBC,MAAAA,KAAK,EAAEH,CAAC,CAACI,MAAF,CAASD;AAAnC,KAAD,CAAZ,CAN3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGX,cAAc,CAACa,GAAf,CAAoBC,GAAD,IAClB,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,GAAG,CAACV,IAAnB;AAAyB,IAAA,KAAK,EAAEU,GAAG,CAACV,IAApC;AAA0C,IAAA,QAAQ,EAAEU,GAAG,CAACC,QAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGd,UAAU,CAACa,GAAG,CAACV,IAAL,CADb,CADD,CARH,CAFF,CADF,CADF;AAqBD","sourcesContent":["\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\nimport { QUESTION_TYPES, capitalize } from \"../../utils\";\nimport { setProperty } from \"../../features/questionProperties/questionSlice\";\n\nexport default function TypeProperty() {\n  const type = useSelector(state => state.question.type);\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"type-property\">\n      <FormControl variant=\"filled\" onClick={(e) => e.stopPropagation()}>\n        <InputLabel id=\"type-label\">Type</InputLabel>\n        <Select\n          fullWidth\n          labelId=\"type-label\"\n          id=\"type\"\n          name=\"type\"\n          value={type || \"\"}\n          onChange={(e) => dispatch(setProperty({property: \"type\", value: e.target.value}))}\n        >\n          {QUESTION_TYPES.map((obj) => (\n            <MenuItem key={obj.type} value={obj.type} disabled={obj.disabled}>\n              {capitalize(obj.type)}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}