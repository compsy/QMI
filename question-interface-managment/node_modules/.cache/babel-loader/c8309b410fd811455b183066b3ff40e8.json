{"ast":null,"code":"var _jsxFileName = \"/Users/palp/now/QMI/question-interface-managment/src/App.js\";\nimport React, { useState } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport ButtonAppBar from './components/ButtonAppBar';\nimport LoginForm from './components/LoginForm';\nimport UserHome from './components/UserHome';\nimport StickyHeadTable from './components/StickyHeadTable';\nimport { Container } from '@material-ui/core';\nimport UserQuestionnaires from './components/UserQuestionnaires';\nimport EditQuestionnaire from './components/EditQuestionnaire';\nimport CustomizedDialogs from './components/CustomizedDialogs';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport PrivateRoute from './components/PrivateRoute';\nimport history from './components/history';\nimport MyQuestionnaires from './components/MyQuestionnaires';\nimport NewEdit from './components/NewEdit';\nconst users = [{\n  name: \"john\",\n  password: \"lennon\",\n  questionnaires: []\n}, {\n  name: \"paul\",\n  password: \"mccartney\",\n  questionnaires: []\n}, {\n  name: \"ringo\",\n  password: \"starr\",\n  questionnaires: []\n}];\nconst questionnaire_test = [{\n  id: \"v1\",\n  type: \"checkbox\",\n  title: 'Waar hadden de belangrijkste gebeurtenissen mee te maken?',\n  options: ['hobby/sport', 'werk', 'vriendschap', 'romantische relatie', 'thuis']\n}, {\n  id: \"v2\",\n  type: \"checkbox\",\n  title: 'Waar hadden de belangrijkste gebeurtenissen mee te maken?',\n  options: ['hobby/sport', 'werk', 'vriendschap', 'romantische relatie', 'thuis']\n}, {\n  id: \"v3\",\n  type: \"radio\",\n  title: 'Waar hadden de belangrijkste gebeurtenissen mee te maken?',\n  options: ['hobby/sport', 'werk', 'vriendschap', 'romantische relatie', 'thuis']\n}, {\n  id: \"v4\",\n  type: \"radio\",\n  title: 'Waar hadden de belangrijkste gebeurtenissen mee te maken?',\n  options: ['hobby/sport', 'werk', 'vriendschap', 'romantische relatie', 'thuis']\n}];\n\nfunction App() {\n  const [questionnaires, setQuestionnaires] = useState([{\n    id: Math.floor(Math.random() * 100),\n    title: \"person test\",\n    questions: [{\n      id: \":v1\",\n      type: \":likert\",\n      title: \"How are you?\",\n      options: [\"very good\", \"good\", \"ok\", \"bad\", \"very bad\"]\n    }, {\n      id: \":v2\",\n      type: \":checkbox\",\n      title: \"Who are you?\",\n      options: [\"me\", \"you\"]\n    }, {\n      id: \":v3\",\n      type: \":radio\",\n      title: \"What are you?\",\n      options: [\"dog\", \"cat\", \"human\", \"chimp\"]\n    }],\n    scores: []\n  }, {\n    id: Math.floor(Math.random() * 100),\n    title: \"person test\",\n    questions: [{\n      id: \":v1\",\n      type: \":likert\",\n      title: \"How are you?\",\n      options: [\"very good\", \"good\", \"ok\", \"bad\", \"very bad\"]\n    }, {\n      id: \":v2\",\n      type: \":checkbox\",\n      title: \"Who are you?\",\n      options: [\"me\", \"you\"]\n    }, {\n      id: \":v3\",\n      type: \":radio\",\n      title: \"What are you?\",\n      options: [\"dog\", \"cat\", \"human\", \"chimp\"]\n    }],\n    scores: []\n  }]);\n  return (// <Router history={history}>\n    //   <Switch>\n    //     <Route exact path=\"/login\" component={LoginForm} />\n    //     <PrivateRoute exact path=\"/\" component={UserHome}/>\n    //     <PrivateRoute\n    //       exact\n    //       exact path=\"/questionnaires\"\n    //       component={UserQuestionnaires}\n    //       questionnaires={questionnaires}\n    //       addQuestionnaire={addQuestionnaire}\n    //       getQuestionnaire={getQuestionnaire}\n    //     />\n    //   </Switch>\n    // </Router>\n    React.createElement(NewEdit, {\n      questions: questionnaire_test,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    })\n  );\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/palp/now/QMI/question-interface-managment/src/App.js"],"names":["React","useState","ButtonAppBar","LoginForm","UserHome","StickyHeadTable","Container","UserQuestionnaires","EditQuestionnaire","CustomizedDialogs","BrowserRouter","Router","Switch","Route","Link","PrivateRoute","history","MyQuestionnaires","NewEdit","users","name","password","questionnaires","questionnaire_test","id","type","title","options","App","setQuestionnaires","Math","floor","random","questions","scores"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport ButtonAppBar from './components/ButtonAppBar';\nimport LoginForm from './components/LoginForm';\nimport UserHome from './components/UserHome';\nimport StickyHeadTable from './components/StickyHeadTable';\nimport { Container } from '@material-ui/core';\nimport UserQuestionnaires from './components/UserQuestionnaires';\nimport EditQuestionnaire from './components/EditQuestionnaire';\nimport CustomizedDialogs from './components/CustomizedDialogs';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport PrivateRoute from './components/PrivateRoute';\n\nimport history from './components/history';\nimport MyQuestionnaires from './components/MyQuestionnaires';\nimport NewEdit from './components/NewEdit';\n\nconst users = [\n  {name: \"john\", password: \"lennon\", questionnaires: []},\n  {name: \"paul\", password: \"mccartney\", questionnaires: []},\n  {name: \"ringo\", password: \"starr\", questionnaires: []},\n]\n\nconst questionnaire_test = [\n  {\n    id: \"v1\",\n    type: \"checkbox\",\n    title: 'Waar hadden de belangrijkste gebeurtenissen mee te maken?',\n    options: ['hobby/sport', 'werk', 'vriendschap', 'romantische relatie', 'thuis']\n  },\n  {\n    id: \"v2\",\n    type: \"checkbox\",\n    title: 'Waar hadden de belangrijkste gebeurtenissen mee te maken?',\n    options: ['hobby/sport', 'werk', 'vriendschap', 'romantische relatie', 'thuis']\n  },\n  {\n    id: \"v3\",\n    type: \"radio\",\n    title: 'Waar hadden de belangrijkste gebeurtenissen mee te maken?',\n    options: ['hobby/sport', 'werk', 'vriendschap', 'romantische relatie', 'thuis']\n  },\n  {\n    id: \"v4\",\n    type: \"radio\",\n    title: 'Waar hadden de belangrijkste gebeurtenissen mee te maken?',\n    options: ['hobby/sport', 'werk', 'vriendschap', 'romantische relatie', 'thuis']\n  },\n]\n\nfunction App() {\n  const [questionnaires, setQuestionnaires] = useState([\n    {\n      id: Math.floor(Math.random()*100),\n      title: \"person test\",\n      questions: [\n        {id: \":v1\", type: \":likert\", title: \"How are you?\", options: [\"very good\", \"good\", \"ok\", \"bad\", \"very bad\"]},\n        {id: \":v2\", type: \":checkbox\", title: \"Who are you?\", options: [\"me\", \"you\"]},\n        {id: \":v3\", type: \":radio\", title: \"What are you?\", options: [\"dog\", \"cat\", \"human\", \"chimp\"]},\n      ],\n      scores: []\n    },\n    {\n      id: Math.floor(Math.random()*100),\n      title: \"person test\",\n      questions: [\n        {id: \":v1\", type: \":likert\", title: \"How are you?\", options: [\"very good\", \"good\", \"ok\", \"bad\", \"very bad\"]},\n        {id: \":v2\", type: \":checkbox\", title: \"Who are you?\", options: [\"me\", \"you\"]},\n        {id: \":v3\", type: \":radio\", title: \"What are you?\", options: [\"dog\", \"cat\", \"human\", \"chimp\"]},\n      ],\n      scores: []\n    }\n  ])\n\n  return (\n    // <Router history={history}>\n    //   <Switch>\n    //     <Route exact path=\"/login\" component={LoginForm} />\n    //     <PrivateRoute exact path=\"/\" component={UserHome}/>\n    //     <PrivateRoute\n    //       exact\n    //       exact path=\"/questionnaires\"\n    //       component={UserQuestionnaires}\n    //       questionnaires={questionnaires}\n    //       addQuestionnaire={addQuestionnaire}\n    //       getQuestionnaire={getQuestionnaire}\n    //     />\n    //   </Switch>\n    // </Router>\n\n    <NewEdit questions={questionnaire_test}/>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}