{"ast":null,"code":"var _jsxFileName = \"/Users/palp/now/QMI/question-interface-managment/src/components/StringifiedJSONCard.js\";\nimport React from 'react';\nimport { useContext } from 'react';\nimport { QuestionnaireContext } from '../contexts/QuestionnaireContext';\nimport { Card, Typography } from '@material-ui/core';\nimport { useEffect } from 'react';\n\nconst StringifiedJSONCard = () => {\n  const {\n    questions\n  } = useContext(QuestionnaireContext); // formats the ids\n\n  const toPrint = questions.map((question, index) => {\n    const obj = question.type === \"range\" ? () => {\n      const obj2 = { ...question,\n        id: `v${index + 1}`,\n        labels: [...question.options]\n      };\n      delete obj2.options;\n      return;\n    } : { ...question,\n      id: `v${index + 1}`\n    };\n    return obj;\n  });\n  return React.createElement(Card, {\n    variant: \"outlined\",\n    style: {\n      wordWrap: \"break-word\",\n      wordBreak: \"break-word\",\n      margin: \"0.5em auto\",\n      padding: \"2em\",\n      height: \"150px\",\n      overflow: \"scroll\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"body2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, JSON.stringify(toPrint)));\n};\n\nexport default StringifiedJSONCard;","map":{"version":3,"sources":["/Users/palp/now/QMI/question-interface-managment/src/components/StringifiedJSONCard.js"],"names":["React","useContext","QuestionnaireContext","Card","Typography","useEffect","StringifiedJSONCard","questions","toPrint","map","question","index","obj","type","obj2","id","labels","options","wordWrap","wordBreak","margin","padding","height","overflow","JSON","stringify"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,oBAAT,QAAqC,kCAArC;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,mBAAjC;AACA,SAASC,SAAT,QAA0B,OAA1B;;AAEA,MAAMC,mBAAmB,GAAG,MAAM;AAChC,QAAM;AAAEC,IAAAA;AAAF,MAAgBN,UAAU,CAACC,oBAAD,CAAhC,CADgC,CAEhC;;AACA,QAAMM,OAAO,GAAGD,SAAS,CAACE,GAAV,CAAc,CAACC,QAAD,EAAWC,KAAX,KAAqB;AACjD,UAAMC,GAAG,GAAGF,QAAQ,CAACG,IAAT,KAAkB,OAAlB,GAA6B,MAAM;AAC7C,YAAMC,IAAI,GAAG,EACX,GAAGJ,QADQ;AAEXK,QAAAA,EAAE,EAAG,IAAGJ,KAAK,GAAG,CAAE,EAFP;AAGXK,QAAAA,MAAM,EAAE,CAAC,GAAGN,QAAQ,CAACO,OAAb;AAHG,OAAb;AAKJ,aAAOH,IAAI,CAACG,OAAZ;AACI;AACK,KARK,GAQD,EACH,GAAGP,QADA;AAEHK,MAAAA,EAAE,EAAG,IAAGJ,KAAK,GAAG,CAAE;AAFf,KARX;AAYA,WAAOC,GAAP;AACD,GAde,CAAhB;AAeA,SACE,oBAAC,IAAD;AACE,IAAA,OAAO,EAAC,UADV;AAEE,IAAA,KAAK,EAAE;AACLM,MAAAA,QAAQ,EAAE,YADL;AAELC,MAAAA,SAAS,EAAE,YAFN;AAGLC,MAAAA,MAAM,EAAE,YAHH;AAILC,MAAAA,OAAO,EAAE,KAJJ;AAKLC,MAAAA,MAAM,EAAE,OALH;AAMLC,MAAAA,QAAQ,EAAE;AANL,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BC,IAAI,CAACC,SAAL,CAAejB,OAAf,CAA7B,CAXF,CADF;AAeD,CAjCD;;AAmCA,eAAeF,mBAAf","sourcesContent":["import React from 'react'\nimport { useContext } from 'react';\nimport { QuestionnaireContext } from '../contexts/QuestionnaireContext';\nimport { Card, Typography } from '@material-ui/core';\nimport { useEffect } from 'react';\n\nconst StringifiedJSONCard = () => {\n  const { questions } = useContext(QuestionnaireContext);\n  // formats the ids\n  const toPrint = questions.map((question, index) => {\n    const obj = question.type === \"range\" ? (() => {\n      const obj2 = {\n        ...question,\n        id: `v${index + 1}`,\n        labels: [...question.options]\n  };\n  delete obj2.options;\n      return \n          }) : {\n            ...question,\n            id: `v${index + 1}`\n          };\n    return obj;\n  });\n  return (\n    <Card\n      variant=\"outlined\"\n      style={{\n        wordWrap: \"break-word\",\n        wordBreak: \"break-word\",\n        margin: \"0.5em auto\",\n        padding: \"2em\",\n        height: \"150px\",\n        overflow: \"scroll\"\n      }}\n    >\n      <Typography variant=\"body2\">{JSON.stringify(toPrint)}</Typography>\n    </Card>\n  );\n};\n\nexport default StringifiedJSONCard;"]},"metadata":{},"sourceType":"module"}