{"ast":null,"code":"var _jsxFileName = \"/Users/palp/now/QMI/question-interface-managment/src/components/properties/TypeProperty.js\";\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FormControl, InputLabel, Select, MenuItem, Paper, makeStyles } from \"@material-ui/core\";\nimport { QUESTION_TYPES, capitalize } from \"../../utils\";\nimport { setProperty } from \"../../features/questionProperties/questionSlice\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    overflow: \"auto\",\n    wordWrap: \"break-word\",\n    wordBreak: \"break-word\"\n  },\n  field: {\n    borderRadius: 0\n  }\n}));\nexport default function TypeProperty() {\n  const type = useSelector(state => state.question.type);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  return (// <div className=\"type-property\">\n    React.createElement(Paper, {\n      className: classes.paper,\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      variant: \"filled\",\n      onClick: e => e.stopPropagation(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      id: \"type-label\",\n      style: {\n        userSelect: \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Type\"), React.createElement(Select, {\n      className: classes.field,\n      labelId: \"type-label\",\n      id: \"type\",\n      name: \"type\",\n      value: type || \"\",\n      onChange: e => dispatch(setProperty({\n        property: \"type\",\n        value: e.target.value\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, QUESTION_TYPES.map(obj => React.createElement(MenuItem, {\n      key: obj.type,\n      value: obj.type,\n      disabled: obj.disabled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, capitalize(obj.type)))))) // {/* </div> */}\n\n  );\n}","map":{"version":3,"sources":["/Users/palp/now/QMI/question-interface-managment/src/components/properties/TypeProperty.js"],"names":["React","useSelector","useDispatch","FormControl","InputLabel","Select","MenuItem","Paper","makeStyles","QUESTION_TYPES","capitalize","setProperty","useStyles","theme","paper","overflow","wordWrap","wordBreak","field","borderRadius","TypeProperty","type","state","question","dispatch","classes","e","stopPropagation","userSelect","property","value","target","map","obj","disabled"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACEC,WADF,EAEEC,UAFF,EAGEC,MAHF,EAIEC,QAJF,EAKEC,KALF,EAMEC,UANF,QAOO,mBAPP;AAQA,SAASC,cAAT,EAAyBC,UAAzB,QAA2C,aAA3C;AACA,SAASC,WAAT,QAA4B,iDAA5B;AAEA,MAAMC,SAAS,GAAGJ,UAAU,CAAEK,KAAD,KAAY;AACvCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE,MADL;AAELC,IAAAA,QAAQ,EAAE,YAFL;AAGLC,IAAAA,SAAS,EAAE;AAHN,GADgC;AAMvCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,YAAY,EAAE;AADT;AANgC,CAAZ,CAAD,CAA5B;AAWA,eAAe,SAASC,YAAT,GAAwB;AACrC,QAAMC,IAAI,GAAGpB,WAAW,CAAEqB,KAAD,IAAWA,KAAK,CAACC,QAAN,CAAeF,IAA3B,CAAxB;AACA,QAAMG,QAAQ,GAAGtB,WAAW,EAA5B;AACA,QAAMuB,OAAO,GAAGb,SAAS,EAAzB;AAEA,SACE;AACA,wBAAC,KAAD;AAAO,MAAA,SAAS,EAAEa,OAAO,CAACX,KAA1B;AAAiC,MAAA,OAAO,EAAC,UAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAa,MAAA,OAAO,EAAC,QAArB;AAA8B,MAAA,OAAO,EAAGY,CAAD,IAAOA,CAAC,CAACC,eAAF,EAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,EAAE,EAAC,YAAf;AAA4B,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAE;AAAd,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE,oBAAC,MAAD;AACC,MAAA,SAAS,EAAEH,OAAO,CAACP,KADpB;AAEE,MAAA,OAAO,EAAC,YAFV;AAGE,MAAA,EAAE,EAAC,MAHL;AAIE,MAAA,IAAI,EAAC,MAJP;AAKE,MAAA,KAAK,EAAEG,IAAI,IAAI,EALjB;AAME,MAAA,QAAQ,EAAGK,CAAD,IACRF,QAAQ,CAACb,WAAW,CAAC;AAAEkB,QAAAA,QAAQ,EAAE,MAAZ;AAAoBC,QAAAA,KAAK,EAAEJ,CAAC,CAACK,MAAF,CAASD;AAApC,OAAD,CAAZ,CAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUGrB,cAAc,CAACuB,GAAf,CAAoBC,GAAD,IAClB,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,GAAG,CAACZ,IAAnB;AAAyB,MAAA,KAAK,EAAEY,GAAG,CAACZ,IAApC;AAA0C,MAAA,QAAQ,EAAEY,GAAG,CAACC,QAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGxB,UAAU,CAACuB,GAAG,CAACZ,IAAL,CADb,CADD,CAVH,CAFF,CADF,CAFF,CAuBE;;AAvBF;AAyBD","sourcesContent":["import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Paper,\n  makeStyles,\n} from \"@material-ui/core\";\nimport { QUESTION_TYPES, capitalize } from \"../../utils\";\nimport { setProperty } from \"../../features/questionProperties/questionSlice\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    overflow: \"auto\",\n    wordWrap: \"break-word\",\n    wordBreak: \"break-word\",\n  },\n  field: {\n    borderRadius: 0\n  }\n}));\n\nexport default function TypeProperty() {\n  const type = useSelector((state) => state.question.type);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  return (\n    // <div className=\"type-property\">\n    <Paper className={classes.paper} variant=\"outlined\">\n      <FormControl variant=\"filled\" onClick={(e) => e.stopPropagation()}>\n        <InputLabel id=\"type-label\" style={{ userSelect: \"none\" }}>Type</InputLabel>\n        <Select\n         className={classes.field} \n          labelId=\"type-label\"\n          id=\"type\"\n          name=\"type\"\n          value={type || \"\"}\n          onChange={(e) =>\n            dispatch(setProperty({ property: \"type\", value: e.target.value }))\n          }\n        >\n          {QUESTION_TYPES.map((obj) => (\n            <MenuItem key={obj.type} value={obj.type} disabled={obj.disabled}>\n              {capitalize(obj.type)}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </Paper>\n    // {/* </div> */}\n  );\n}\n"]},"metadata":{},"sourceType":"module"}